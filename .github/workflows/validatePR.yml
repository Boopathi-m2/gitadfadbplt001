on:
  pull_request:
    branches:
    - main

permissions:
      id-token: write
      contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Check Out
      uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.4.1
      with:
        node-version: 18.x

    - name: install ADF Utilities package
      run: npm install
      working-directory: ${{github.workspace}}/build  #
 
# Validates all of the Data Factory resources in the repository.
    - name: Validate
      run: npm run build validate ${{github.workspace}}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/adfadbdev001
      working-directory: ${{github.workspace}}/build
 
    - name: Export ARM template
      run: npm run build export ${{github.workspace}}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/adfadbdev001 adf-artifact 
      working-directory: ${{github.workspace}}/build
   
# In order to leverage the artifact in another job, we need to upload it with the upload action 
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: adf-artifact # (4) use the same artifact name you used in the previous export step
        path: ${{github.workspace}}/build/adf-artifact
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    
 # Download the previously uploaded artifact to leverage it later in the release job     
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: adf-artifact
        path: ${{github.workspace}}/build/adf-artifact

    - name: Login via Az module
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true 
      
    - name: Run Pre-deployment script adfadbdev001-live
      shell: pwsh
      run: ${{github.workspace}}/build/adf-artifact/PrePostDeploymentScript.ps1 -armTemplate "${{github.workspace}}/build/adf-artifact/ARMTemplateForFactory.json" -ResourceGroupName "${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}" -DataFactoryName "adfadbdev001" -predeployment $true -deleteDeployment $false

    - name: Run ARM deploy adfadbdev001-live
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}
        template: ARMTemplateForFactory.json
        parameters: ./build/adf-artifact/ARMTemplateParametersForFactory.json factoryName=adfadbdev001
        
    - name: Run Post-deployment script adfadbdev001-live
      uses: Azure/powershell@v2
      with:
        inlineScript: ${{github.workspace}}/build/adf-artifact/PrePostDeploymentScript.ps1 -ResourceGroupName "${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}" -armTemplate "${{github.workspace}}/build/adf-artifact/ARMTemplateForFactory.json" -DataFactoryName 'adfadbdev001' -predeployment $false -deleteDeployment $true
        azPSVersion: "latest"
