on:
  push:
    branches:
    - main

permissions:
      id-token: write
      contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
# Installs Node and the npm packages saved in your package.json file in the build
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.4.1
      with:
        node-version: 14.x
        
    - name: install ADF Utilities package
      run: npm install
      working-directory: ${{github.workspace}}/build  #
        
# Validates all of the Data Factory resources in the repository.
    - name: Validate
      run: npm run build validate ${{github.workspace}}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/adfadbdev001
      working-directory: ${{github.workspace}}/build
 

    - name: Validate and Generate ARM template
      run: npm run build export ${{github.workspace}}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/adfadbdev001 "ExportedArmTemplate" 
      working-directory: ${{github.workspace}}/build
 
# In order to leverage the artifact in another job, we need to upload it with the upload action 
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ExportedArmTemplate # (4) use the same artifact name you used in the previous export step
        path: ${{github.workspace}}/build/ExportedArmTemplate

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
	
 # Download the previously uploaded artifact to leverage it later in the release job     
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        name: ExportedArmTemplate # (5) Artifact name 

    - name: Login via Az module
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true 

    - name: data-factory-deploy
      uses: Azure/data-factory-deploy-action@v1.2.0
      with:
        resourceGroupName: ${{ secrets.AZURE_DATAFACTORY_RESOURCEGROUP }} # (6) your target ADF resource group name
        dataFactoryName: adfadbdev001 # (7) your target ADF name
        armTemplateFile: ARMTemplateForFactory.json # (8) ARM template file name ARMTemplateForFactory.json
        armTemplateParametersFile: ARMTemplateParametersForFactory.json # (9) ARM template parameters file name ARMTemplateParametersForFactory.json
        #additionalParameters: # (10) Parameters which will be replaced in the ARM template. Expected format 'key1=value key2=value keyN=value'. At the minimum here you should provide the target ADF name parameter. Check the ARMTemplateParametersForFactory.json file for all the parameters that are expected in your scenario
	 
	# skipAzModuleInstallation:  # Parameters which skip the Az module installation. Optional, default is false.â€‹
