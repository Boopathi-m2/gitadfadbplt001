use schema PHLEDW_ACCESS;
create or replace view EDW_VW_PH_POS_WM_COMPETITOR_ANALYSIS(
	"jj_mnth_id",
	"brnch_cd",
	"brnch_nm",
	"brand_ctgry_cd",
	"brand_ctgry_nm",
	"vendor_cd",
	"vendor_nm",
	"item_cd",
	"item_nm",
	"pos_qty",
	"pos_gts"
) as
select jj_mnth_id as "jj_mnth_id",
    brnch_cd as "brnch_cd",
    brnch_nm as "brnch_nm",
    brand_ctgry_cd as "brand_ctgry_cd",
    brand_ctgry_nm as "brand_ctgry_nm",
    vendor_cd as "vendor_cd",
    vendor_nm as "vendor_nm",
    item_cd as "item_cd",
    item_nm as "item_nm",
    pos_qty as "pos_qty",
    pos_gts as "pos_gts"
from phlitg_integration.itg_ph_pos_wm_competitor;
create or replace view ITG_MDS_PH_DISTRIBUTOR_PRODUCT(
	"promo_reg_nm",
	"promo_strt_period",
	"effective_to",
	"dstrbtr_item_cd",
	"effective_from",
	"last_chg_datetime",
	"promo_end_period",
	"dstrbtr_item_nm",
	"dstrbtr_grp_cd",
	"dstrbtr_grp_nm",
	"updt_dttm",
	"active",
	"sap_item_nm",
	"promo_reg_ind",
	"sap_item_cd",
	"crtd_dttm"
) as 
select
promo_reg_nm AS "promo_reg_nm",
promo_strt_period AS "promo_strt_period",
effective_to AS "effective_to",
dstrbtr_item_cd AS "dstrbtr_item_cd",
effective_from AS "effective_from",
last_chg_datetime AS "last_chg_datetime",
promo_end_period AS "promo_end_period",
dstrbtr_item_nm AS "dstrbtr_item_nm",
dstrbtr_grp_cd AS "dstrbtr_grp_cd",
dstrbtr_grp_nm AS "dstrbtr_grp_nm",
updt_dttm AS "updt_dttm",
active AS "active",
sap_item_nm AS "sap_item_nm",
promo_reg_ind AS "promo_reg_ind",
sap_item_cd AS "sap_item_cd",
crtd_dttm AS "crtd_dttm"


from phlitg_integration.itg_mds_ph_distributor_product;
create or replace view ITG_MDS_PH_GT_CUSTOMER(
	"dstrbtr_cust_id",
	"dstrbtr_cust_nm",
	"slsmn",
	"slsmn_desc",
	"rep_grp2",
	"rep_grp2_desc",
	"rep_grp3",
	"rep_grp3_desc",
	"rep_grp4",
	"rep_grp4_desc",
	"rep_grp5",
	"rep_grp5_desc",
	"rep_grp6",
	"rep_grp6_desc",
	"status",
	"address",
	"zip",
	"slm_grp_cd",
	"frequency_visit",
	"store_prioritization",
	"latitude",
	"longitude",
	"rpt_grp9",
	"rpt_grp9_desc",
	"rpt_grp11",
	"rpt_grp11_desc",
	"sls_dist",
	"sls_dist_desc",
	"dstrbtr_grp_cd",
	"dstrbtr_grp_nm",
	"rpt_grp_15_desc",
	"last_chg_datetime",
	"effective_from",
	"effective_to",
	"active",
	"crtd_dttm",
	"updt_dttm",
	"zip_code",
	"zip_cd_name",
	"barangay_code",
	"barangay_cd_name",
	"long_lat_source"
) as
select 
dstrbtr_cust_id as "dstrbtr_cust_id",
dstrbtr_cust_nm as "dstrbtr_cust_nm",
slsmn as "slsmn",
slsmn_desc as "slsmn_desc",
rep_grp2 as "rep_grp2",
rep_grp2_desc as "rep_grp2_desc",
rep_grp3 as "rep_grp3",
rep_grp3_desc as "rep_grp3_desc",
rep_grp4 as "rep_grp4",
rep_grp4_desc as "rep_grp4_desc",
rep_grp5 as "rep_grp5",
rep_grp5_desc as "rep_grp5_desc",
rep_grp6 as "rep_grp6",
rep_grp6_desc as "rep_grp6_desc",
status as "status",
address as "address",
zip as "zip",
slm_grp_cd as "slm_grp_cd",
frequency_visit as "frequency_visit",
store_prioritization as "store_prioritization",
latitude as "latitude",
longitude as "longitude",
rpt_grp9 as "rpt_grp9",
rpt_grp9_desc as "rpt_grp9_desc",
rpt_grp11 as "rpt_grp11",
rpt_grp11_desc as "rpt_grp11_desc",
sls_dist as "sls_dist",
sls_dist_desc as "sls_dist_desc",
dstrbtr_grp_cd as "dstrbtr_grp_cd",
dstrbtr_grp_nm as "dstrbtr_grp_nm",
rpt_grp_15_desc as "rpt_grp_15_desc",
last_chg_datetime as "last_chg_datetime",
effective_from as "effective_from",
effective_to as "effective_to",
active as "active",
crtd_dttm as "crtd_dttm",
updt_dttm as "updt_dttm",
zip_code as "zip_code",
zip_cd_name as "zip_cd_name",
barangay_code as "barangay_code",
barangay_cd_name as "barangay_cd_name",
long_lat_source as "long_lat_source"
from phlitg_integration.itg_mds_ph_gt_customer;
create or replace view ITG_MDS_PH_LAV_CUSTOMER(
	"dstrbtr_grp_cd",
	"zip_code",
	"rpt_grp_3_cd",
	"longitude",
	"rpt_grp_9_desc",
	"sub_chnl_cd",
	"channel_desc",
	"parent_cust_nm",
	"effective_from",
	"rpt_grp_9_cd",
	"mun_nm",
	"region_nm",
	"region_cd",
	"province_cd",
	"zip_cd_name",
	"cust_nm",
	"parent_cust_cd",
	"barangay_cd_name",
	"effective_to",
	"active",
	"province_nm",
	"rpt_grp_4_cd",
	"rpt_grp_6_desc",
	"mun_cd",
	"rpt_grp_3_desc",
	"updt_dttm",
	"dstrbtr_grp_nm",
	"rpt_grp_7_cd",
	"rpt_grp_6_cd",
	"cust_id",
	"rpt_grp_5_cd",
	"rpt_grp_7_desc",
	"barangay_code",
	"rpt_grp_5_desc",
	"channel_cd",
	"long_lat_source",
	"latitude",
	"crtd_dttm",
	"last_chg_datetime",
	"rpt_grp_4_desc",
	"sub_chnl_desc"
) as 
select
dstrbtr_grp_cd AS "dstrbtr_grp_cd",
zip_code AS "zip_code",
rpt_grp_3_cd AS "rpt_grp_3_cd",
longitude AS "longitude",
rpt_grp_9_desc AS "rpt_grp_9_desc",
sub_chnl_cd AS "sub_chnl_cd",
channel_desc AS "channel_desc",
parent_cust_nm AS "parent_cust_nm",
effective_from AS "effective_from",
rpt_grp_9_cd AS "rpt_grp_9_cd",
mun_nm AS "mun_nm",
region_nm AS "region_nm",
region_cd AS "region_cd",
province_cd AS "province_cd",
zip_cd_name AS "zip_cd_name",
cust_nm AS "cust_nm",
parent_cust_cd AS "parent_cust_cd",
barangay_cd_name AS "barangay_cd_name",
effective_to AS "effective_to",
active AS "active",
province_nm AS "province_nm",
rpt_grp_4_cd AS "rpt_grp_4_cd",
rpt_grp_6_desc AS "rpt_grp_6_desc",
mun_cd AS "mun_cd",
rpt_grp_3_desc AS "rpt_grp_3_desc",
updt_dttm AS "updt_dttm",
dstrbtr_grp_nm AS "dstrbtr_grp_nm",
rpt_grp_7_cd AS "rpt_grp_7_cd",
rpt_grp_6_cd AS "rpt_grp_6_cd",
cust_id AS "cust_id",
rpt_grp_5_cd AS "rpt_grp_5_cd",
rpt_grp_7_desc AS "rpt_grp_7_desc",
barangay_code AS "barangay_code",
rpt_grp_5_desc AS "rpt_grp_5_desc",
channel_cd AS "channel_cd",
long_lat_source AS "long_lat_source",
latitude AS "latitude",
crtd_dttm AS "crtd_dttm",
last_chg_datetime AS "last_chg_datetime",
rpt_grp_4_desc AS "rpt_grp_4_desc",
sub_chnl_desc AS "sub_chnl_desc"


from phlitg_integration.itg_mds_ph_lav_customer;
create or replace view ITG_MDS_PH_LAV_PRODUCT(
	"item_cd",
	"item_nm",
	"ims_otc_tag",
	"ims_otc_tag_nm",
	"npi_strt_period",
	"price_lst_period",
	"promo_strt_period",
	"promo_end_period",
	"promo_reg_ind",
	"promo_reg_nm",
	"hero_sku_ind",
	"hero_sku_nm",
	"rpt_grp_1",
	"rpt_grp_1_desc",
	"rpt_grp_2",
	"rpt_grp_2_desc",
	"rpt_grp_3",
	"rpt_grp_3_desc",
	"rpt_grp_4",
	"rpt_grp_4_desc",
	"rpt_grp_5",
	"rpt_grp_5_desc",
	"scard_brand_cd",
	"scard_brand_desc",
	"scard_franchise_cd",
	"scard_franchise_desc",
	"scard_put_up_cd",
	"scard_put_up_desc",
	"scard_varient_cd",
	"scard_varient_desc",
	"last_chg_datetime",
	"effective_from",
	"effective_to",
	"active",
	"crtd_dttm",
	"updt_dttm"
) as
select 
item_cd as "item_cd",
item_nm as "item_nm",
ims_otc_tag as "ims_otc_tag",
ims_otc_tag_nm as "ims_otc_tag_nm",
npi_strt_period as "npi_strt_period",
price_lst_period as "price_lst_period",
promo_strt_period as "promo_strt_period",
promo_end_period as "promo_end_period",
promo_reg_ind as "promo_reg_ind",
promo_reg_nm as "promo_reg_nm",
hero_sku_ind as "hero_sku_ind",
hero_sku_nm as "hero_sku_nm",
rpt_grp_1 as "rpt_grp_1",
rpt_grp_1_desc as "rpt_grp_1_desc",
rpt_grp_2 as "rpt_grp_2",
rpt_grp_2_desc as "rpt_grp_2_desc",
rpt_grp_3 as "rpt_grp_3",
rpt_grp_3_desc as "rpt_grp_3_desc",
rpt_grp_4 as "rpt_grp_4",
rpt_grp_4_desc as "rpt_grp_4_desc",
rpt_grp_5 as "rpt_grp_5",
rpt_grp_5_desc as "rpt_grp_5_desc",
scard_brand_cd as "scard_brand_cd",
scard_brand_desc as "scard_brand_desc",
scard_franchise_cd as "scard_franchise_cd",
scard_franchise_desc as "scard_franchise_desc",
scard_put_up_cd as "scard_put_up_cd",
scard_put_up_desc as "scard_put_up_desc",
scard_varient_cd as "scard_varient_cd",
scard_varient_desc as "scard_varient_desc",
last_chg_datetime as "last_chg_datetime",
effective_from as "effective_from",
effective_to as "effective_to",
active as "active",
crtd_dttm as "crtd_dttm",
updt_dttm as "updt_dttm"
from phlitg_integration.itg_mds_ph_lav_product;
create or replace view ITG_MDS_PH_POS_CUSTOMERS(
	"code",
	"cust_cd",
	"brnch_cd",
	"brnch_nm",
	"prov_cd",
	"prov_nm",
	"region_cd",
	"region_nm",
	"mncplty_cd",
	"mncplty_nm",
	"city_cd",
	"city_nm",
	"chnl_sub_grp_cd",
	"pms_nm",
	"ash_no",
	"ash_nm",
	"address1",
	"address2",
	"jj_chnl_cd",
	"tsr",
	"pmr",
	"chnl",
	"area_cd",
	"area_nm",
	"region_nm2",
	"wsman",
	"route",
	"status",
	"operating_hrs",
	"da_tag",
	"dizr_tag",
	"brnch_grp1",
	"brnch_grp2",
	"outlet_typ",
	"store_typ_cd",
	"store_typ_desc",
	"prov_cd2",
	"data_compln_status",
	"ae_nm",
	"dt_opnd",
	"store_tin_no",
	"store_size_cd",
	"store_size",
	"store_mtrx_cd",
	"store_mtrx",
	"class",
	"store_clsfn",
	"jj_sold_to",
	"jj_ship_to",
	"bp",
	"sales_grp",
	"dsm",
	"sales_man_tag",
	"branch_no",
	"mdc_tag",
	"derived_branchno",
	"last_chg_datetime",
	"effective_from",
	"effective_to",
	"active",
	"crtd_dttm",
	"updt_dttm",
	"zip_code",
	"zip_cd_name",
	"barangay_code",
	"barangay_cd_name",
	"long_lat_source",
	"latitude",
	"longitude"
) as
select 
code as "code",
cust_cd as "cust_cd",
brnch_cd as "brnch_cd",
brnch_nm as "brnch_nm",
prov_cd as "prov_cd",
prov_nm as "prov_nm",
region_cd as "region_cd",
region_nm as "region_nm",
mncplty_cd as "mncplty_cd",
mncplty_nm as "mncplty_nm",
city_cd as "city_cd",
city_nm as "city_nm",
chnl_sub_grp_cd as "chnl_sub_grp_cd",
pms_nm as "pms_nm",
ash_no as "ash_no",
ash_nm as "ash_nm",
address1 as "address1",
address2 as "address2",
jj_chnl_cd as "jj_chnl_cd",
tsr as "tsr",
pmr as "pmr",
chnl as "chnl",
area_cd as "area_cd",
area_nm as "area_nm",
region_nm2 as "region_nm2",
wsman as "wsman",
route as "route",
status as "status",
operating_hrs as "operating_hrs",
da_tag as "da_tag",
dizr_tag as "dizr_tag",
brnch_grp1 as "brnch_grp1",
brnch_grp2 as "brnch_grp2",
outlet_typ as "outlet_typ",
store_typ_cd as "store_typ_cd",
store_typ_desc as "store_typ_desc",
prov_cd2 as "prov_cd2",
data_compln_status as "data_compln_status",
ae_nm as "ae_nm",
dt_opnd as "dt_opnd",
store_tin_no as "store_tin_no",
store_size_cd as "store_size_cd",
store_size as "store_size",
store_mtrx_cd as "store_mtrx_cd",
store_mtrx as "store_mtrx",
class as "class",
store_clsfn as "store_clsfn",
jj_sold_to as "jj_sold_to",
jj_ship_to as "jj_ship_to",
bp as "bp",
sales_grp as "sales_grp",
dsm as "dsm",
sales_man_tag as "sales_man_tag",
branch_no as "branch_no",
mdc_tag as "mdc_tag",
derived_branchno as "derived_branchno",
last_chg_datetime as "last_chg_datetime",
effective_from as "effective_from",
effective_to as "effective_to",
active as "active",
crtd_dttm as "crtd_dttm",
updt_dttm as "updt_dttm",
zip_code as "zip_code",
zip_cd_name as "zip_cd_name",
barangay_code as "barangay_code",
barangay_cd_name as "barangay_cd_name",
long_lat_source as "long_lat_source",
latitude as "latitude",
longitude as "longitude"
from phlitg_integration.itg_mds_ph_pos_customers;
create or replace view ITG_MDS_PH_POS_PRICELIST(
	"code",
	"item_cd",
	"item_desc",
	"jj_mnth_id",
	"consumer_bar_cd",
	"shippers_bar_cd",
	"dz_per_case",
	"lst_price_case",
	"lst_price_dz",
	"lst_price_unit",
	"srp",
	"status",
	"status_nm",
	"last_chg_datetime",
	"effective_from",
	"effective_to",
	"active",
	"crtd_dttm",
	"updt_dttm"
) as
select 
code as "code",
item_cd as "item_cd",
item_desc as "item_desc",
jj_mnth_id as "jj_mnth_id",
consumer_bar_cd as "consumer_bar_cd",
shippers_bar_cd as "shippers_bar_cd",
dz_per_case as "dz_per_case",
lst_price_case as "lst_price_case",
lst_price_dz as "lst_price_dz",
lst_price_unit as "lst_price_unit",
srp as "srp",
status as "status",
status_nm as "status_nm",
last_chg_datetime as "last_chg_datetime",
effective_from as "effective_from",
effective_to as "effective_to",
active as "active",
crtd_dttm as "crtd_dttm",
updt_dttm as "updt_dttm"
from phlitg_integration.itg_mds_ph_pos_pricelist;
create or replace view ITG_MDS_PH_REF_DISTRIBUTORS(
	"primary_sold_to",
	"rpt_grp_14_desc",
	"active",
	"rpt_grp_10",
	"rpt_grp_8",
	"updt_dttm",
	"primary_sold_to_nm",
	"rpt_grp_14",
	"last_chg_datetime",
	"effective_to",
	"rpt_grp_8_desc",
	"rpt_grp_12",
	"crtd_dttm",
	"rpt_grp_13_desc",
	"dstrbtr_grp_cd",
	"effective_from",
	"rpt_grp_12_desc",
	"rpt_grp_10_desc",
	"rpt_grp_13",
	"dstrbtr_grp_nm"
) as 
select
primary_sold_to AS "primary_sold_to",
rpt_grp_14_desc AS "rpt_grp_14_desc",
active AS "active",
rpt_grp_10 AS "rpt_grp_10",
rpt_grp_8 AS "rpt_grp_8",
updt_dttm AS "updt_dttm",
primary_sold_to_nm AS "primary_sold_to_nm",
rpt_grp_14 AS "rpt_grp_14",
last_chg_datetime AS "last_chg_datetime",
effective_to AS "effective_to",
rpt_grp_8_desc AS "rpt_grp_8_desc",
rpt_grp_12 AS "rpt_grp_12",
crtd_dttm AS "crtd_dttm",
rpt_grp_13_desc AS "rpt_grp_13_desc",
dstrbtr_grp_cd AS "dstrbtr_grp_cd",
effective_from AS "effective_from",
rpt_grp_12_desc AS "rpt_grp_12_desc",
rpt_grp_10_desc AS "rpt_grp_10_desc",
rpt_grp_13 AS "rpt_grp_13",
dstrbtr_grp_nm AS "dstrbtr_grp_nm"


from phlitg_integration.itg_mds_ph_ref_distributors;
create or replace view ITG_MDS_PH_REF_PARENT_CUSTOMER(
	"rpt_grp_1_desc",
	"rpt_grp_1",
	"rpt_grp_11",
	"parent_cust_cd",
	"rpt_grp_2",
	"channel",
	"rpt_grp_2_desc",
	"customer_segmentation1",
	"customer_segmentation2",
	"rpt_grp_12_desc",
	"effective_from",
	"crtd_dttm",
	"rpt_grp_12",
	"active",
	"last_chg_datetime",
	"rpt_grp_11_desc",
	"effective_to",
	"updt_dttm",
	"parent_cust_nm"
) as 
select
rpt_grp_1_desc AS "rpt_grp_1_desc",
rpt_grp_1 AS "rpt_grp_1",
rpt_grp_11 AS "rpt_grp_11",
parent_cust_cd AS "parent_cust_cd",
rpt_grp_2 AS "rpt_grp_2",
channel AS "channel",
rpt_grp_2_desc AS "rpt_grp_2_desc",
customer_segmentation1 AS "customer_segmentation1",
customer_segmentation2 AS "customer_segmentation2",
rpt_grp_12_desc AS "rpt_grp_12_desc",
effective_from AS "effective_from",
crtd_dttm AS "crtd_dttm",
rpt_grp_12 AS "rpt_grp_12",
active AS "active",
last_chg_datetime AS "last_chg_datetime",
rpt_grp_11_desc AS "rpt_grp_11_desc",
effective_to AS "effective_to",
updt_dttm AS "updt_dttm",
parent_cust_nm AS "parent_cust_nm"
from phlitg_integration.itg_mds_ph_ref_parent_customer;
create or replace view ITG_PH_DMS_SELLOUT_SALES_FACT(
	"dstrbtr_grp_cd",
	"cntry_cd",
	"dstrbtr_cust_id",
	"trnsfrm_cust_id",
	"order_dt",
	"invoice_dt",
	"order_no",
	"invoice_no",
	"sls_route_id",
	"sls_route_nm",
	"sls_grp",
	"sls_rep_id",
	"sls_rep_nm",
	"dstrbtr_prod_id",
	"uom",
	"gross_price",
	"qty",
	"gts_val",
	"dscnt",
	"nts_val",
	"line_num",
	"prom_id",
	"cdl_dttm",
	"crtd_dttm",
	"updt_dttm",
	"wh_id",
	"sls_rep_type",
	"order_qty",
	"order_delivery_dt",
	"order_status"
) as
select 
dstrbtr_grp_cd as "dstrbtr_grp_cd",
cntry_cd as "cntry_cd",
dstrbtr_cust_id as "dstrbtr_cust_id",
trnsfrm_cust_id as "trnsfrm_cust_id",
order_dt as "order_dt",
invoice_dt as "invoice_dt",
order_no as "order_no",
invoice_no as "invoice_no",
sls_route_id as "sls_route_id",
sls_route_nm as "sls_route_nm",
sls_grp as "sls_grp",
sls_rep_id as "sls_rep_id",
sls_rep_nm as "sls_rep_nm",
dstrbtr_prod_id as "dstrbtr_prod_id",
uom as "uom",
gross_price as "gross_price",
qty as "qty",
gts_val as "gts_val",
dscnt as "dscnt",
nts_val as "nts_val",
line_num as "line_num",
prom_id as "prom_id",
cdl_dttm as "cdl_dttm",
crtd_dttm as "crtd_dttm",
updt_dttm as "updt_dttm",
wh_id as "wh_id",
sls_rep_type as "sls_rep_type",
order_qty as "order_qty",
order_delivery_dt as "order_delivery_dt",
order_status as "order_status"
from phlitg_integration.itg_ph_dms_sellout_sales_fact;
USE SCHEMA PHLITG_INTEGRATION;
create or replace TABLE SDL_RAW_PH_BP_TRGT (
	JJ_MNTH_ID VARCHAR(10),
	CUST_ID VARCHAR(20),
	TRGT_TYPE VARCHAR(10),
	BRND_CD VARCHAR(100),
	TP_TRGT_AMT VARCHAR(100),
	FILENAME VARCHAR(50),
	RUN_ID VARCHAR(50),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_CLOBOTICS_STORE_RAW_DATA (
	PROJECT VARCHAR(255),
	PERIOD VARCHAR(255),
	PLANID VARCHAR(255),
	PLAN_STATUS VARCHAR(255),
	PLAN_FINISH_TIME VARCHAR(50),
	USERNAME VARCHAR(200),
	DISPLAY_USERNAME VARCHAR(200),
	STORE_CODE VARCHAR(255),
	STORE_NAME VARCHAR(255),
	CITY VARCHAR(255),
	SHOP_FRONT_IMAGES VARCHAR(255),
	CHANNEL VARCHAR(255),
	PLAN_START_TIME VARCHAR(50),
	PLAN_UPLOAD_TIME VARCHAR(50),
	SKU_ID VARCHAR(100),
	SKU_NAME VARCHAR(255),
	CATEGORY VARCHAR(255),
	SUB_CATEGORY VARCHAR(255),
	BRAND VARCHAR(255),
	MANUFACTURER VARCHAR(255),
	KPI VARCHAR(255),
	VALUE NUMBER(10,0),
	FILENAME VARCHAR(200),
	RUN_ID VARCHAR(14),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_CLOBOTICS_SURVEY_DATA (
	PROJECT VARCHAR(255),
	PERIOD VARCHAR(255),
	TASKID VARCHAR(255),
	PLAN_ID VARCHAR(255),
	PLAN_STATUS VARCHAR(255),
	PLAN_FINISH_TIME VARCHAR(50),
	USERNAME VARCHAR(200),
	USER_DISPLAY_NAME VARCHAR(200),
	STORE_CODE VARCHAR(255),
	STORE_NAME VARCHAR(255),
	CITY VARCHAR(255),
	CHANNEL VARCHAR(255),
	TASK_NAME VARCHAR(100),
	TASK_TYPE VARCHAR(100),
	TASK_STATUS VARCHAR(50),
	CREATE_TIME VARCHAR(50),
	TASK_ACTION_TIME VARCHAR(50),
	QN_CODE VARCHAR(200),
	QN_NAME VARCHAR(255),
	QUESTION_CODE VARCHAR(255),
	QUESTION_CONTENT VARCHAR(255),
	QUESTION_ANSWER_CODE VARCHAR(100),
	QUESTION_ANSWER_NAME VARCHAR(255),
	QUESTION_ANSWER_VALUE VARCHAR(100),
	QUESTION_ANSWER_PHOTOS VARCHAR(255),
	FILENAME VARCHAR(200),
	RUN_ID VARCHAR(14),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_CLOBOTICS_TASK_RAW_DATA (
	PROJECT VARCHAR(100),
	PERIOD VARCHAR(200),
	TASKID VARCHAR(200),
	PLANID VARCHAR(100),
	PLAN_STATUS VARCHAR(50),
	PLAN_FINISH_TIME VARCHAR(50),
	USERNAME VARCHAR(200),
	DISPLAY_USERNAME VARCHAR(200),
	STORE_CODE VARCHAR(255),
	STORE_NAME VARCHAR(255),
	CITY VARCHAR(255),
	SHOP_FRONT_IMAGES VARCHAR(255),
	CHANNEL VARCHAR(255),
	TASK_NAME VARCHAR(200),
	TASK_STATUS VARCHAR(100),
	CREATE_TIME VARCHAR(50),
	TASK_ACTION_TIME VARCHAR(50),
	STITCHED_IMAGE_URL VARCHAR(255),
	IMAGE_QUALITY VARCHAR(100),
	SKU_ID VARCHAR(100),
	SKU_NAME VARCHAR(255),
	CATEGORY VARCHAR(255),
	SUB_CATEGORY VARCHAR(255),
	BRAND VARCHAR(255),
	MANUFACTURER VARCHAR(255),
	KPI VARCHAR(255),
	VALUE VARCHAR(50),
	CRT_DTTM TIMESTAMP_NTZ(9),
	FILENAME VARCHAR(200),
	RUN_ID VARCHAR(14)
);
create or replace TABLE SDL_RAW_PH_CPG_CALLS (
	DSTRBTR_GRP_CD VARCHAR(100),
	CNTRY_CD VARCHAR(100),
	PLANNED_VISIT VARCHAR(100),
	ACTUAL_VISIT VARCHAR(100),
	SLS_REP_ID VARCHAR(100),
	CUST_ID VARCHAR(100),
	ORDER_NO VARCHAR(100),
	REASON_NO_ORDER VARCHAR(255),
	IN_CPG_FLAG VARCHAR(10),
	APPROVED_FLAG VARCHAR(10),
	FILENAME VARCHAR(255),
	CDL_DTTM VARCHAR(50),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_DMS_SELLOUT_SALES_FACT_PH (
	DSTRBTR_GRP_CD VARCHAR(255),
	CNTRY_CD VARCHAR(255),
	DSTRBTR_CUST_ID VARCHAR(255),
	ORDER_DT VARCHAR(255),
	INVOICE_DT VARCHAR(255),
	ORDER_NO VARCHAR(255),
	INVOICE_NO VARCHAR(255),
	SLS_ROUTE_ID VARCHAR(255),
	SLS_ROUTE_NM VARCHAR(255),
	SLS_GRP VARCHAR(255),
	SLS_REP_ID VARCHAR(255),
	SLS_REP_NM VARCHAR(255),
	DSTRBTR_PROD_ID VARCHAR(255),
	UOM VARCHAR(255),
	GROSS_PRICE VARCHAR(255),
	QTY VARCHAR(255),
	GTS_VAL VARCHAR(255),
	DSCNT VARCHAR(255),
	NTS_VAL VARCHAR(255),
	LINE_NUM VARCHAR(255),
	PROM_ID VARCHAR(255),
	WH_ID VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DATE TIMESTAMP_NTZ(9),
	FILENAME VARCHAR(255),
	SLS_REP_TYPE VARCHAR(255),
	ORDER_QTY VARCHAR(255),
	ORDER_DELIVERY_DT VARCHAR(255),
	ORDER_STATUS VARCHAR(255)
);
create or replace TABLE SDL_RAW_PH_DMS_SELLOUT_STOCK_FACT_PH (
	DSTRBTR_GRP_CD VARCHAR(255),
	CNTRY_CD VARCHAR(255),
	WH_CD VARCHAR(255),
	INVOICE_DT VARCHAR(255),
	DSTRBTR_PROD_ID VARCHAR(255),
	QTY VARCHAR(255),
	UOM VARCHAR(255),
	AMT VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DATE TIMESTAMP_NTZ(9),
	FILENAME VARCHAR(255)
);
create or replace TABLE SDL_RAW_PH_IOP_TRGT (
	MEASURE VARCHAR(30),
	TARGET_TYPE VARCHAR(20),
	YEAR VARCHAR(10),
	BRAND VARCHAR(100),
	SEGMENT VARCHAR(100),
	CUSTOMER_CODE VARCHAR(20),
	ACCOUNT VARCHAR(50),
	JAN VARCHAR(50),
	FEB VARCHAR(50),
	MAR VARCHAR(50),
	APR VARCHAR(50),
	MAY VARCHAR(50),
	JUN VARCHAR(50),
	JUL VARCHAR(50),
	AUG VARCHAR(50),
	SEP VARCHAR(50),
	OCT VARCHAR(50),
	NOV VARCHAR(50),
	DEC VARCHAR(50),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILENAME VARCHAR(100)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_LANDMARK_DS (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_DEPT VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_LANDMARK_SM (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_PUREGOLD (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_GROCERY VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_ROBINSONS_DS (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_DEPT VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_ROBINSONS_SM (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_RUSTANS (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_SHM (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_SVI_SMC (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_NON_ISE_WALTERMART (
	RET_NM_PREFIX VARCHAR(50),
	SKU_CODE VARCHAR(50),
	BRAND VARCHAR(500),
	BARCODE VARCHAR(100),
	ITEM_DESCRIPTION VARCHAR(500),
	MSL_LARGE VARCHAR(10),
	MSL_SMALL VARCHAR(10),
	MSL_PREMIUM VARCHAR(10),
	MONTH VARCHAR(10),
	WEEK VARCHAR(10),
	REASON VARCHAR(500),
	ACCT_DELIV_DATE VARCHAR(100),
	OSA_CHECK_DATE DATE,
	ENCODED_REPORT VARCHAR(500),
	TEAM_LEADER VARCHAR(100),
	BRANCH_CODE VARCHAR(50),
	BRANCH_CODE_ORIGINAL VARCHAR(50),
	BRANCH_CLASSIFICATION VARCHAR(100),
	BRANCH_NAME VARCHAR(100),
	OSA_FLAG VARCHAR(10),
	RETAILER_NAME VARCHAR(50),
	FILENAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_MERCURY_PH (
	JJ_MNTH_ID VARCHAR(256),
	STORE_CD VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	QTY VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_PUREGOLD (
	PO_NUMBER VARCHAR(50),
	VENDOR_CODE VARCHAR(50),
	VENDOR_NAME VARCHAR(50),
	FROM_STORE VARCHAR(50),
	TO_STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	SKU VARCHAR(50),
	SKU_DESC VARCHAR(100),
	QTY VARCHAR(50),
	RCR_NUMBER VARCHAR(50),
	FILE_NAME VARCHAR(50),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_ROBINSONS_PH (
	JJ_MNTH_ID VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	POS_PROD_NM VARCHAR(256),
	UPC VARCHAR(256),
	STORE_CD VARCHAR(256),
	STORE_NM VARCHAR(256),
	UOM VARCHAR(256),
	QTY VARCHAR(256),
	NET_AMT VARCHAR(256),
	TAX_AMT VARCHAR(256),
	AMT VARCHAR(256),
	CUST_PRICE_PC VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_RUSTANS_PH (
	JJ_MNTH_ID VARCHAR(256),
	STORE_CD VARCHAR(256),
	STORE_NM VARCHAR(256),
	POS_DT VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	POS_PROD_NM VARCHAR(256),
	QTY VARCHAR(256),
	AMT VARCHAR(256),
	AS_NM VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_SM_GOODS (
	BUSINESS_NAME VARCHAR(100),
	TITLE VARCHAR(50),
	DATE VARCHAR(50),
	VENDOR_CODE VARCHAR(50),
	VENDOR_NAME VARCHAR(50),
	RECEIPT_DATE VARCHAR(50),
	TERMS_AND_DISCOUNT VARCHAR(50),
	SITE_CODE VARCHAR(50),
	SITE_NAME VARCHAR(100),
	SHIP_TO VARCHAR(100),
	GR_NUMBER VARCHAR(50),
	PO_NUMBER VARCHAR(50),
	CANCEL_DATE VARCHAR(50),
	TOTAL_ARTICLES VARCHAR(50),
	ARTICLE_NUMBER VARCHAR(50),
	ARTICLE_DESCRIPTION VARCHAR(100),
	UPC VARCHAR(50),
	UOM VARCHAR(50),
	RECEIVED_QTY VARCHAR(50),
	REMARKS VARCHAR(250),
	FILE_NAME VARCHAR(50),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_SOUTH_STAR_PH (
	JJ_MNTH_ID VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	POS_PROD_NM VARCHAR(256),
	UPC VARCHAR(256),
	SUPPLIER_PROD_CD VARCHAR(256),
	STORE_CD VARCHAR(256),
	STORE_NM VARCHAR(256),
	QTY VARCHAR(256),
	AMT VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_WALTERMART_PH (
	JJ_MNTH_ID VARCHAR(256),
	CODING VARCHAR(256),
	STORE_CD VARCHAR(256),
	STORE_NM VARCHAR(256),
	DEPT VARCHAR(256),
	SDEPT VARCHAR(256),
	WALTER_CLASS VARCHAR(256),
	SCLASS VARCHAR(256),
	CATEGORY_NM VARCHAR(256),
	VENDOR_CD VARCHAR(256),
	VENDOR_NM VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	POS_PROD_NM VARCHAR(256),
	QTY VARCHAR(256),
	AMT VARCHAR(256),
	CUST_PRICE_PC VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_POS_WATSONS_PH (
	JJ_MNTH_ID VARCHAR(256),
	STORE_CD VARCHAR(256),
	STORE_NM VARCHAR(256),
	POS_PROD_CD VARCHAR(256),
	POS_PROD_NM VARCHAR(256),
	AMT VARCHAR(256),
	QTY VARCHAR(256),
	CUST_PRICE_PC VARCHAR(256),
	FILE_NM VARCHAR(256),
	CDL_DTTM VARCHAR(256),
	CURR_DATE TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_RAW_PH_SFMC_BOUNCE_DATA (
	OYB_ACCOUNT_ID VARCHAR(20),
	JOB_ID VARCHAR(20),
	LIST_ID VARCHAR(10),
	BATCH_ID VARCHAR(10),
	SUBSCRIBER_ID VARCHAR(20),
	SUBSCRIBER_KEY VARCHAR(100),
	EVENT_DATE TIMESTAMP_NTZ(9),
	IS_UNIQUE VARCHAR(10),
	DOMAIN VARCHAR(50),
	BOUNCE_CATEGORY_ID VARCHAR(10),
	BOUNCE_CATEGORY VARCHAR(30),
	BOUNCE_SUBCATEGORY_ID VARCHAR(10),
	BOUNCE_SUBCATEGORY VARCHAR(30),
	BOUNCE_TYPE_ID VARCHAR(10),
	BOUNCE_TYPE VARCHAR(30),
	SMTP_BOUNCE_REASON VARCHAR(1000),
	SMTP_MESSAGE VARCHAR(200),
	SMTP_CODE VARCHAR(10),
	TRIGGERER_SEND_DEFINITION_OBJECT_ID VARCHAR(50),
	TRIGGERED_SEND_CUSTOMER_KEY VARCHAR(10),
	EMAIL_SUBJECT VARCHAR(200),
	BCC_EMAIL VARCHAR(50),
	EMAIL_NAME VARCHAR(100),
	EMAIL_ID VARCHAR(20),
	EMAIL_ADDRESS VARCHAR(100),
	FILE_NAME VARCHAR(100),
	CRT_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_CHILDREN_DATA (
	CHILD_NM VARCHAR(200),
	CHILD_BIRTH_MNTH VARCHAR(100),
	CHILD_BIRTH_YEAR VARCHAR(10),
	CHILD_GENDER VARCHAR(100),
	PARENT_KEY VARCHAR(200),
	CHILD_NUMBER VARCHAR(30),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_CLICK_DATA (
	OYB_ACCOUNT_ID VARCHAR(50),
	JOB_ID VARCHAR(50),
	LIST_ID VARCHAR(50),
	BATCH_ID VARCHAR(50),
	SUBSCRIBER_ID VARCHAR(50),
	SUBSCRIBER_KEY VARCHAR(100),
	EVENT_DATE TIMESTAMP_NTZ(9),
	DOMAIN VARCHAR(50),
	URL VARCHAR(1000),
	LINK_NAME VARCHAR(200),
	LINK_CONTENT VARCHAR(1000),
	IS_UNIQUE VARCHAR(10),
	EMAIL_NAME VARCHAR(100),
	EMAIL_SUBJECT VARCHAR(200),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_COMPLAINT_DATA (
	OYB_ACCOUNT_ID VARCHAR(50),
	JOB_ID VARCHAR(50),
	LIST_ID VARCHAR(50),
	BATCH_ID VARCHAR(50),
	SUBSCRIBER_ID VARCHAR(50),
	SUBSCRIBER_KEY VARCHAR(100),
	EVENT_DATE TIMESTAMP_NTZ(9),
	IS_UNIQUE VARCHAR(10),
	DOMAIN VARCHAR(50),
	EMAIL_SUBJECT VARCHAR(200),
	EMAIL_NAME VARCHAR(100),
	EMAIL_ID VARCHAR(100),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_OPEN_DATA (
	OYB_ACCOUNT_ID VARCHAR(50),
	JOB_ID VARCHAR(50),
	LIST_ID VARCHAR(30),
	BATCH_ID VARCHAR(30),
	SUBSCRIBER_ID VARCHAR(50),
	SUBSCRIBER_KEY VARCHAR(100),
	EMAIL_NAME VARCHAR(100),
	EMAIL_SUBJECT VARCHAR(200),
	BCC_EMAIL VARCHAR(50),
	EMAIL_ID VARCHAR(30),
	EVENT_DATE TIMESTAMP_NTZ(9),
	DOMAIN VARCHAR(50),
	IS_UNIQUE VARCHAR(10),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_SENT_DATA (
	OYB_ACCOUNT_ID VARCHAR(50),
	JOB_ID VARCHAR(50),
	LIST_ID VARCHAR(30),
	BATCH_ID VARCHAR(30),
	SUBSCRIBER_ID VARCHAR(50),
	SUBSCRIBER_KEY VARCHAR(100),
	EVENT_DATE TIMESTAMP_NTZ(9),
	DOMAIN VARCHAR(50),
	TRIGGERER_SEND_DEFINITION_OBJECT_ID VARCHAR(50),
	TRIGGERED_SEND_CUSTOMER_KEY VARCHAR(10),
	EMAIL_NAME VARCHAR(100),
	EMAIL_SUBJECT VARCHAR(200),
	EMAIL_ID VARCHAR(30),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_RAW_PH_SFMC_UNSUBSCRIBE_DATA (
	OYB_ACCOUNT_ID VARCHAR(50),
	JOB_ID VARCHAR(50),
	LIST_ID VARCHAR(30),
	BATCH_ID VARCHAR(30),
	SUBSCRIBER_ID VARCHAR(50),
	SUBSCRIBER_KEY VARCHAR(100),
	EVENT_DATE TIMESTAMP_NTZ(9),
	DOMAIN VARCHAR(50),
	EMAIL_NAME VARCHAR(100),
	EMAIL_SUBJECT VARCHAR(200),
	EMAIL_ID VARCHAR(30),
	IS_UNIQUE VARCHAR(10),
	FILE_NAME VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);

create or replace TABLE SDL_PH_CLOBOTICS_TASK_RAW_DATA (
	PROJECT VARCHAR(100),
	PERIOD VARCHAR(200),
	TASKID VARCHAR(200),
	PLANID VARCHAR(100),
	PLAN_STATUS VARCHAR(50),
	PLAN_FINISH_TIME VARCHAR(50),
	USERNAME VARCHAR(200),
	DISPLAY_USERNAME VARCHAR(200),
	STORE_CODE VARCHAR(255),
	STORE_NAME VARCHAR(255),
	CITY VARCHAR(255),
	SHOP_FRONT_IMAGES VARCHAR(255),
	CHANNEL VARCHAR(255),
	TASK_NAME VARCHAR(200),
	TASK_STATUS VARCHAR(100),
	CREATE_TIME VARCHAR(50),
	TASK_ACTION_TIME VARCHAR(50),
	STITCHED_IMAGE_URL VARCHAR(255),
	IMAGE_QUALITY VARCHAR(100),
	SKU_ID VARCHAR(100),
	SKU_NAME VARCHAR(255),
	CATEGORY VARCHAR(255),
	SUB_CATEGORY VARCHAR(255),
	BRAND VARCHAR(255),
	MANUFACTURER VARCHAR(255),
	KPI VARCHAR(255),
	VALUE VARCHAR(50),
	CRT_DTTM TIMESTAMP_NTZ(9),
	FILENAME VARCHAR(200),
	RUN_ID VARCHAR(14)
);

create or replace TABLE SDL_PH_CLOBOTICS_STORE_RAW_DATA (
	PROJECT VARCHAR(255),
	PERIOD VARCHAR(255),
	PLANID VARCHAR(255),
	PLAN_STATUS VARCHAR(255),
	PLAN_FINISH_TIME VARCHAR(50),
	USERNAME VARCHAR(200),
	DISPLAY_USERNAME VARCHAR(200),
	STORE_CODE VARCHAR(255),
	STORE_NAME VARCHAR(255),
	CITY VARCHAR(255),
	SHOP_FRONT_IMAGES VARCHAR(255),
	CHANNEL VARCHAR(255),
	PLAN_START_TIME VARCHAR(50),
	PLAN_UPLOAD_TIME VARCHAR(50),
	SKU_ID VARCHAR(100),
	SKU_NAME VARCHAR(255),
	CATEGORY VARCHAR(255),
	SUB_CATEGORY VARCHAR(255),
	BRAND VARCHAR(255),
	MANUFACTURER VARCHAR(255),
	KPI VARCHAR(255),
	VALUE NUMBER(10,0),
	FILENAME VARCHAR(200),
	RUN_ID VARCHAR(14),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
