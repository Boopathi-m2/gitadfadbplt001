USE DATABASE PROD_DNA_LOAD;
USE schema SNAPOSESDL_RAW;

CREATE TABLE IF NOT EXISTS SDL_MDS_MY_CUSTOMER_HIERARCHY (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CUST_GRP_CODE_CODE VARCHAR(500),
	CUST_GRP_CODE_NAME VARCHAR(500),
	CUST_GRP_CODE_ID NUMBER(18,0),
	CUSTOMER VARCHAR(200),
	CHANNEL_CODE VARCHAR(500),
	CHANNEL_NAME VARCHAR(500),
	CHANNEL_ID NUMBER(18,0),
	TERRITORY_CODE VARCHAR(500),
	TERRITORY_NAME VARCHAR(500),
	TERRITORY_ID NUMBER(18,0),
	REG_CHANNEL_CODE VARCHAR(500),
	REG_CHANNEL_NAME VARCHAR(500),
	REG_CHANNEL_ID NUMBER(18,0),
	REG_GROUP_CODE VARCHAR(500),
	REG_GROUP_NAME VARCHAR(500),
	REG_GROUP_ID NUMBER(18,0),
	CUSTOMER_SEGMENTATION_LEVEL_2_CODE VARCHAR(500),
	CUSTOMER_SEGMENTATION_LEVEL_2_NAME VARCHAR(500),
	CUSTOMER_SEGMENTATION_LEVEL_2_ID NUMBER(18,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_MY_GT_OUTLETATTRIBUTES (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	DISTRIBUTOR_ID VARCHAR(200),
	DISTRIBUTOR_NAME VARCHAR(200),
	CUSTOMER_CODE VARCHAR(200),
	CUSTOMER_NAME1 VARCHAR(200),
	OUTLET_TYPE1 VARCHAR(200),
	OUTLET_TYPE2 VARCHAR(200),
	OUTLET_TYPE3 VARCHAR(200),
	OUTLET_TYPE4 VARCHAR(200),
	TOWN VARCHAR(200),
	CUST_YEAR VARCHAR(200),
	SALESMAN_CODE VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_MY_GT_PRODUCT_MAPPING (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	DISTRIBUTOR_ID VARCHAR(200),
	DISTRIBUTOR_NAME VARCHAR(200),
	SAP_MATERIAL_ID VARCHAR(200),
	PRODUCT_DESCRIPTION VARCHAR(208),
	PRODUCT_CODE VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500),
	NON_SAP VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_MY_PRODUCT_MASTER (
	ABC VARCHAR(200),
	"apo-copy_history" VARCHAR(200),
	"apo-dp_product_type" VARCHAR(200),
	"apo-forecast_ind" VARCHAR(200),
	"apo-master_code" VARCHAR(200),
	"apo-npi_indicator" VARCHAR(200),
	"apo-product_classification" VARCHAR(200),
	ATTACHMENTS NUMBER(28,0),
	"bnd-list_price" NUMBER(28,2),
	"bnd-rcp" NUMBER(28,2),
	"bnd-rcp(duty)" NUMBER(28,2),
	"bn-duty" NUMBER(28,2),
	"bnd-zcpe" NUMBER(28,2),
	"bn-list_price" NUMBER(28,2),
	"bn-trade_margin" NUMBER(28,2),
	BRAND VARCHAR(200),
	BUNDLE_BARCODE VARCHAR(200),
	CARTON_PRICE NUMBER(28,2),
	CATEGORY VARCHAR(200),
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	COMM_STATUS VARCHAR(200),
	COMPLIANCE_ASSET_ID VARCHAR(200),
	DZ_PRICE NUMBER(28,2),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	FRANCHISE VARCHAR(200),
	HERO_SKU VARCHAR(200),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	LAUNCH_DATE TIMESTAMP_NTZ(9),
	LIST_PRICE NUMBER(28,4),
	LIST_PRICE_W_GST NUMBER(28,4),
	MATERIAL_CODE_DESC VARCHAR(200),
	MATERIAL_DESCRIPTION VARCHAR(200),
	MATERIAL_TYPE VARCHAR(200),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	"normal/promo" VARCHAR(200),
	NPI VARCHAR(200),
	NPI_START_PERIOD VARCHAR(200),
	PACK_SIZE VARCHAR(200),
	PIPO VARCHAR(200),
	PLATFORM VARCHAR(200),
	PREDECESSOR_MATERIAL_CODE VARCHAR(36),
	PREDECESSOR_MATERIAL_DESC VARCHAR(200),
	PRIMARY_SOURCE VARCHAR(200),
	PRODUCT_BARCODE VARCHAR(200),
	"product_dimension-h_(mm)" NUMBER(28,2),
	"product_dimension-l_(mm)" NUMBER(28,2),
	"product_dimension-m3" NUMBER(28,2),
	"product_dimension-w_(mm)" NUMBER(28,2),
	PRODUCT_WEIGHT NUMBER(28,0),
	PROFIT_CENTER VARCHAR(200),
	PROJECT_NAME VARCHAR(200),
	PUT_UP VARCHAR(200),
	"qty-dz/pallet" NUMBER(28,0),
	"qty-inner_shipper_(pc)" NUMBER(28,0),
	"qty-layer/pallet" NUMBER(28,0),
	"qty-shipper/layer" NUMBER(28,0),
	"qty-shipper/pallet" NUMBER(28,0),
	"qty-shipper_(pc)" NUMBER(28,0),
	"qty-shrink_wrap_(pc)" NUMBER(28,0),
	REMARKS VARCHAR(200),
	RSP NUMBER(28,4),
	RSP_W_GST NUMBER(28,4),
	SAP_VALUATION_CLASS VARCHAR(200),
	SELLING_STATUS_CODE VARCHAR(500),
	SELLING_STATUS_ID NUMBER(18,0),
	SELLING_STATUS_NAME VARCHAR(500),
	"shelf_life_(years)" NUMBER(28,4),
	SHIPPER_BARCODE VARCHAR(200),
	"shipper_dimension-h_(mm)" NUMBER(28,2),
	"shipper_dimension-l_(mm)" NUMBER(28,2),
	"shipper_dimension-m3" NUMBER(28,2),
	"shipper_dimension-w_(mm)" NUMBER(28,2),
	STRONGHOLD VARCHAR(200),
	SUPPLIER VARCHAR(200),
	"trade_margin_%" NUMBER(28,4),
	VALIDATIONSTATUS VARCHAR(500),
	VARIANT VARCHAR(200),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_CUSTOMER_HIERARCHY (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CHANNEL_CODE VARCHAR(500),
	CHANNEL_NAME VARCHAR(500),
	CHANNEL_ID NUMBER(18,0),
	CUSTOMER_GROUP_CODE VARCHAR(500),
	CUSTOMER_GROUP_NAME VARCHAR(500),
	CUSTOMER_GROUP_ID NUMBER(18,0),
	CUSTOMER_SEGMENTATION_CODE VARCHAR(500),
	CUSTOMER_SEGMENTATION_NAME VARCHAR(500),
	CUSTOMER_SEGMENTATION_ID NUMBER(18,0),
	CUSTOMER_SEGMENTATION_LEVEL_2_CODE VARCHAR(500),
	CUSTOMER_SEGMENTATION_LEVEL_2_NAME VARCHAR(500),
	CUSTOMER_SEGMENTATION_LEVEL_2_ID NUMBER(18,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_PRODUCT_HIERARCHY (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	BRAND_MAPPING_CODE VARCHAR(500),
	BRAND_MAPPING_NAME VARCHAR(500),
	BRAND_MAPPING_ID NUMBER(18,0),
	NEW_CATEGORY_CODE VARCHAR(500),
	NEW_CATEGORY_NAME VARCHAR(500),
	NEW_CATEGORY_ID NUMBER(18,0),
	PRODUCT_TYPE_CODE VARCHAR(500),
	PRODUCT_TYPE_NAME VARCHAR(500),
	PRODUCT_TYPE_ID NUMBER(18,0),
	PRODUCT_VARIANT_CODE VARCHAR(500),
	PRODUCT_VARIANT_NAME VARCHAR(500),
	PRODUCT_VARIANT_ID NUMBER(18,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_PRODUCT_MAPPING (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CUSTOMER_NAME_CODE VARCHAR(500),
	CUSTOMER_NAME_NAME VARCHAR(500),
	CUSTOMER_NAME_ID NUMBER(18,0),
	CUSTOMER_BRAND_CODE VARCHAR(500),
	CUSTOMER_BRAND_NAME VARCHAR(500),
	CUSTOMER_BRAND_ID NUMBER(18,0),
	CUSTOMER_PRODUCT_CODE VARCHAR(200),
	CUSTOMER_PRODUCT_NAME VARCHAR(200),
	"material code" VARCHAR(200),
	"master code" VARCHAR(200),
	"product name" VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_PS_TARGETS (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CHANNEL VARCHAR(200),
	RE VARCHAR(200),
	KPI VARCHAR(200),
	ATTRIBUTE_1 VARCHAR(200),
	ATTRIBUTE_2 VARCHAR(200),
	VALUE NUMBER(31,3),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_PS_WEIGHTS (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CHANNEL VARCHAR(200),
	RE VARCHAR(200),
	KPI VARCHAR(200),
	WEIGHT NUMBER(31,3),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MDS_SG_STORE_MASTER (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CUSTOMER_NAME VARCHAR(200),
	CUSTOMER_STORE_CODE VARCHAR(200),
	CUSTOMER_STORE_NAME VARCHAR(200),
	CUSTOMER_STORE_LOCATION VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
CREATE TABLE IF NOT EXISTS SDL_MY_ACCRUALS (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	FILE_TYPE VARCHAR(255),
	JAN_VAL VARCHAR(255),
	FEB_VAL VARCHAR(255),
	MAR_VAL VARCHAR(255),
	APR_VAL VARCHAR(255),
	MAY_VAL VARCHAR(255),
	JUN_VAL VARCHAR(255),
	JUL_VAL VARCHAR(255),
	AUG_VAL VARCHAR(255),
	SEP_VAL VARCHAR(255),
	OCT_VAL VARCHAR(255),
	NOV_VAL VARCHAR(255),
	DEC_VAL VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_AFGR (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	AFGR_NUM VARCHAR(255),
	CUST_DN_NUM VARCHAR(255),
	DN_AMT_EXC_GST_VAL VARCHAR(255),
	AFGR_AMT VARCHAR(255),
	DT_TO_SC VARCHAR(255),
	SC_VALIDATION VARCHAR(255),
	RTN_ORD_NUM VARCHAR(255),
	RTN_ORD_DT VARCHAR(255),
	RTN_ORD_AMT VARCHAR(255),
	CN_EXP_ISSUE_DT VARCHAR(255),
	BILL_NUM VARCHAR(255),
	BILL_DT VARCHAR(255),
	CN_AMT VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_CIW_MAP (
	CIW_CTGRY VARCHAR(255),
	CIW_BUCKT1 VARCHAR(255),
	CIW_BUCKT2 VARCHAR(255),
	BRAVO_CD1 VARCHAR(255),
	BRAVO_DESC1 VARCHAR(255),
	BRAVO_CD2 VARCHAR(255),
	BRAVO_DESC2 VARCHAR(255),
	ACCT_TYPE VARCHAR(255),
	ACCT_NUM VARCHAR(255),
	ACCT_DESC VARCHAR(255),
	ACCT_TYPE1 VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_CUSTOMER_DIM (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	DSTRBTR_GRP_CD VARCHAR(255),
	DSTRBTR_GRP_NM VARCHAR(255),
	ULLAGE VARCHAR(255),
	CHNL VARCHAR(255),
	TERRITORY VARCHAR(255),
	RETAIL_ENV VARCHAR(255),
	TRDNG_TERM_VAL VARCHAR(255),
	RDD_IND VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_DAILY_SELLOUT_SALES_FACT_MDS_SYNC (
	DISTRIBUTOR_ID VARCHAR(255),
	SALES_ORDER_NUMBER VARCHAR(255),
	SALES_ORDER_DATE VARCHAR(255),
	TYPE VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	DISTRIBUTOR_WH_ID VARCHAR(255),
	SAP_MATERIAL_ID VARCHAR(255),
	PRODUCT_CODE VARCHAR(255),
	PRODUCT_EAN_CODE VARCHAR(255),
	PRODUCT_DESCRIPTION VARCHAR(255),
	GROSS_ITEM_PRICE VARCHAR(255),
	QUANTITY VARCHAR(255),
	UOM VARCHAR(255),
	QUANTITY_IN_PIECES VARCHAR(255),
	QUANTITY_AFTER_CONVERSION VARCHAR(255),
	SUB_TOTAL_1 VARCHAR(255),
	DISCOUNT VARCHAR(255),
	SUB_TOTAL_2 VARCHAR(255),
	BOTTOM_LINE_DISCOUNT VARCHAR(255),
	TOTAL_AMT_AFTER_TAX VARCHAR(255),
	TOTAL_AMT_BEFORE_TAX VARCHAR(255),
	SALES_EMPLOYEE VARCHAR(255),
	FILENAME VARCHAR(200),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_DSTRBTRR_DIM (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	LVL1 VARCHAR(255),
	LVL2 VARCHAR(255),
	LVL3 VARCHAR(255),
	LVL4 VARCHAR(255),
	LVL5 VARCHAR(255),
	TRDNG_TERM_VAL VARCHAR(255),
	ABBREVATION VARCHAR(255),
	BUYER_GLN VARCHAR(255),
	LOCATION_GLN VARCHAR(255),
	CHNL_MANAGER VARCHAR(255),
	CDM VARCHAR(255),
	REGION VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_DSTRBTR_DOC_TYPE (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	LVL1 VARCHAR(255),
	LVL2 VARCHAR(255),
	WH_ID VARCHAR(255),
	DOC_TYPE VARCHAR(255),
	DOC_TYPE_DESC VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_IDS_RATE (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	EXCHNG_RATE VARCHAR(255),
	YEARMO VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_IN_TRANSIT (
	BILL_DOC VARCHAR(255),
	BILL_DT VARCHAR(255),
	GR_DT VARCHAR(255),
	CLOSING_DT VARCHAR(255),
	REMARKS VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS SDL_MY_LE_TRGT (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	MNTH_NM VARCHAR(255),
	TRGT_TYPE VARCHAR(255),
	TRGT_VAL_TYPE VARCHAR(255),
	WK1 VARCHAR(255),
	WK2 VARCHAR(255),
	WK3 VARCHAR(255),
	WK4 VARCHAR(255),
	WK5 VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_MONTHLY_SELLOUT_SALES_FACT (
	DSTRBTR_ID VARCHAR(255),
	SLS_ORD_NUM VARCHAR(255),
	SLS_ORD_DT VARCHAR(255),
	TYPE VARCHAR(255),
	CUST_CD VARCHAR(255),
	DSTRBTR_WH_ID VARCHAR(255),
	ITEM_CD VARCHAR(255),
	DSTRBTR_PROD_CD VARCHAR(255),
	EAN_NUM VARCHAR(255),
	DSTRBTR_PROD_DESC VARCHAR(255),
	GRS_PRC VARCHAR(255),
	QTY VARCHAR(255),
	UOM VARCHAR(255),
	QTY_PC VARCHAR(255),
	QTY_AFT_CONV VARCHAR(255),
	SUBTOTAL_1 VARCHAR(255),
	DISCOUNT VARCHAR(255),
	SUBTOTAL_2 VARCHAR(255),
	BOTTOM_LINE_DSCNT VARCHAR(255),
	TOTAL_AMT_AFT_TAX VARCHAR(255),
	TOTAL_AMT_BFR_TAX VARCHAR(255),
	SLS_EMP VARCHAR(255),
	CUSTOM_FIELD1 VARCHAR(255),
	CUSTOM_FIELD2 VARCHAR(255),
	CUSTOM_FIELD3 VARCHAR(255),
	FILENAME VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_MONTHLY_SELLOUT_SALES_FACT_MDS_SYNC (
	DISTRIBUTOR_ID VARCHAR(255),
	SALES_ORDER_NUMBER VARCHAR(255),
	SALES_ORDER_DATE VARCHAR(255),
	TYPE VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	DISTRIBUTOR_WH_ID VARCHAR(255),
	SAP_MATERIAL_ID VARCHAR(255),
	PRODUCT_CODE VARCHAR(255),
	PRODUCT_EAN_CODE VARCHAR(255),
	PRODUCT_DESCRIPTION VARCHAR(255),
	GROSS_ITEM_PRICE VARCHAR(255),
	QUANTITY VARCHAR(255),
	UOM VARCHAR(255),
	QUANTITY_IN_PIECES VARCHAR(255),
	QUANTITY_AFTER_CONVERSION VARCHAR(255),
	SUB_TOTAL_1 VARCHAR(255),
	DISCOUNT VARCHAR(255),
	SUB_TOTAL_2 VARCHAR(255),
	BOTTOM_LINE_DISCOUNT VARCHAR(255),
	TOTAL_AMT_AFTER_TAX VARCHAR(255),
	TOTAL_AMT_BEFORE_TAX VARCHAR(255),
	SALES_EMPLOYEE VARCHAR(255),
	FILENAME VARCHAR(100),
	CRT_DTTM TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_MONTHLY_SELLOUT_STOCK_FACT (
	CUST_ID VARCHAR(255),
	INV_DT VARCHAR(255),
	DSTRBTR_WH_ID VARCHAR(255),
	ITEM_CD VARCHAR(255),
	DSTRBTR_PROD_CD VARCHAR(255),
	EAN_NUM VARCHAR(255),
	DSTRBTR_PROD_DESC VARCHAR(255),
	QTY VARCHAR(255),
	UOM VARCHAR(255),
	QTY_ON_ORD VARCHAR(255),
	UOM_ON_ORD VARCHAR(255),
	QTY_COMMITTED VARCHAR(255),
	UOM_COMMITTED VARCHAR(255),
	AVAILABLE_QTY_PC VARCHAR(255),
	QTY_ON_ORD_PC VARCHAR(255),
	QTY_COMMITTED_PC VARCHAR(255),
	UNIT_PRC VARCHAR(255),
	TOTAL_VAL VARCHAR(255),
	CUSTOM_FIELD1 VARCHAR(255),
	CUSTOM_FIELD2 VARCHAR(255),
	FILENAME VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_POS_CUST_MSTR (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	STORE_CD VARCHAR(255),
	STORE_NM VARCHAR(255),
	DEPT_CD VARCHAR(255),
	DEPT_NM VARCHAR(255),
	REGION VARCHAR(255),
	STORE_FRMT VARCHAR(255),
	STORE_TYPE VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_POS_SALES_FACT (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	STORE_CD VARCHAR(255),
	STORE_NM VARCHAR(255),
	DEPT_CD VARCHAR(255),
	DEPT_NM VARCHAR(255),
	MT_ITEM_CD VARCHAR(255),
	MT_ITEM_DESC VARCHAR(255),
	JJ_MNTH_ID VARCHAR(255),
	JJ_YR_WEEK_NO VARCHAR(255),
	QTY VARCHAR(255),
	SO_VAL VARCHAR(255),
	SAP_MATL_NUM VARCHAR(255),
	FILE_NM VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_MY_TRGTS (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	BRND_DESC VARCHAR(255),
	SUB_SEGMENT VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	TRGT_TYPE VARCHAR(255),
	TRGT_VAL_TYPE VARCHAR(255),
	JAN_VAL VARCHAR(255),
	FEB_VAL VARCHAR(255),
	MAR_VAL VARCHAR(255),
	APR_VAL VARCHAR(255),
	MAY_VAL VARCHAR(255),
	JUN_VAL VARCHAR(255),
	JUL_VAL VARCHAR(255),
	AUG_VAL VARCHAR(255),
	SEP_VAL VARCHAR(255),
	OCT_VAL VARCHAR(255),
	NOV_VAL VARCHAR(255),
	DEC_VAL VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_ACCRUALS (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	FILE_TYPE VARCHAR(255),
	JAN_VAL VARCHAR(255),
	FEB_VAL VARCHAR(255),
	MAR_VAL VARCHAR(255),
	APR_VAL VARCHAR(255),
	MAY_VAL VARCHAR(255),
	JUN_VAL VARCHAR(255),
	JUL_VAL VARCHAR(255),
	AUG_VAL VARCHAR(255),
	SEP_VAL VARCHAR(255),
	OCT_VAL VARCHAR(255),
	NOV_VAL VARCHAR(255),
	DEC_VAL VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_AFGR (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	AFGR_NUM VARCHAR(255),
	CUST_DN_NUM VARCHAR(255),
	DN_AMT_EXC_GST_VAL VARCHAR(255),
	AFGR_AMT VARCHAR(255),
	DT_TO_SC VARCHAR(255),
	SC_VALIDATION VARCHAR(255),
	RTN_ORD_NUM VARCHAR(255),
	RTN_ORD_DT VARCHAR(255),
	RTN_ORD_AMT VARCHAR(255),
	CN_EXP_ISSUE_DT VARCHAR(255),
	BILL_NUM VARCHAR(255),
	BILL_DT VARCHAR(255),
	CN_AMT VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_CIW_MAP (
	CIW_CTGRY VARCHAR(255),
	CIW_BUCKT1 VARCHAR(255),
	CIW_BUCKT2 VARCHAR(255),
	BRAVO_CD1 VARCHAR(255),
	BRAVO_DESC1 VARCHAR(255),
	BRAVO_CD2 VARCHAR(255),
	BRAVO_DESC2 VARCHAR(255),
	ACCT_TYPE VARCHAR(255),
	ACCT_NUM VARCHAR(255),
	ACCT_DESC VARCHAR(255),
	ACCT_TYPE1 VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_CUSTOMER_DIM (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	DSTRBTR_GRP_CD VARCHAR(255),
	DSTRBTR_GRP_NM VARCHAR(255),
	ULLAGE VARCHAR(255),
	CHNL VARCHAR(255),
	TERRITORY VARCHAR(255),
	RETAIL_ENV VARCHAR(255),
	TRDNG_TERM_VAL VARCHAR(255),
	RDD_IND VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_DSTRBTRR_DIM (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	LVL1 VARCHAR(255),
	LVL2 VARCHAR(255),
	LVL3 VARCHAR(255),
	LVL4 VARCHAR(255),
	LVL5 VARCHAR(255),
	TRDNG_TERM_VAL VARCHAR(255),
	ABBREVATION VARCHAR(255),
	BUYER_GLN VARCHAR(255),
	LOCATION_GLN VARCHAR(255),
	CHNL_MANAGER VARCHAR(255),
	CDM VARCHAR(255),
	REGION VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_DSTRBTR_DOC_TYPE (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	LVL1 VARCHAR(255),
	LVL2 VARCHAR(255),
	WH_ID VARCHAR(255),
	DOC_TYPE VARCHAR(255),
	DOC_TYPE_DESC VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_IDS_RATE (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	EXCHNG_RATE VARCHAR(255),
	YEARMO VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_IN_TRANSIT (
	BILL_DOC VARCHAR(255),
	BILL_DT VARCHAR(255),
	GR_DT VARCHAR(255),
	CLOSING_DT VARCHAR(255),
	REMARKS VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT VARCHAR(255)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_LE_TRGT (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	MNTH_NM VARCHAR(255),
	TRGT_TYPE VARCHAR(255),
	TRGT_VAL_TYPE VARCHAR(255),
	WK1 VARCHAR(255),
	WK2 VARCHAR(255),
	WK3 VARCHAR(255),
	WK4 VARCHAR(255),
	WK5 VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_POS_CUST_MSTR (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	STORE_CD VARCHAR(255),
	STORE_NM VARCHAR(255),
	DEPT_CD VARCHAR(255),
	DEPT_NM VARCHAR(255),
	REGION VARCHAR(255),
	STORE_FRMT VARCHAR(255),
	STORE_TYPE VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_MY_TRGTS (
	CUST_ID VARCHAR(255),
	CUST_NM VARCHAR(255),
	BRND_DESC VARCHAR(255),
	SUB_SEGMENT VARCHAR(255),
	JJ_YEAR VARCHAR(255),
	TRGT_TYPE VARCHAR(255),
	TRGT_VAL_TYPE VARCHAR(255),
	JAN_VAL VARCHAR(255),
	FEB_VAL VARCHAR(255),
	MAR_VAL VARCHAR(255),
	APR_VAL VARCHAR(255),
	MAY_VAL VARCHAR(255),
	JUN_VAL VARCHAR(255),
	JUL_VAL VARCHAR(255),
	AUG_VAL VARCHAR(255),
	SEP_VAL VARCHAR(255),
	OCT_VAL VARCHAR(255),
	NOV_VAL VARCHAR(255),
	DEC_VAL VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_CIW_MAPPING (
	CONDITION_TYPE VARCHAR(500),
	GL VARCHAR(10),
	GL_DESCRIPTION VARCHAR(500),
	POSTED_WHERE VARCHAR(500),
	PURPOSE VARCHAR(500),
	CIW_BUCKET VARCHAR(500),
	CDL_DTTM VARCHAR(255),
	CURR_DATE TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_AMAZON (
	TRX_DATE DATE,
	RM VARCHAR(50),
	MERCHANT_CUSTOMER_ID VARCHAR(15),
	GL VARCHAR(50),
	CATEGORY VARCHAR(200),
	SUBCATEGORY VARCHAR(200),
	BRAND VARCHAR(255),
	ITEM_CODE VARCHAR(50),
	ITEM_DESC VARCHAR(500),
	NET_SALES NUMBER(10,4),
	PCOGS NUMBER(10,4),
	SALES_QTY NUMBER(10,0),
	PPMPERCENT NUMBER(10,5),
	PPMDOLLAR NUMBER(10,5),
	MONTH NUMBER(18,0),
	YEAR NUMBER(18,0),
	VENDOR_CODE VARCHAR(10),
	VENDOR_NAME VARCHAR(255),
	STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_GUARDIAN (
	TRXDATE DATE,
	BUYERCODE VARCHAR(50),
	VENDORCODE VARCHAR(100),
	STORECODE VARCHAR(50),
	STORESHORTCODE VARCHAR(50),
	STOREPOSTALCODE VARCHAR(50),
	STOREADDRESS1 VARCHAR(200),
	STOREADDRESS2 VARCHAR(200),
	STOREADDRESS3 VARCHAR(100),
	STORECOUNTRY VARCHAR(20),
	STOREDESC VARCHAR(500),
	BRAND VARCHAR(300),
	ITEMCODE VARCHAR(50),
	SUPPLIERITEMCODE VARCHAR(50),
	ITEMDESC VARCHAR(500),
	SIZE VARCHAR(100),
	UOM VARCHAR(20),
	PUF NUMBER(10,0),
	SALESQTY NUMBER(10,0),
	SALESAMOUNT VARCHAR(100),
	INVENTORYONHAND NUMBER(10,0),
	BARCODE VARCHAR(255),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_MARKETPLACE (
	CHANNEL VARCHAR(20),
	MONTH VARCHAR(20),
	ORDER_CREATION_DATE DATE,
	INVOICE_NUMBER VARCHAR(255),
	STATUS VARCHAR(100),
	ITEM_CODE VARCHAR(500),
	ITEM_NAME VARCHAR(500),
	SALES_UNIT NUMBER(10,0),
	NET_INVOICED_SALES NUMBER(10,4),
	BRAND VARCHAR(300),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_NTUC (
	VENDOR_CODE VARCHAR(100),
	VENDOR_NAME VARCHAR(255),
	DEPT_CODE VARCHAR(50),
	DEPT_DESCRIPTION VARCHAR(255),
	CLASS_NO VARCHAR(50),
	CLASS_DESCRIPTION VARCHAR(255),
	SUB_CLASS_DESCRIPTION VARCHAR(255),
	MCH VARCHAR(255),
	ITEM_CODE VARCHAR(100),
	ITEM_DESC VARCHAR(500),
	BRAND VARCHAR(255),
	SALES_UOM VARCHAR(100),
	PACK_SIZE NUMBER(10,0),
	STORE_CODE VARCHAR(100),
	STORE_NAME VARCHAR(255),
	STORE_FORMAT VARCHAR(255),
	ATTRIBUTE1 VARCHAR(50),
	ATTRIBUTE2 VARCHAR(50),
	TRX_DATE DATE,
	NET_SALES NUMBER(10,4),
	SALES_QTY NUMBER(10,0),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_REDMART (
	TRX_DATE DATE,
	ITEM_CODE VARCHAR(100),
	PRODUCT_CODE VARCHAR(300),
	ITEM_DESC VARCHAR(500),
	PACKSIZE VARCHAR(100),
	BRAND VARCHAR(300),
	SUPPLIER_ID VARCHAR(100),
	SUPPLIER_NAME VARCHAR(100),
	MANUFACTURER VARCHAR(200),
	CATEGORY_1 VARCHAR(150),
	CATEGORY_2 VARCHAR(150),
	CATEGORY_3 VARCHAR(150),
	CATEGORY_4 VARCHAR(150),
	GMV NUMBER(10,4),
	UNITS_SOLD NUMBER(10,0),
	STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_SCAN_DATA_WATSONS (
	YEAR VARCHAR(20),
	WEEK VARCHAR(20),
	STORE VARCHAR(255),
	DIV VARCHAR(255),
	PRDT_DEPT VARCHAR(255),
	PRDTCODE VARCHAR(255),
	PRDTDESC VARCHAR(500),
	BRAND VARCHAR(300),
	SUPCODE VARCHAR(255),
	SUP_NAME VARCHAR(300),
	BARCODE VARCHAR(255),
	SUP_CAT VARCHAR(255),
	DEPT_NAME VARCHAR(255),
	NET_SALES VARCHAR(100),
	SALES_QTY NUMBER(10,0),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_TP_CLOSED_MONTH (
	FILE_NAME VARCHAR(255),
	SHEET_NAME VARCHAR(255),
	MONTH_NUMBER VARCHAR(255),
	SALES_REP VARCHAR(255),
	CUSTMER_L1 VARCHAR(255),
	CUSTOMER VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	CHANNEL VARCHAR(255),
	FRANCHISE VARCHAR(255),
	BRAND VARCHAR(255),
	BRAND_PROFIT_CENTER VARCHAR(255),
	PROMO_TYPE VARCHAR(255),
	GL_ACCOUNT VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	REQUESTED_DATE VARCHAR(255),
	MONTH_OF_ACTIVITY VARCHAR(255),
	PROMO_START_DATE VARCHAR(255),
	PROMO_END_DATE VARCHAR(255),
	COMMITTED_ACCRUAL_W_O_GST NUMBER(17,3),
	TP_NUMBER VARCHAR(255),
	ZP_CMM_INVOICE VARCHAR(255),
	RETAILERS_BILLING VARCHAR(255),
	JNJ_ACTUALS_W_O_GST NUMBER(17,3),
	CN_NUMBER VARCHAR(255),
	TP_DATE VARCHAR(255),
	JNJ_TOTAL_COMMITTED_W_O_GST NUMBER(17,3),
	JNJ_TOTAL_UNCLAIMED_W_O_GST NUMBER(17,3),
	REVERSED_ACCRUED_AMT NUMBER(17,3),
	MONTH_OF_REVERSAL VARCHAR(255),
	SUPPORTING VARCHAR(255),
	MONTH_OF_DOC_SCANNING VARCHAR(255),
	REMARKS VARCHAR(255),
	WORKING_SC VARCHAR(255),
	CONSO_PR VARCHAR(255),
	CREATE_PR VARCHAR(255),
	PAYMENT_REF VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_ZUELLIG_CUSTOMER_MAPPING (
	ZUELLIG_CUSTOMER VARCHAR(255),
	REGIONAL_BANNER VARCHAR(255),
	MERCHANDIZING VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_ZUELLIG_PRODUCT_MAPPING (
	ZP_MATERIAL VARCHAR(255),
	ZP_ITEM_CODE VARCHAR(255),
	JJ_CODE VARCHAR(255),
	ITEM_NAME VARCHAR(255),
	BRAND VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_RAW_SG_ZUELLIG_SELLOUT (
	MONTH_NO VARCHAR(255),
	SALES_DATE VARCHAR(255),
	WAREHOUSE_CODE VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	CUSTOMER_NAME VARCHAR(255),
	INVOICE VARCHAR(255),
	ITEM_NAME VARCHAR(255),
	ITEM_CODE VARCHAR(255),
	TYPE VARCHAR(255),
	SALES_VALUE NUMBER(17,3),
	SALES_UNITS NUMBER(17,3),
	BONUS_UNITS NUMBER(17,3),
	RETURNS_UNITS NUMBER(17,3),
	RETURNS_VALUE NUMBER(17,3),
	RETURNS_BONUS_UNITS NUMBER(17,3),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_CIW_MAPPING (
	CONDITION_TYPE VARCHAR(500),
	GL VARCHAR(10),
	GL_DESCRIPTION VARCHAR(500),
	POSTED_WHERE VARCHAR(500),
	PURPOSE VARCHAR(500),
	CIW_BUCKET VARCHAR(500),
	CDL_DTTM VARCHAR(255),
	CURR_DATE TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_AMAZON (
	TRX_DATE DATE,
	RM VARCHAR(50),
	MERCHANT_CUSTOMER_ID VARCHAR(15),
	GL VARCHAR(50),
	CATEGORY VARCHAR(200),
	SUBCATEGORY VARCHAR(200),
	BRAND VARCHAR(255),
	ITEM_CODE VARCHAR(50),
	ITEM_DESC VARCHAR(500),
	NET_SALES NUMBER(10,4),
	PCOGS NUMBER(10,4),
	SALES_QTY NUMBER(10,0),
	PPMPERCENT NUMBER(10,5),
	PPMDOLLAR NUMBER(10,5),
	MONTH NUMBER(18,0),
	YEAR NUMBER(18,0),
	VENDOR_CODE VARCHAR(10),
	VENDOR_NAME VARCHAR(255),
	STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_DFI (
	TRXDATE DATE,
	BUYERCODE VARCHAR(50),
	VENDORCODE VARCHAR(100),
	STORECODE VARCHAR(50),
	STORESHORTCODE VARCHAR(100),
	STOREDESC VARCHAR(300),
	BRAND VARCHAR(300),
	ITEMCODE VARCHAR(50),
	SUPPLIERITEMCODE VARCHAR(50),
	ITEMDESC VARCHAR(500),
	SIZE VARCHAR(100),
	UOM VARCHAR(20),
	PUF NUMBER(10,0),
	BARCODE VARCHAR(255),
	SALESAMOUNT VARCHAR(100),
	SALESQTY NUMBER(10,0),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_GUARDIAN (
	TRXDATE DATE,
	BUYERCODE VARCHAR(50),
	VENDORCODE VARCHAR(100),
	STORECODE VARCHAR(50),
	STORESHORTCODE VARCHAR(50),
	STOREPOSTALCODE VARCHAR(50),
	STOREADDRESS1 VARCHAR(200),
	STOREADDRESS2 VARCHAR(200),
	STOREADDRESS3 VARCHAR(100),
	STORECOUNTRY VARCHAR(20),
	STOREDESC VARCHAR(500),
	BRAND VARCHAR(300),
	ITEMCODE VARCHAR(50),
	SUPPLIERITEMCODE VARCHAR(50),
	ITEMDESC VARCHAR(500),
	SIZE VARCHAR(100),
	UOM VARCHAR(20),
	PUF NUMBER(10,0),
	SALESQTY NUMBER(10,0),
	SALESAMOUNT VARCHAR(100),
	INVENTORYONHAND NUMBER(10,0),
	BARCODE VARCHAR(255),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_MARKETPLACE (
	CHANNEL VARCHAR(20),
	MONTH VARCHAR(20),
	ORDER_CREATION_DATE DATE,
	INVOICE_NUMBER VARCHAR(255),
	STATUS VARCHAR(100),
	ITEM_CODE VARCHAR(500),
	ITEM_NAME VARCHAR(500),
	SALES_UNIT NUMBER(10,0),
	NET_INVOICED_SALES NUMBER(10,4),
	BRAND VARCHAR(300),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_NTUC (
	VENDOR_CODE VARCHAR(100),
	VENDOR_NAME VARCHAR(255),
	DEPT_CODE VARCHAR(50),
	DEPT_DESCRIPTION VARCHAR(255),
	CLASS_NO VARCHAR(50),
	CLASS_DESCRIPTION VARCHAR(255),
	SUB_CLASS_DESCRIPTION VARCHAR(255),
	MCH VARCHAR(255),
	ITEM_CODE VARCHAR(100),
	ITEM_DESC VARCHAR(500),
	BRAND VARCHAR(255),
	SALES_UOM VARCHAR(100),
	PACK_SIZE NUMBER(10,0),
	STORE_CODE VARCHAR(100),
	STORE_NAME VARCHAR(255),
	STORE_FORMAT VARCHAR(255),
	ATTRIBUTE1 VARCHAR(50),
	ATTRIBUTE2 VARCHAR(50),
	TRX_DATE DATE,
	NET_SALES NUMBER(10,4),
	SALES_QTY NUMBER(10,0),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_REDMART (
	TRX_DATE DATE,
	ITEM_CODE VARCHAR(100),
	PRODUCT_CODE VARCHAR(300),
	ITEM_DESC VARCHAR(500),
	PACKSIZE VARCHAR(100),
	BRAND VARCHAR(300),
	SUPPLIER_ID VARCHAR(100),
	SUPPLIER_NAME VARCHAR(100),
	MANUFACTURER VARCHAR(200),
	CATEGORY_1 VARCHAR(150),
	CATEGORY_2 VARCHAR(150),
	CATEGORY_3 VARCHAR(150),
	CATEGORY_4 VARCHAR(150),
	GMV NUMBER(10,4),
	UNITS_SOLD NUMBER(10,0),
	STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_SCOMMERCE (
	DATE_ID DATE,
	ORDERSN VARCHAR(50),
	ITEMID VARCHAR(50),
	MODELID VARCHAR(50),
	SKU_ID VARCHAR(100),
	ITEM_NAME VARCHAR(500),
	MODEL_NAME VARCHAR(500),
	SALES_QTY NUMBER(10,0),
	NET_SALES NUMBER(10,6),
	STORE VARCHAR(50),
	STORE_NAME VARCHAR(50),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_SCAN_DATA_WATSONS (
	YEAR VARCHAR(20),
	WEEK VARCHAR(20),
	STORE VARCHAR(255),
	DIV VARCHAR(255),
	PRDT_DEPT VARCHAR(255),
	PRDTCODE VARCHAR(255),
	PRDTDESC VARCHAR(500),
	BRAND VARCHAR(300),
	SUPCODE VARCHAR(255),
	SUP_NAME VARCHAR(300),
	BARCODE VARCHAR(255),
	SUP_CAT VARCHAR(255),
	DEPT_NAME VARCHAR(255),
	NET_SALES VARCHAR(100),
	SALES_QTY NUMBER(10,0),
	CUST_NAME VARCHAR(20),
	CDL_DTTM VARCHAR(255),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_TP_CLOSED_MONTH (
	FILE_NAME VARCHAR(255),
	SHEET_NAME VARCHAR(255),
	MONTH_NUMBER VARCHAR(255),
	SALES_REP VARCHAR(255),
	CUSTMER_L1 VARCHAR(255),
	CUSTOMER VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	CHANNEL VARCHAR(255),
	FRANCHISE VARCHAR(255),
	BRAND VARCHAR(255),
	BRAND_PROFIT_CENTER VARCHAR(255),
	PROMO_TYPE VARCHAR(255),
	GL_ACCOUNT VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	REQUESTED_DATE VARCHAR(255),
	MONTH_OF_ACTIVITY VARCHAR(255),
	PROMO_START_DATE VARCHAR(255),
	PROMO_END_DATE VARCHAR(255),
	COMMITTED_ACCRUAL_W_O_GST NUMBER(17,3),
	TP_NUMBER VARCHAR(255),
	ZP_CMM_INVOICE VARCHAR(255),
	RETAILERS_BILLING VARCHAR(255),
	JNJ_ACTUALS_W_O_GST NUMBER(17,3),
	CN_NUMBER VARCHAR(255),
	TP_DATE VARCHAR(255),
	JNJ_TOTAL_COMMITTED_W_O_GST NUMBER(17,3),
	JNJ_TOTAL_UNCLAIMED_W_O_GST NUMBER(17,3),
	REVERSED_ACCRUED_AMT NUMBER(17,3),
	MONTH_OF_REVERSAL VARCHAR(255),
	SUPPORTING VARCHAR(255),
	MONTH_OF_DOC_SCANNING VARCHAR(255),
	REMARKS VARCHAR(255),
	WORKING_SC VARCHAR(255),
	CONSO_PR VARCHAR(255),
	CREATE_PR VARCHAR(255),
	PAYMENT_REF VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_TP_CLOSED_YEAR_BAL (
	FILE_NAME VARCHAR(255),
	SHEET_NAME VARCHAR(255),
	MONTH_NUMBER VARCHAR(255),
	SALES_REP VARCHAR(255),
	CUSTOMER_L1 VARCHAR(255),
	CUSTOMER VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	CHANNEL VARCHAR(255),
	FRANCHISE VARCHAR(255),
	BRAND VARCHAR(255),
	BRAND_PROFIT_CENTER VARCHAR(255),
	PROMO_TYPE VARCHAR(255),
	GL_ACCOUNT VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	REQUESTED_DATE VARCHAR(255),
	MONTH_OF_ACTIVITY VARCHAR(255),
	PROMO_START_DATE VARCHAR(255),
	PROMO_END_DATE VARCHAR(255),
	COMMITTED_OR_ACCRUAL_WO_GST NUMBER(17,3),
	TP_NUMBER VARCHAR(255),
	ZP_CMM_INVOICE VARCHAR(255),
	RETAILERS_BILLING VARCHAR(255),
	JNJ_ACTUALS_WO_GST NUMBER(17,3),
	MONTH_OF_ACTUAL VARCHAR(255),
	CN_NUMBER VARCHAR(255),
	CN_DATE VARCHAR(255),
	REVERSAL_AMOUNT NUMBER(17,3),
	OUTSTANDING_ACCRUAL NUMBER(17,3),
	JNJ_TOTAL_COMMITTED_WO_GST NUMBER(17,3),
	JNJ_TOTAL_UNCLAIMED_WO_GST NUMBER(17,3),
	COMMENTS_OR_REVERSED_ACCRUED_AMT NUMBER(17,3),
	MONTH_OF_REVERSAL VARCHAR(255),
	SUPPORTING VARCHAR(255),
	TP_IMPACT NUMBER(17,3),
	LEFT_ACCRUAL NUMBER(17,3),
	MONTH_OF_DOC_SCANNING VARCHAR(255),
	REMARKS VARCHAR(255),
	WORKING_SC VARCHAR(255),
	CONSO_PR VARCHAR(255),
	CREATE_PR VARCHAR(255),
	PAYMENT_REF VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_ZUELLIG_CUSTOMER_MAPPING (
	ZUELLIG_CUSTOMER VARCHAR(255),
	REGIONAL_BANNER VARCHAR(255),
	MERCHANDIZING VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_ZUELLIG_PRODUCT_MAPPING (
	ZP_MATERIAL VARCHAR(255),
	ZP_ITEM_CODE VARCHAR(255),
	JJ_CODE VARCHAR(255),
	ITEM_NAME VARCHAR(255),
	BRAND VARCHAR(255),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);
CREATE TABLE IF NOT EXISTS SDL_SG_ZUELLIG_SELLOUT (
	MONTH_NO VARCHAR(255),
	SALES_DATE VARCHAR(255),
	WAREHOUSE_CODE VARCHAR(255),
	CUSTOMER_CODE VARCHAR(255),
	CUSTOMER_NAME VARCHAR(255),
	INVOICE VARCHAR(255),
	ITEM_NAME VARCHAR(255),
	ITEM_CODE VARCHAR(255),
	TYPE VARCHAR(255),
	SALES_VALUE NUMBER(17,3),
	SALES_UNITS NUMBER(17,3),
	BONUS_UNITS NUMBER(17,3),
	RETURNS_UNITS NUMBER(17,3),
	RETURNS_VALUE NUMBER(17,3),
	RETURNS_BONUS_UNITS NUMBER(17,3),
	CDL_DTTM VARCHAR(255),
	CURR_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255),
	RUN_ID NUMBER(14,0)
);

-----------------------------------------------------------
use schema META_RAW;

INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (332,'OS_EDW','EDW_MY_SELLOUT_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_SELLOUT_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (333,'OS_EDW','EDW_MY_SELLIN_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_SELLIN_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',4);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (334,'OS_EDW','EDW_MY_POS_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_POS_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (335,'OS_EDW','EDW_MY_SIPOS_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_SIPOS_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',4);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (336,'OS_EDW','EDW_MY_SISO_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_SISO_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (337,'OS_EDW','EDW_MY_SELLIN_PREV_DT_SNPSHT','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_MY_SELLIN_PREV_DT_SNPSHT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (338,'OS_EDW','EDW_SG_POS_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_SG_POS_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (339,'OS_EDW','EDW_SG_SELLIN_ANALYSIS','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_SG_SELLIN_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (340,'OS_ITG','ITG_MY_POS_SALES_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_POS_SALES_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (341,'OS_ITG','ITG_MY_LISTPRICE_DAILY','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_LISTPRICE_DAILY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (342,'OS_ITG','ITG_MY_POS_CUST_MSTR','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_POS_CUST_MSTR','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (343,'OS_ITG','ITG_MY_ACCRUALS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_ACCRUALS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (344,'OS_ITG','ITG_MY_DSTRBTR_CUST_DIM','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_DSTRBTR_CUST_DIM','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (345,'OS_ITG','ITG_MY_GT_OUTLET_EXCLUSION','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_GT_OUTLET_EXCLUSION','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (346,'OS_ITG','ITG_MY_DSTRBTRR_DIM','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_DSTRBTRR_DIM','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (347,'OS_ITG','ITG_MY_CUSTOMER_DIM','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_CUSTOMER_DIM','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (348,'OS_ITG','ITG_MY_SELLOUT_SALES_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_SELLOUT_SALES_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (349,'OS_ITG','ITG_MY_AFGR','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_AFGR','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (350,'OS_ITG','ITG_MY_CIW_MAP','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_CIW_MAP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (351,'OS_ITG','ITG_MY_TRGTS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_TRGTS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (352,'OS_ITG','ITG_MY_LE_TRGT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_LE_TRGT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (353,'OS_ITG','ITG_MY_DSTRBTR_DOC_TYPE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_DSTRBTR_DOC_TYPE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (354,'OS_ITG','ITG_MY_IN_TRANSIT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_IN_TRANSIT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (355,'OS_ITG','ITG_MY_IDS_EXCHG_RATE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_IDS_EXCHG_RATE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (356,'OS_ITG','ITG_MY_OUTLET_ATTR','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_OUTLET_ATTR','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (357,'OS_ITG','ITG_MY_MATERIAL_MAP','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_MATERIAL_MAP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (358,'OS_ITG','ITG_MY_MATERIAL_DIM','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_MATERIAL_DIM','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (359,'OS_ITG','ITG_MDS_MY_CUSTOMER_HIERARCHY','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_MY_CUSTOMER_HIERARCHY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (360,'OS_ITG','ITG_MY_AS_WATSONS_INVENTORY','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_AS_WATSONS_INVENTORY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (361,'OS_ITG','ITG_MY_SELLOUT_STOCK_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MY_SELLOUT_STOCK_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (362,'OS_ITG','ITG_SG_TP_CLOSED_MONTH','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_TP_CLOSED_MONTH','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (363,'OS_ITG','ITG_SG_ZUELLIG_SELLOUT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_ZUELLIG_SELLOUT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (364,'OS_ITG','ITG_SG_ZUELLIG_PRODUCT_MAPPING','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_ZUELLIG_PRODUCT_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (365,'OS_ITG','ITG_SG_ZUELLIG_CUSTOMER_MAPPING','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_ZUELLIG_CUSTOMER_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (366,'OS_ITG','ITG_SG_CIW_MAPPING','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_CIW_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (367,'OS_ITG','ITG_SG_SCAN_DATA_WATSONS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_WATSONS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (368,'OS_ITG','ITG_SG_SCAN_DATA_DFI','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_DFI','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (369,'OS_ITG','ITG_SG_SCAN_DATA_GUARDIAN','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_GUARDIAN','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (370,'OS_ITG','ITG_SG_SCAN_DATA_MARKETPLACE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_MARKETPLACE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (371,'OS_ITG','ITG_SG_SCAN_DATA_SCOMMERCE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_SCOMMERCE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (372,'OS_ITG','ITG_SG_SCAN_DATA_REDMART','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_REDMART','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (373,'OS_ITG','ITG_SG_SCAN_DATA_NTUC','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_NTUC','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (374,'OS_ITG','ITG_SG_SCAN_DATA_AMAZON','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_SCAN_DATA_AMAZON','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (375,'OS_ITG','ITG_MDS_SG_PS_TARGETS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_PS_TARGETS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (376,'OS_ITG','ITG_MDS_SG_PS_WEIGHTS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_PS_WEIGHTS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (377,'OS_ITG','ITG_MDS_SG_CUSTOMER_HIERARCHY','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_CUSTOMER_HIERARCHY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (378,'OS_ITG','ITG_MDS_SG_PRODUCT_HIERARCHY','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_PRODUCT_HIERARCHY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (379,'OS_ITG','ITG_MDS_SG_PRODUCT_MAPPING','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_PRODUCT_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (380,'OS_ITG','ITG_MDS_SG_STORE_MASTER','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_MDS_SG_STORE_MASTER','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (381,'OS_ITG','ITG_SG_POS_SALES_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_POS_SALES_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (382,'OS_ITG','ITG_QUERY_PARAMETERS','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_QUERY_PARAMETERS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (383,'OS_ITG','ITG_SG_CONSTANT_KEY_VALUE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_CONSTANT_KEY_VALUE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (384,'OS_ITG','ITG_PH_POS_SALES_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_PH_POS_SALES_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (385,'OS_ITG','ITG_TH_POS_SALES_INVENTORY_FACT','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_TH_POS_SALES_INVENTORY_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',5);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (386,'OS_ITG','ITG_SG_LISTPRICE','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_LISTPRICE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (387,'OS_ITG','ITG_SG_TP_CLOSED_YEAR_BAL','PROD_DNA_CORE','SNAPOSEITG_INTEGRATION','ITG_SG_TP_CLOSED_YEAR_BAL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (388,'OS_SDL','SDL_MY_POS_CUST_MSTR','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_POS_CUST_MSTR','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (389,'OS_SDL','SDL_RAW_MY_POS_CUST_MSTR','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_POS_CUST_MSTR','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (390,'OS_SDL','SDL_MY_POS_SALES_FACT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_POS_SALES_FACT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (391,'OS_SDL','SDL_MY_DAILY_SELLOUT_SALES_FACT_MDS_SYNC','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_DAILY_SELLOUT_SALES_FACT_MDS_SYNC','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (392,'OS_SDL','SDL_MY_MONTHLY_SELLOUT_SALES_FACT_MDS_SYNC','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_MONTHLY_SELLOUT_SALES_FACT_MDS_SYNC','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (393,'OS_SDL','SDL_RAW_MY_CUSTOMER_DIM','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_CUSTOMER_DIM','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (394,'OS_SDL','SDL_RAW_MY_ACCRUALS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_ACCRUALS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (395,'OS_SDL','SDL_RAW_MY_AFGR','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_AFGR','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (396,'OS_SDL','SDL_RAW_MY_CIW_MAP','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_CIW_MAP','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (397,'OS_SDL','SDL_RAW_MY_TRGTS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_TRGTS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (398,'OS_SDL','SDL_RAW_MY_LE_TRGT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_LE_TRGT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (399,'OS_SDL','SDL_MY_CUSTOMER_DIM','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_CUSTOMER_DIM','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (400,'OS_SDL','SDL_MY_ACCRUALS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_ACCRUALS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (401,'OS_SDL','SDL_MY_AFGR','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_AFGR','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (402,'OS_SDL','SDL_MY_CIW_MAP','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_CIW_MAP','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (403,'OS_SDL','SDL_MY_TRGTS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_TRGTS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (404,'OS_SDL','SDL_MY_LE_TRGT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_LE_TRGT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (405,'OS_SDL','SDL_RAW_MY_DSTRBTRR_DIM','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_DSTRBTRR_DIM','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (406,'OS_SDL','SDL_RAW_MY_DSTRBTR_DOC_TYPE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_DSTRBTR_DOC_TYPE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (407,'OS_SDL','SDL_RAW_MY_IN_TRANSIT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_IN_TRANSIT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (408,'OS_SDL','SDL_RAW_MY_IDS_RATE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_MY_IDS_RATE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (409,'OS_SDL','SDL_MY_DSTRBTRR_DIM','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_DSTRBTRR_DIM','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (410,'OS_SDL','SDL_MY_DSTRBTR_DOC_TYPE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_DSTRBTR_DOC_TYPE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (411,'OS_SDL','SDL_MY_IN_TRANSIT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_IN_TRANSIT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (412,'OS_SDL','SDL_MY_IDS_RATE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_IDS_RATE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (413,'OS_SDL','SDL_MY_MONTHLY_SELLOUT_STOCK_FACT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_MONTHLY_SELLOUT_STOCK_FACT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (414,'OS_SDL','SDL_MY_MONTHLY_SELLOUT_SALES_FACT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MY_MONTHLY_SELLOUT_SALES_FACT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (415,'OS_SDL','SDL_MDS_MY_GT_OUTLETATTRIBUTES','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_MY_GT_OUTLETATTRIBUTES','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (416,'OS_SDL','SDL_MDS_MY_GT_PRODUCT_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_MY_GT_PRODUCT_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (417,'OS_SDL','SDL_MDS_MY_PRODUCT_MASTER','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_MY_PRODUCT_MASTER','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (418,'OS_SDL','SDL_MDS_MY_CUSTOMER_HIERARCHY','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_MY_CUSTOMER_HIERARCHY','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (419,'OS_SDL','SDL_RAW_SG_TP_CLOSED_MONTH','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_TP_CLOSED_MONTH','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',4);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (420,'OS_SDL','SDL_SG_TP_CLOSED_YEAR_BAL','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_TP_CLOSED_YEAR_BAL','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (421,'OS_SDL','SDL_RAW_SG_ZUELLIG_SELLOUT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_ZUELLIG_SELLOUT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (422,'OS_SDL','SDL_SG_TP_CLOSED_MONTH','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_TP_CLOSED_MONTH','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (423,'OS_SDL','SDL_SG_ZUELLIG_SELLOUT','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_ZUELLIG_SELLOUT','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (424,'OS_SDL','SDL_RAW_SG_CIW_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_CIW_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (425,'OS_SDL','SDL_SG_CIW_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_CIW_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (426,'OS_SDL','SDL_SG_ZUELLIG_PRODUCT_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_ZUELLIG_PRODUCT_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (427,'OS_SDL','SDL_RAW_SG_ZUELLIG_PRODUCT_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_ZUELLIG_PRODUCT_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (428,'OS_SDL','SDL_SG_ZUELLIG_CUSTOMER_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_ZUELLIG_CUSTOMER_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (429,'OS_SDL','SDL_RAW_SG_ZUELLIG_CUSTOMER_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_ZUELLIG_CUSTOMER_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (430,'OS_SDL','SDL_SG_SCAN_DATA_WATSONS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_WATSONS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (431,'OS_SDL','SDL_RAW_SG_SCAN_DATA_WATSONS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_WATSONS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (432,'OS_SDL','SDL_SG_SCAN_DATA_DFI','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_DFI','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (433,'OS_SDL','SDL_RAW_SG_SCAN_DATA_GUARDIAN','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_GUARDIAN','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',5);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (434,'OS_SDL','SDL_SG_SCAN_DATA_GUARDIAN','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_GUARDIAN','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (435,'OS_SDL','SDL_RAW_SG_SCAN_DATA_MARKETPLACE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_MARKETPLACE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (436,'OS_SDL','SDL_SG_SCAN_DATA_MARKETPLACE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_MARKETPLACE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (437,'OS_SDL','SDL_SG_SCAN_DATA_SCOMMERCE','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_SCOMMERCE','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (438,'OS_SDL','SDL_SG_SCAN_DATA_REDMART','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_REDMART','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (439,'OS_SDL','SDL_RAW_SG_SCAN_DATA_REDMART','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_REDMART','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (440,'OS_SDL','SDL_SG_SCAN_DATA_NTUC','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_NTUC','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (441,'OS_SDL','SDL_RAW_SG_SCAN_DATA_NTUC','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_NTUC','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (442,'OS_SDL','SDL_SG_SCAN_DATA_AMAZON','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_SG_SCAN_DATA_AMAZON','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (443,'OS_SDL','SDL_RAW_SG_SCAN_DATA_AMAZON','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_RAW_SG_SCAN_DATA_AMAZON','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (444,'OS_SDL','SDL_MDS_SG_PS_TARGETS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_PS_TARGETS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (445,'OS_SDL','SDL_MDS_SG_PS_WEIGHTS','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_PS_WEIGHTS','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (446,'OS_SDL','SDL_MDS_SG_CUSTOMER_HIERARCHY','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_CUSTOMER_HIERARCHY','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (447,'OS_SDL','SDL_MDS_SG_PRODUCT_HIERARCHY','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_PRODUCT_HIERARCHY','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (448,'OS_SDL','SDL_MDS_SG_PRODUCT_MAPPING','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_PRODUCT_MAPPING','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (449,'OS_SDL','SDL_MDS_SG_STORE_MASTER','PROD_DNA_LOAD','SNAPOSESDL_RAW','SDL_MDS_SG_STORE_MASTER','SNAPASPSDL_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (450,'OS_WKS','WKS_MY_SELLOUT_FOR_INV_ANALYSIS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_SELLOUT_FOR_INV_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (451,'OS_WKS','WKS_MY_BASE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_BASE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (452,'OS_WKS','WKS_MY_ALLMONTHS_BASE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_ALLMONTHS_BASE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (453,'OS_WKS','WKS_MY_LASTNMONTHS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_LASTNMONTHS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',3);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (454,'OS_WKS','WKS_MY_BASE_DETAIL','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_BASE_DETAIL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (455,'OS_WKS','MY_PROPAGATE_TO','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','MY_PROPAGATE_TO','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (456,'OS_WKS','WKS_MY_INVENTORY_HEALTHY_UNHEALTHY_ANALYSIS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_INVENTORY_HEALTHY_UNHEALTHY_ANALYSIS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (457,'OS_WKS','MY_PROPAGATE_FROM_TO','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','MY_PROPAGATE_FROM_TO','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (458,'OS_WKS','WKS_MY_SISO_PROPAGATE_FINAL','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_SISO_PROPAGATE_FINAL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (459,'OS_WKS','WKS_MY_SISO_PROPAGATE_TO_DETAILS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_SISO_PROPAGATE_TO_DETAILS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (460,'OS_WKS','WKS_MY_SISO_PROPAGATE_TO_EXISTING_DTLS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_SISO_PROPAGATE_TO_EXISTING_DTLS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (461,'OS_WKS','WKS_MY_MNTHLY_SELLOUT_STOCK_FACT','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_MNTHLY_SELLOUT_STOCK_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (462,'OS_WKS','WKS_MY_MNTHLY_SELLOUT_SALES_FACT','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_MNTHLY_SELLOUT_SALES_FACT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (463,'OS_WKS','WKS_MY_LISTPRICE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_LISTPRICE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',5);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (464,'OS_WKS','WKS_SG_TP_CLOSED_MONTH','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_TP_CLOSED_MONTH','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (465,'OS_WKS','WKS_SG_TP_CLOSED_YEAR_BAL','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_TP_CLOSED_YEAR_BAL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (466,'OS_WKS','WKS_SG_ZUELLIG_SELLOUT','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_ZUELLIG_SELLOUT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (467,'OS_WKS','WKS_SG_LISTPRICE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_LISTPRICE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',5);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (468,'OS_WKS','WKS_SG_PRODUCT_MAPPING','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_PRODUCT_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (469,'OS_WKS','WKS_SG_CUSTOMER_MAPPING','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_CUSTOMER_MAPPING','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (470,'OS_WKS','WKS_SG_SCAN_DATA_WATSONS_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_WATSONS_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (471,'OS_WKS','WKS_SG_SCAN_DATA_WATSONS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_WATSONS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (472,'OS_WKS','WKS_SG_SCAN_DATA_MARKETPLACE_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_MARKETPLACE_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (473,'OS_WKS','WKS_SG_SCAN_DATA_MARKETPLACE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_MARKETPLACE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (474,'OS_WKS','WKS_SG_SCAN_DATA_SCOMMERCE_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_SCOMMERCE_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (475,'OS_WKS','WKS_SG_SCAN_DATA_SCOMMERCE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_SCOMMERCE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (476,'OS_WKS','WKS_SG_SCAN_DATA_REDMART_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_REDMART_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (477,'OS_WKS','WKS_SG_SCAN_DATA_REDMART','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_REDMART','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (478,'OS_WKS','WKS_SG_SCAN_DATA_NTUC_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_NTUC_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (479,'OS_WKS','WKS_SG_SCAN_DATA_NTUC','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_NTUC','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (480,'OS_WKS','WKS_SG_SCAN_DATA_AMAZON_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_AMAZON_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (481,'OS_WKS','WKS_SG_SCAN_DATA_AMAZON','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SG_SCAN_DATA_AMAZON','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (482,'OS_WKS','NOTIFY_MISSING_PRODUCTS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','NOTIFY_MISSING_PRODUCTS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (483,'RG_EDW','EDW_REG_INVENTORY_HEALTH_ANALYSIS_PROPAGATION','PROD_DNA_CORE','SNAPOSEEDW_INTEGRATION','EDW_REG_INVENTORY_HEALTH_ANALYSIS_PROPAGATION','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',4);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (484,'RG_WKS','WKS_MY_INVENTORY_HEALTH_ANALYSIS_PROPAGATION','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_INVENTORY_HEALTH_ANALYSIS_PROPAGATION','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (485,'RG_WKS','WKS_MY_INVENTORY_HEALTH_ANALYSIS_PROPAGATION_FINAL','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_INVENTORY_HEALTH_ANALYSIS_PROPAGATION_FINAL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',2);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (486,'RG_WKS','WKS_SO_SALES_133986','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133986','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (487,'RG_WKS','WKS_SO_SALES_133980','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133980','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (488,'RG_WKS','WKS_SO_SALES_133981','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133981','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (489,'RG_WKS','WKS_SO_SALES_133982','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133982','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (490,'RG_WKS','WKS_SO_SALES_133983','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133983','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (491,'RG_WKS','WKS_SO_SALES_133984','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133984','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (492,'RG_WKS','WKS_SO_SALES_133985','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_133985','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (493,'RG_WKS','WKS_SO_SALES_131164','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_131164','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (494,'RG_WKS','WKS_SO_SALES_131165','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_131165','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (495,'RG_WKS','WKS_SO_SALES_131166','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_131166','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (496,'RG_WKS','WKS_SO_SALES_131167','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_131167','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (497,'RG_WKS','WKS_SO_SALES_130516','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130516','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (498,'RG_WKS','WKS_SO_SALES_130517','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130517','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (499,'RG_WKS','WKS_SO_SALES_130518','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130518','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (500,'RG_WKS','WKS_SO_SALES_130519','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130519','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (501,'RG_WKS','WKS_SO_SALES_130520','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130520','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (502,'RG_WKS','WKS_SO_SALES_130521','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_130521','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (503,'RG_WKS','WKS_SO_SALES_119024','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_119024','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (504,'RG_WKS','WKS_SO_SALES_119025','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_119025','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (505,'RG_WKS','WKS_SO_SALES_108129','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_108129','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (506,'RG_WKS','WKS_SO_SALES_108273','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_108273','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (507,'RG_WKS','WKS_SO_SALES_108565','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_108565','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (508,'RG_WKS','WKS_SO_SALES_118477','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_118477','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (509,'RG_WKS','WKS_SO_SALES_109772','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_109772','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (510,'RG_WKS','WKS_SO_SALES_135976','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_135976','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (511,'RG_WKS','WKS_SO_SALES_137021','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_137021','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (512,'RG_WKS','WKS_SO_INV_133980','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133980','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (513,'RG_WKS','WKS_SO_INV_133981','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133981','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (514,'RG_WKS','WKS_SO_INV_133982','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133982','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (515,'RG_WKS','WKS_SO_INV_133983','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133983','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (516,'RG_WKS','WKS_SO_INV_133984','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133984','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (517,'RG_WKS','WKS_SO_INV_133985','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133985','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (518,'RG_WKS','WKS_SO_INV_131164','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_131164','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (519,'RG_WKS','WKS_SO_INV_131165','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_131165','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (520,'RG_WKS','WKS_SO_INV_131166','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_131166','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (521,'RG_WKS','WKS_SO_INV_131167','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_131167','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (522,'RG_WKS','WKS_SO_INV_130516','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130516','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (523,'RG_WKS','WKS_SO_INV_130517','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130517','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (524,'RG_WKS','WKS_SO_INV_130518','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130518','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (525,'RG_WKS','WKS_SO_INV_130519','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130519','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (526,'RG_WKS','WKS_SO_INV_130520','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130520','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (527,'RG_WKS','WKS_SO_INV_130521','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_130521','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (528,'RG_WKS','WKS_SO_INV_119024','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_119024','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (529,'RG_WKS','WKS_SO_INV_119025','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_119025','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (530,'RG_WKS','WKS_SO_INV_108129','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_108129','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (531,'RG_WKS','WKS_SO_INV_108273','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_108273','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (532,'RG_WKS','WKS_SO_INV_108565','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_108565','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (533,'RG_WKS','WKS_SO_INV_118477','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_118477','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (534,'RG_WKS','WKS_SO_INV_109772','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_109772','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (535,'RG_WKS','WKS_SO_INV_135976','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_135976','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (536,'RG_WKS','WKS_SO_INV_137021','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_137021','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (537,'RG_WKS','WKS_CUST_MASTER','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_CUST_MASTER','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (538,'RG_WKS','WKS_MY_ACCRUAL','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_ACCRUAL','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (539,'RG_WKS','WKS_MY_AFGR','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_AFGR','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (540,'RG_WKS','WKS_MY_CIW_MAP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_CIW_MAP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (541,'RG_WKS','WKS_MY_TARGETS','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_TARGETS','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (542,'RG_WKS','WKS_MY_LE_TARGET','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_LE_TARGET','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (543,'RG_WKS','WKS_MY_DISTRIBUTOR_DOC_TYPE','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_DISTRIBUTOR_DOC_TYPE','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (544,'RG_WKS','WKS_MY_IN_TRANSIT','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_IN_TRANSIT','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (545,'RG_WKS','WKS_SO_INV','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (546,'RG_WKS','WKS_SO_SALES','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (547,'RG_WKS','WKS_SO_SALES_TEMP','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_SALES_TEMP','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (548,'RG_WKS','MY_POS_MT_CUST_SALES','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','MY_POS_MT_CUST_SALES','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (549,'RG_WKS','WKS_MY_GT_DISTRIBUTOR_HIERARCHY','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_GT_DISTRIBUTOR_HIERARCHY','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (550,'RG_WKS','WKS_MY_POS_MASTER','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_MY_POS_MASTER','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);
INSERT INTO META_RAW.HISTORICAL_OBJ_METADATA (ID,SOURCE_SCHEMA,SOURCE_TABLE, TARGET_DB,TARGET_SCHEMA,TARGET_TABLE,STAGE_SCHEMA,ISACTIVE,MARKET,TYPE_OF_LOAD,PRIORITY) VALUES (551,'RG_WKS','WKS_SO_INV_133986','PROD_DNA_CORE','SNAPOSEWKS_INTEGRATION','WKS_SO_INV_133986','UTILITY_RAW',TRUE,'OneSea','FULL_REFRESH',1);