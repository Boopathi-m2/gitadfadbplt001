use schema JPNSDL_RAW ;
create or replace TABLE EDI_BGN_SNDR (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	BGN_SNDR_CD VARCHAR(256) NOT NULL,
	DT_TYP VARCHAR(256),
	NM VARCHAR(256),
	LMP_DLT VARCHAR(256),
	TAX_INCLUDE VARCHAR(256),
	TAX_ROUND VARCHAR(256),
	VAN_TYPE VARCHAR(256),
	primary key (BGN_SNDR_CD)
);
create or replace TABLE EDI_BRAND_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	MEGA_BRAND VARCHAR(256) NOT NULL,
	SAP_CSTM_TYPE VARCHAR(256)
);
create or replace TABLE EDI_CHN_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	CHN_CD VARCHAR(256),
	LGL_NM VARCHAR(256),
	CMMN_NM VARCHAR(256),
	ADRS VARCHAR(256),
	ACNT_PRSN_CD VARCHAR(256),
	RANK VARCHAR(256),
	CHN_OFFC_CD VARCHAR(256),
	FRNC VARCHAR(256),
	SGMT VARCHAR(256),
	AN_TYP VARCHAR(256),
	PJ_TYP VARCHAR(256),
	SALES_GROUP VARCHAR(256),
	SCND_ACNT_PRSN VARCHAR(8)
);
create or replace TABLE EDI_CSTM_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	CSTM_CD VARCHAR(256) NOT NULL,
	CSTM_NM VARCHAR(256),
	CSTM_NM_KN VARCHAR(256),
	CSTM_NM_KNJ VARCHAR(256),
	ADRS VARCHAR(256),
	ADRS_KN VARCHAR(256),
	ADRS_KNJ VARCHAR(256),
	PST_CD VARCHAR(256),
	TEL_NUM VARCHAR(256),
	FAX_NUN VARCHAR(256),
	PLNT_CD VARCHAR(256),
	SHIP_DPT VARCHAR(256),
	SHIP_LD_TM NUMBER(5,2),
	JIS_PRFCT_CD VARCHAR(256),
	JIS_CITY_CD VARCHAR(256),
	CSTM_TYP VARCHAR(256),
	CMNT1 VARCHAR(256),
	BL_CLS_DT VARCHAR(256),
	TRD_TYP_CG_FLG VARCHAR(256),
	JRSD_DPT_CD VARCHAR(256),
	ACNT_PRSN_CD VARCHAR(256),
	BUY_FROM_CD VARCHAR(256),
	REBATE_REP_CD VARCHAR(256),
	UPDATEFLG VARCHAR(256),
	CUST_TFI_NUM VARCHAR(256),
	TRANSPORTER_ID VARCHAR(256),
	TRANSPORT_FEE_ID VARCHAR(256),
	TRANSPORT_TIMING VARCHAR(256)
);
create or replace TABLE EDI_CSTM_RLT_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	SOLD_TO_CSTM VARCHAR(256),
	SHIP_TO_CSTM VARCHAR(256),
	BILL_TO_CSTM VARCHAR(256),
	PAY_CSTM VARCHAR(256)
);
create or replace TABLE EDI_EXCL_RTLR (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	RTLR_CD VARCHAR(256) NOT NULL,
	primary key (RTLR_CD)
);
create or replace TABLE EDI_FRNCH_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	PH_CD VARCHAR(256),
	PH_LVL VARCHAR(256),
	PH_NM VARCHAR(256)
);
create or replace TABLE EDI_INVT_DT (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(30),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(30),
	CSTM_CD VARCHAR(10) NOT NULL,
	ITM_CD VARCHAR(18) NOT NULL,
	INVT_DT TIMESTAMP_NTZ(9) NOT NULL,
	CS_QTY NUMBER(6,0),
	QTY NUMBER(6,0),
	PROC_DT TIMESTAMP_NTZ(9),
	VAN_TYPE VARCHAR(10),
	JAN_CD VARCHAR(18),
	primary key (CSTM_CD, ITM_CD, INVT_DT)
);
create or replace TABLE EDI_ITEM_CD_CHNG (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	BGN_SNDR_CD VARCHAR(256),
	ITEM_CD_TYP VARCHAR(256),
	WHLS_ITEM_CD VARCHAR(256),
	CPNY_ITEM_CD VARCHAR(256),
	PC NUMBER(30,0)
);
create or replace TABLE EDI_ITEM_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	ITEM_CD VARCHAR(256) NOT NULL,
	ITEM_NM VARCHAR(256),
	ITEN_NM_KN VARCHAR(256),
	ITEN_NM_KNJ VARCHAR(256),
	JAN_CD VARCHAR(256),
	ITF_CD VARCHAR(256),
	PC VARCHAR(256),
	UNT_PRC VARCHAR(256),
	SUB_FRNCH VARCHAR(256),
	JAN_CD_SO VARCHAR(256),
	ITF_CD_SO VARCHAR(256),
	UPDATEFLG VARCHAR(1),
	BASE_PROD VARCHAR(256),
	VARIANT VARCHAR(256),
	PUT_UP VARCHAR(256),
	MEGA_BRND VARCHAR(256),
	BRND VARCHAR(256),
	DLT_FLG VARCHAR(256),
	BASE_UOM VARCHAR(256),
	ITEM_CD_JD VARCHAR(256),
	SAP_CSTM_TYPE VARCHAR(256),
	MEGA_BRND_CHKFLG VARCHAR(256),
	PLANET_L3_FLG VARCHAR(256),
	REL_DT TIMESTAMP_NTZ(9),
	DISCON_DT TIMESTAMP_NTZ(9),
	NEW_PROD_TYPE VARCHAR(256),
	PROM_GOODS_FLG VARCHAR(256),
	PARENT_ITEM_CD VARCHAR(256),
	IMP_ITEM_FLG VARCHAR(256),
	SUCCEEDING_ITEM_CD VARCHAR(256),
	LDW_FLG01 VARCHAR(256),
	LDW_FLG02 VARCHAR(256),
	LDW_FLG03 VARCHAR(256)
);
create or replace TABLE EDI_JEDPAR (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	CUSTOMER_NUMBER VARCHAR(256) NOT NULL,
	PARTNER_FN VARCHAR(256) NOT NULL,
	INT_PARTNER_NUMBER VARCHAR(256) NOT NULL,
	SAP_CSTM_TYPE VARCHAR(256),
	STATUS VARCHAR(256) NOT NULL,
	PARTNER_CUSTOMER_CD VARCHAR(256),
	EXT_PARTNER_NUMBER VARCHAR(256),
	VAN_TYPE VARCHAR(256),
	primary key (CUSTOMER_NUMBER, PARTNER_FN, INT_PARTNER_NUMBER, STATUS)
);
create or replace TABLE EDI_RTLR_CD_CHNG (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	BGN_SNDR_CD VARCHAR(256) NOT NULL,
	RTLR_CD VARCHAR(256) NOT NULL,
	STR_CD VARCHAR(256),
	primary key (BGN_SNDR_CD, RTLR_CD)
);
create or replace TABLE EDI_SELL_OUT_PLANET (
	ID NUMBER(10,0),
	RCV_DT VARCHAR(256),
	TEST_FLAG VARCHAR(256),
	BGN_SNDR_CD VARCHAR(256),
	WS_CD VARCHAR(256),
	RTL_TYPE VARCHAR(256),
	RTL_CD VARCHAR(256),
	TRADE_TYPE VARCHAR(256),
	SHP_DATE VARCHAR(256),
	SHP_NUM VARCHAR(256),
	TRADE_CD VARCHAR(256),
	DEP_CD VARCHAR(256),
	CHG_CD VARCHAR(256),
	PERSON_IN_CHARGE VARCHAR(256),
	PERSON_NAME VARCHAR(256),
	RTL_NAME VARCHAR(256),
	RTL_HO_CD VARCHAR(256),
	RTL_ADDRESS_CD VARCHAR(256),
	DATA_TYPE VARCHAR(256),
	OPT_FLD VARCHAR(256),
	ITEM_NM VARCHAR(256),
	ITEM_CD_TYP VARCHAR(256),
	ITEM_CD VARCHAR(256),
	QTY VARCHAR(256),
	QTY_TYPE VARCHAR(256),
	PRICE VARCHAR(256),
	PRICE_TYPE VARCHAR(256),
	BGN_SNDR_CD_GLN VARCHAR(256),
	RCV_CD_GLN VARCHAR(256),
	WS_CD_GLN VARCHAR(256),
	SHP_WS_CD VARCHAR(256),
	SHP_WS_CD_GLN VARCHAR(256),
	REP_NAME_KANJI VARCHAR(256),
	REP_INFO VARCHAR(256),
	TRADE_CD_GLN VARCHAR(256),
	RTL_CD_GLN VARCHAR(256),
	RTL_NAME_KANJI VARCHAR(256),
	RTL_HO_CD_GLN VARCHAR(256),
	ITEM_CD_GTIN VARCHAR(256),
	ITEM_NM_KANJI VARCHAR(256),
	UNT_PRC VARCHAR(256),
	NET_PRC VARCHAR(256),
	SALES_CHAN_TYPE VARCHAR(256)
);
create or replace TABLE EDI_SELL_OUT_PLANET_BACKUP (
	ID NUMBER(10,0),
	RCV_DT VARCHAR(256),
	TEST_FLAG VARCHAR(256),
	BGN_SNDR_CD VARCHAR(256),
	WS_CD VARCHAR(256),
	RTL_TYPE VARCHAR(256),
	RTL_CD VARCHAR(256),
	TRADE_TYPE VARCHAR(256),
	SHP_DATE VARCHAR(256),
	SHP_NUM VARCHAR(256),
	TRADE_CD VARCHAR(256),
	DEP_CD VARCHAR(256),
	CHG_CD VARCHAR(256),
	PERSON_IN_CHARGE VARCHAR(256),
	PERSON_NAME VARCHAR(256),
	RTL_NAME VARCHAR(256),
	RTL_HO_CD VARCHAR(256),
	RTL_ADDRESS_CD VARCHAR(256),
	DATA_TYPE VARCHAR(256),
	OPT_FLD VARCHAR(256),
	ITEM_NM VARCHAR(256),
	ITEM_CD_TYP VARCHAR(256),
	ITEM_CD VARCHAR(256),
	QTY VARCHAR(256),
	QTY_TYPE VARCHAR(256),
	PRICE VARCHAR(256),
	PRICE_TYPE VARCHAR(256),
	BGN_SNDR_CD_GLN VARCHAR(256),
	RCV_CD_GLN VARCHAR(256),
	WS_CD_GLN VARCHAR(256),
	SHP_WS_CD VARCHAR(256),
	SHP_WS_CD_GLN VARCHAR(256),
	REP_NAME_KANJI VARCHAR(256),
	REP_INFO VARCHAR(256),
	TRADE_CD_GLN VARCHAR(256),
	RTL_CD_GLN VARCHAR(256),
	RTL_NAME_KANJI VARCHAR(256),
	RTL_HO_CD_GLN VARCHAR(256),
	ITEM_CD_GTIN VARCHAR(256),
	ITEM_NM_KANJI VARCHAR(256),
	UNT_PRC VARCHAR(256),
	NET_PRC VARCHAR(256),
	SALES_CHAN_TYPE VARCHAR(256)
);
create or replace TABLE EDI_STORE_M (
	CREATE_DT TIMESTAMP_NTZ(9),
	CREATE_USER VARCHAR(256),
	UPDATE_DT TIMESTAMP_NTZ(9),
	UPDATE_USER VARCHAR(256),
	REG_DT TIMESTAMP_NTZ(9),
	STR_CD VARCHAR(256) NOT NULL,
	LGL_NM_KNJ1 VARCHAR(256),
	LGL_NM_KNJ2 VARCHAR(256),
	LGL_NM_KN VARCHAR(256),
	CMMN_NM_KNJ VARCHAR(256),
	CMMN_NM_KN VARCHAR(256),
	ADRS_KNJ1 VARCHAR(256),
	ADRS_KNJ2 VARCHAR(256),
	ADRS_KN VARCHAR(256),
	PST_CO VARCHAR(256),
	TEL_NO VARCHAR(256),
	JIS_PRFCT_C VARCHAR(256),
	JIS_CITY_CD VARCHAR(256),
	TRD_CD VARCHAR(256),
	TRD_OFFC_CD VARCHAR(256),
	CHN_CD VARCHAR(256),
	CHN_OFFC_CD VARCHAR(256),
	CHN_CD_OTH VARCHAR(256),
	EMP_CD_KK VARCHAR(256),
	ALL_STR_ASS VARCHAR(256),
	AGRM_STR VARCHAR(256),
	PJ_ASS VARCHAR(256),
	EMP_CD_ROC VARCHAR(256)
);
create or replace TABLE JP_POS_DAILY_AEON (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_CSMS (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_DNKI (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_OTHERS (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_SUGI (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_TSUR (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE JP_POS_DAILY_WLCA (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss')
);
create or replace TABLE SDL_MDS_JP_C360_ENG_TRANSLATION (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	NAME_JP VARCHAR(200),
	NAME_ENG VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_CUSTOMER_CA_RATIO (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	DEFAULT_CA_RATIO NUMBER(28,5),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_ECOM_NTS (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	YEAR NUMBER(31,0),
	MONTH NUMBER(31,0),
	MARKET VARCHAR(200),
	GFO VARCHAR(200),
	NEED_STATE VARCHAR(200),
	BRAND VARCHAR(200),
	CUSTOMER_NAME VARCHAR(200),
	CRNCY_CD VARCHAR(200),
	NTS_LCY NUMBER(31,3),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_ECOM_PRODUCT (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	DATASET VARCHAR(200),
	CUST_ATTR_1 VARCHAR(200),
	CUST_ATTR_2 VARCHAR(200),
	UPC VARCHAR(200),
	SKU_NAME VARCHAR(510),
	PROD_ATTR_1 VARCHAR(200),
	PROD_ATTR_2 VARCHAR(200),
	PROD_ATTR_3 VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_INTAGE_SKINHEALTH_CATEGORY (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	PRODUCT VARCHAR(200),
	JAN_CODE VARCHAR(200),
	BRAND_CODE VARCHAR(500),
	BRAND_NAME VARCHAR(500),
	BRAND_ID NUMBER(18,0),
	CATEGORY_CODE VARCHAR(500),
	CATEGORY_NAME VARCHAR(500),
	CATEGORY_ID NUMBER(18,0),
	SUB_CATEGORY_CODE VARCHAR(500),
	SUB_CATEGORY_NAME VARCHAR(500),
	SUB_CATEGORY_ID NUMBER(18,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_JAN_DESCRIPTION (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	ITEN_NM_KNJ VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_MT_ACCOUNT_KEY (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	CSW_CATEGORY_1 VARCHAR(200),
	CSW_SORT_KEY NUMBER(31,2),
	DELETE_FLAG VARCHAR(2),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	FIELD_CONDITION VARCHAR(200),
	ID NUMBER(18,0),
	KEY_FIGURE_NAME_DSP VARCHAR(200),
	KEY_FIGURE_NAME_KANJI VARCHAR(200),
	KEY_FIGURE_NUMBER NUMBER(31,2),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	REFERENCE_COLUMN VARCHAR(200),
	REFERENCE_FIELD VARCHAR(200),
	REFERENCE_TABLE VARCHAR(200),
	SIGN_OF_NUMBER NUMBER(31,2),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
create or replace TABLE SDL_MDS_JP_MT_CHN_CSTM_RT (
	CHANGETRACKINGMASK NUMBER(18,0),
	CHN_CD VARCHAR(200),
	CODE VARCHAR(500),
	CSTM_CD VARCHAR(200),
	DST_RT VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MJR_PROD_CD VARCHAR(200),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
create or replace TABLE SDL_MDS_JP_MT_CHN_MJP_EMP_CHG (
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CD_CODE VARCHAR(200),
	FRANCHISECODE VARCHAR(200),
	EMP_CD VARCHAR(200),
	DIVISION VARCHAR(200),
	DIVISION_GROUP VARCHAR(200)
);
create or replace TABLE SDL_MDS_JP_MT_EMP (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	EMP_NM_KNJ VARCHAR(400),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	CSTCTR_CD VARCHAR(200),
	EMP_TYP VARCHAR(200),
	ORG_CD VARCHAR(200),
	SLM_CD VARCHAR(200),
	WWID VARCHAR(200)
);
create or replace TABLE SDL_MDS_JP_MT_FRNCH_CDD (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	PH_LVL VARCHAR(2),
	PH_SRT VARCHAR(14),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
create or replace TABLE SDL_MDS_JP_MT_IN_OUT_CONV (
	BL_DT_FROM VARCHAR(200),
	BL_DT_TO VARCHAR(200),
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	SLD_TO VARCHAR(200),
	STR_CD VARCHAR(200),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
create or replace TABLE SDL_MDS_JP_MT_ITEM_CDD (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	ITEM_CD VARCHAR(200),
	JAN_CD VARCHAR(40),
	JPCD_PH VARCHAR(200),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0)
);
create or replace TABLE SDL_MDS_JP_MT_SO_ITEM_CHG (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	BGN_SNDR_CD VARCHAR(200),
	EXT_JAN_CD VARCHAR(200),
	INT_JAN_CD VARCHAR(200),
	UNIT_PRICE NUMBER(28,0),
	QTY NUMBER(28,0),
	ERROR_TYPE NUMBER(28,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_MT_SO_RTLR_CHG (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	BGN_SNDR_CD VARCHAR(200),
	RTLR_CD VARCHAR(200),
	RTLR_NAME VARCHAR(200),
	STR_CD VARCHAR(200),
	ERROR_TYPE NUMBER(28,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_MT_SO_WS_CHG (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	BGN_SNDR_CD VARCHAR(200),
	WS_CD VARCHAR(200),
	INT_PARTNER_NUMBER VARCHAR(200),
	ERROR_TYPE NUMBER(28,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_POS_ACCOUNT_MAPPING (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_POS_PRODUCT_MAPPING (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	CATEGORY_CODE VARCHAR(500),
	CATEGORY_NAME VARCHAR(500),
	CATEGORY_ID NUMBER(18,0),
	SUB_CATEGORY_CODE VARCHAR(500),
	SUB_CATEGORY_NAME VARCHAR(500),
	SUB_CATEGORY_ID NUMBER(18,0),
	MARKER_CODE VARCHAR(500),
	MARKER_NAME VARCHAR(500),
	MARKER_ID NUMBER(18,0),
	BRAND_CODE VARCHAR(500),
	BRAND_NAME VARCHAR(500),
	BRAND_ID NUMBER(18,0),
	SUB_BRAND_CODE VARCHAR(500),
	SUB_BRAND_NAME VARCHAR(500),
	SUB_BRAND_ID NUMBER(18,0),
	SIZE_CODE VARCHAR(500),
	SIZE_NAME VARCHAR(500),
	SIZE_ID NUMBER(18,0),
	FORM_TYPE_CODE VARCHAR(500),
	FORM_TYPE_NAME VARCHAR(500),
	FORM_TYPE_ID NUMBER(18,0),
	ORAL_FUNCTION_CODE VARCHAR(500),
	ORAL_FUNCTION_NAME VARCHAR(500),
	ORAL_FUNCTION_ID NUMBER(18,0),
	OTHER_1 VARCHAR(200),
	OTHER_2 VARCHAR(200),
	OTHER_3 VARCHAR(200),
	OTHER_4 VARCHAR(200),
	OTHER_5 VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_POS_STORE_MAPPING (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	STORE_KEY_1 VARCHAR(200),
	STORE_KEY_2 VARCHAR(200),
	ACCOUNT_KEY VARCHAR(200),
	PLANET_STORE_CODE NUMBER(28,0),
	SALES_CAT_1 VARCHAR(200),
	SALES_CAT_2 VARCHAR(200),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_PRODUCT_CA_RATIO (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	RTL_HO_CD_CODE VARCHAR(500),
	RTL_HO_CD_NAME VARCHAR(500),
	RTL_HO_CD_ID NUMBER(18,0),
	ITEM_CD VARCHAR(200),
	DEFAULT_CA_RATIO NUMBER(28,5),
	NEW_CA_RATIO NUMBER(28,5),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_JP_PS_TARGETS (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	ATTRIBUTE_1 VARCHAR(200),
	ATTRIBUTE_2 VARCHAR(200),
	CHANNEL VARCHAR(200),
	RE VARCHAR(200),
	VALUE NUMBER(31,3)
);
create or replace TABLE SDL_MDS_JP_PS_WEIGHTS (
	CHANGETRACKINGMASK NUMBER(18,0),
	CODE VARCHAR(500),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	ID NUMBER(18,0),
	KPI VARCHAR(200),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	MUID VARCHAR(36),
	NAME VARCHAR(500),
	VALIDATIONSTATUS VARCHAR(500),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	WEIGHT NUMBER(31,3),
	CHANNEL VARCHAR(200)
);
create or replace TABLE SDL_MDS_JP_SKU_BENCHMARKS (
	ID NUMBER(18,0),
	MUID VARCHAR(36),
	VERSIONNAME VARCHAR(100),
	VERSIONNUMBER NUMBER(18,0),
	VERSION_ID NUMBER(18,0),
	VERSIONFLAG VARCHAR(100),
	NAME VARCHAR(500),
	CODE VARCHAR(500),
	CHANGETRACKINGMASK NUMBER(18,0),
	JJ_UPC VARCHAR(200),
	JJ_SKU_DESCRIPTION VARCHAR(510),
	JJ_PACKSIZE NUMBER(31,3),
	JJ_TARGET NUMBER(31,3),
	VARIANCE NUMBER(31,3),
	COMP_UPC VARCHAR(200),
	COMP_SKU_DESCRIPTION VARCHAR(510),
	COMP_PACKSIZE NUMBER(31,3),
	VALID_FROM TIMESTAMP_NTZ(9),
	VALID_TO TIMESTAMP_NTZ(9),
	ENTERDATETIME TIMESTAMP_NTZ(9),
	ENTERUSERNAME VARCHAR(200),
	ENTERVERSIONNUMBER NUMBER(18,0),
	LASTCHGDATETIME TIMESTAMP_NTZ(9),
	LASTCHGUSERNAME VARCHAR(200),
	LASTCHGVERSIONNUMBER NUMBER(18,0),
	VALIDATIONSTATUS VARCHAR(500)
);
create or replace TABLE SDL_MDS_LOG (
	STATUS VARCHAR(100),
	RESULT VARCHAR(10000),
	JOB_NAME VARCHAR(100),
	QUERY VARCHAR(10000),
	CRTD_DTTM TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))
);
create or replace TABLE SDL_POP6_JP_DISPLAYS (
	VISIT_ID VARCHAR(255),
	DISPLAY_PLAN_ID VARCHAR(255),
	DISPLAY_TYPE VARCHAR(255),
	DISPLAY_CODE VARCHAR(255),
	DISPLAY_NAME VARCHAR(255),
	START_DATE DATE,
	END_DATE DATE,
	CHECKLIST_METHOD VARCHAR(50),
	DISPLAY_NUMBER NUMBER(18,0),
	PRODUCT_ATTRIBUTE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE VARCHAR(200),
	PRODUCT_ATTRIBUTE_VALUE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_VALUE VARCHAR(255),
	COMMENTS VARCHAR(255),
	FIELD_ID VARCHAR(255),
	FIELD_CODE VARCHAR(255),
	FIELD_LABEL VARCHAR(255),
	FIELD_TYPE VARCHAR(50),
	DEPENDENT_ON_FIELD_ID VARCHAR(255),
	RESPONSE VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_DISPLAY_PLANS (
	DISPLAY_PLAN_ID VARCHAR(255),
	STATUS NUMBER(18,0),
	ALLOCATION_METHOD VARCHAR(255),
	POP_CODE_OR_POP_LIST_CODE VARCHAR(50),
	TEAM VARCHAR(50),
	DISPLAY_CODE VARCHAR(255),
	DISPLAY_NAME VARCHAR(255),
	REQUIRED_NUMBER_OF_DISPLAYS NUMBER(18,0),
	START_DATE DATE,
	END_DATE DATE,
	PRODUCT_ATTRIBUTE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE VARCHAR(200),
	PRODUCT_ATTRIBUTE_VALUE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_VALUE VARCHAR(255),
	COMMENTS VARCHAR(255),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_EXCLUSION (
	EXCLUDE_KPI VARCHAR(10),
	VISIT_DATE DATE,
	POP_CODE VARCHAR(40),
	COUNTRY VARCHAR(10),
	MERCHANDISER_USERID VARCHAR(100),
	AUDIT_FORM_NAME VARCHAR(500),
	SECTION_NAME VARCHAR(500),
	OPERATION_TYPE VARCHAR(10),
	FILE_NAME VARCHAR(40),
	RUN_ID VARCHAR(40),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_EXCLUSIONDATA (
	"exclude_kpi" VARCHAR(16777216),
	"visit_date" DATE,
	"pop_code" VARCHAR(16777216),
	"country" VARCHAR(16777216),
	"merchandiser_userid" VARCHAR(16777216),
	"audit_form_name" VARCHAR(16777216),
	"section_name" VARCHAR(16777216),
	"operation_type" VARCHAR(16777216),
	FILE_NAME VARCHAR(35) NOT NULL,
	RUN_ID VARCHAR(14) NOT NULL,
	CRTD_DTTM VARCHAR(19) NOT NULL
);
create or replace TABLE SDL_POP6_JP_EXECUTED_VISITS (
	VISIT_ID VARCHAR(255),
	VISIT_DATE DATE,
	CHECK_IN_DATETIME TIMESTAMP_NTZ(9),
	CHECK_OUT_DATETIME TIMESTAMP_NTZ(9),
	POPDB_ID VARCHAR(255),
	POP_CODE VARCHAR(50),
	POP_NAME VARCHAR(100),
	ADDRESS VARCHAR(150),
	CHECK_IN_LONGITUDE NUMBER(18,5),
	CHECK_IN_LATITUDE NUMBER(18,5),
	CHECK_OUT_LONGITUDE NUMBER(18,5),
	CHECK_OUT_LATITUDE NUMBER(18,5),
	CHECK_IN_PHOTO VARCHAR(200),
	CHECK_OUT_PHOTO VARCHAR(200),
	USERNAME VARCHAR(50),
	USER_FULL_NAME VARCHAR(50),
	SUPERIOR_USERNAME VARCHAR(50),
	SUPERIOR_NAME VARCHAR(50),
	PLANNED_VISIT NUMBER(18,0),
	CANCELLED_VISIT NUMBER(18,0),
	CANCELLATION_REASON VARCHAR(255),
	CANCELLATION_NOTE VARCHAR(255),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_EXECUTE_VISIT (
	"Visit_ID" VARCHAR(16777216),
	"Visit_Date" DATE,
	"Check-In_DateTime" TIMESTAMP_NTZ(9),
	"Check-Out_DateTime" TIMESTAMP_NTZ(9),
	POPDB_ID VARCHAR(16777216),
	"POP_Code" NUMBER(38,0),
	"POP_Name" VARCHAR(16777216),
	"Address" VARCHAR(16777216),
	"Check-In_Longitude" NUMBER(8,5),
	"Check-In_Latitude" NUMBER(7,5),
	"Check-Out_Longitude" NUMBER(8,5),
	"Check-Out_Latitude" NUMBER(7,5),
	"Check-In_Photo" VARCHAR(16777216),
	"Check-Out_Photo" VARCHAR(16777216),
	"Username" VARCHAR(16777216),
	"User_Full_Name" VARCHAR(16777216),
	"Superior_Username" VARCHAR(16777216),
	"Superior_Name" VARCHAR(16777216),
	"Planned_Visit" NUMBER(38,0),
	"Cancelled_Visit" NUMBER(38,0),
	"Cancellation_Reason" VARCHAR(16777216),
	"Cancellation_Note" VARCHAR(16777216),
	FILE_NAME VARCHAR(28) NOT NULL,
	RUN_ID VARCHAR(14) NOT NULL,
	CRTD_DTTM VARCHAR(19) NOT NULL
);
create or replace TABLE SDL_POP6_JP_GENERAL_AUDITS (
	VISIT_ID VARCHAR(255),
	AUDIT_FORM_ID VARCHAR(255),
	AUDIT_FORM VARCHAR(255),
	SECTION_ID VARCHAR(255),
	SECTION VARCHAR(255),
	SUBSECTION_ID VARCHAR(255),
	SUBSECTION VARCHAR(255),
	FIELD_ID VARCHAR(255),
	FIELD_CODE VARCHAR(255),
	FIELD_LABEL VARCHAR(255),
	FIELD_TYPE VARCHAR(50),
	DEPENDENT_ON_FIELD_ID VARCHAR(255),
	RESPONSE VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_PLANNED_VISITS (
	PLANNED_VISIT_DATE DATE,
	POPDB_ID VARCHAR(255),
	POP_CODE VARCHAR(50),
	POP_NAME VARCHAR(100),
	ADDRESS VARCHAR(150),
	USERNAME VARCHAR(50),
	USER_FULL_NAME VARCHAR(50),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_POPS (
	STATUS NUMBER(18,0),
	POPDB_ID VARCHAR(255),
	POP_CODE VARCHAR(50),
	POP_NAME VARCHAR(100),
	ADDRESS VARCHAR(100),
	LONGITUDE NUMBER(18,5),
	LATITUDE NUMBER(18,5),
	BUSINESS_UNITS_ID VARCHAR(255),
	BUSINESS_UNIT_NAME VARCHAR(255),
	COUNTRY VARCHAR(200),
	CHANNEL VARCHAR(200),
	RETAIL_ENVIRONMENT_PS VARCHAR(200),
	SALES_GROUP_NAME VARCHAR(200),
	CUSTOMER VARCHAR(200),
	SALES_GROUP_CODE VARCHAR(200),
	CUSTOMER_GRADE VARCHAR(200),
	TERRITORY_OR_REGION VARCHAR(200),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_POP_LISTS (
	STATUS NUMBER(18,0),
	POP_LIST VARCHAR(25),
	POPDB_ID VARCHAR(255),
	POP_CODE VARCHAR(50),
	POP_NAME VARCHAR(100),
	POP_LIST_DATE DATE,
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_PRODUCTS (
	STATUS NUMBER(18,0),
	PRODUCTDB_ID VARCHAR(255),
	BARCODE VARCHAR(150),
	SKU VARCHAR(150),
	UNIT_PRICE NUMBER(18,2),
	DISPLAY_ORDER NUMBER(18,0),
	LAUNCH_DATE VARCHAR(20),
	LARGEST_UOM_QUANTITY NUMBER(18,0),
	MIDDLE_UOM_QUANTITY NUMBER(18,0),
	SMALLEST_UOM_QUANTITY NUMBER(18,0),
	COMPANY VARCHAR(200),
	SKU_ENGLISH VARCHAR(200),
	SKU_CODE VARCHAR(200),
	PS_CATEGORY VARCHAR(200),
	PS_SEGMENT VARCHAR(200),
	PS_CATEGORY_SEGMENT VARCHAR(200),
	COUNTRY_L1 VARCHAR(200),
	REGIONAL_FRANCHISE_L2 VARCHAR(200),
	FRANCHISE_L3 VARCHAR(200),
	BRAND_L4 VARCHAR(200),
	SUB_CATEGORY_L5 VARCHAR(200),
	PLATFORM_L6 VARCHAR(200),
	VARIANCE_L7 VARCHAR(200),
	PACK_SIZE_L8 VARCHAR(200),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_PRODUCT_ATTRIBUTE_AUDITS (
	VISIT_ID VARCHAR(255),
	AUDIT_FORM_ID VARCHAR(255),
	AUDIT_FORM VARCHAR(255),
	SECTION_ID VARCHAR(255),
	SECTION VARCHAR(255),
	FIELD_ID VARCHAR(255),
	FIELD_CODE VARCHAR(255),
	FIELD_LABEL VARCHAR(255),
	FIELD_TYPE VARCHAR(50),
	DEPENDENT_ON_FIELD_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE VARCHAR(200),
	PRODUCT_ATTRIBUTE_VALUE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_VALUE VARCHAR(200),
	RESPONSE VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_PRODUCT_LISTS_ALLOCATION (
	PRODUCT_GROUP_STATUS NUMBER(18,0),
	PRODUCT_GROUP VARCHAR(25),
	PRODUCT_LIST_STATUS NUMBER(18,0),
	PRODUCT_LIST VARCHAR(100),
	PRODUCT_LIST_CODE VARCHAR(100),
	POP_ATTRIBUTE_ID VARCHAR(255),
	POP_ATTRIBUTE VARCHAR(200),
	POP_ATTRIBUTE_VALUE_ID VARCHAR(255),
	POP_ATTRIBUTE_VALUE VARCHAR(200),
	PROD_GRP_DATE DATE,
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_PRODUCT_LISTS_POPS (
	PRODUCT_LIST VARCHAR(100),
	POPDB_ID VARCHAR(255),
	POP_CODE VARCHAR(50),
	POP_NAME VARCHAR(100),
	PROD_GRP_DATE DATE,
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_PRODUCT_LISTS_PRODUCTS (
	PRODUCT_LIST VARCHAR(100),
	PRODUCT_LIST_CODE VARCHAR(100),
	PRODUCTDB_ID VARCHAR(255),
	SKU VARCHAR(150),
	MSL_RANKING VARCHAR(20),
	PROD_GRP_DATE DATE,
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POP6_JP_PROMOTIONS (
	VISIT_ID VARCHAR(255),
	PROMOTION_PLAN_ID VARCHAR(255),
	PROMOTION_CODE VARCHAR(255),
	PROMOTION_NAME VARCHAR(255),
	PROMOTION_MECHANICS VARCHAR(255),
	PROMOTION_TYPE VARCHAR(255),
	START_DATE DATE,
	END_DATE DATE,
	PRODUCT_ATTRIBUTE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE VARCHAR(200),
	PRODUCT_ATTRIBUTE_VALUE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_VALUE VARCHAR(65535),
	PROMOTION_PRICE NUMBER(18,2),
	PROMOTION_COMPLIANCE VARCHAR(10),
	ACTUAL_PRICE NUMBER(18,2),
	NON_COMPLIANCE_REASON VARCHAR(255),
	PHOTO VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_PROMOTION_PLANS (
	STATUS NUMBER(18,0),
	PROMOTION_PLAN_ID VARCHAR(255),
	ALLOCATION_METHOD VARCHAR(255),
	POP_CODE_OR_POP_LIST_CODE VARCHAR(50),
	TEAM VARCHAR(50),
	PROMOTION_CODE VARCHAR(255),
	PROMOTION_NAME VARCHAR(255),
	PROMOTION_MECHANICS VARCHAR(255),
	START_DATE DATE,
	END_DATE DATE,
	PRODUCT_ATTRIBUTE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE VARCHAR(200),
	PRODUCT_ATTRIBUTE_VALUE_ID VARCHAR(255),
	PRODUCT_ATTRIBUTE_VALUE VARCHAR(65535),
	PROMOTION_PRICE NUMBER(18,2),
	PRICE_FIELD VARCHAR(255),
	PHOTO_FIELD VARCHAR(255),
	REASON_FIELD VARCHAR(255),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_SERVICE_LEVELS (
	SALES_GRP_NM VARCHAR(200),
	CUSTOMER_GRADE VARCHAR(200),
	TEAM VARCHAR(200),
	VISIT_FREQUENCY VARCHAR(10),
	ESTIMATED_VISIT_DURATION VARCHAR(150),
	SERVICE_LEVEL_DATE DATE,
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_SKU_AUDITS (
	VISIT_ID VARCHAR(255),
	AUDIT_FORM_ID VARCHAR(255),
	AUDIT_FORM VARCHAR(255),
	SECTION_ID VARCHAR(255),
	SECTION VARCHAR(255),
	FIELD_ID VARCHAR(255),
	FIELD_CODE VARCHAR(255),
	FIELD_LABEL VARCHAR(255),
	FIELD_TYPE VARCHAR(50),
	DEPENDENT_ON_FIELD_ID VARCHAR(255),
	SKU_ID VARCHAR(255),
	SKU VARCHAR(255),
	RESPONSE VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_TASKS (
	VISIT_ID VARCHAR(255),
	TASK_GROUP VARCHAR(50),
	TASK_ID NUMBER(18,0),
	TASK_NAME VARCHAR(50),
	FIELD_ID VARCHAR(255),
	FIELD_CODE VARCHAR(255),
	FIELD_LABEL VARCHAR(255),
	FIELD_TYPE VARCHAR(50),
	DEPENDENT_ON_FIELD_ID VARCHAR(255),
	RESPONSE VARCHAR(65535),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9)
);
create or replace TABLE SDL_POP6_JP_USERS (
	STATUS NUMBER(18,0),
	USERDB_ID VARCHAR(255),
	USERNAME VARCHAR(50),
	FIRST_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50),
	TEAM VARCHAR(50),
	SUPERIOR_NAME VARCHAR(50),
	AUTHORISATION_GROUP VARCHAR(50),
	EMAIL_ADDRESS VARCHAR(50),
	LONGITUDE NUMBER(18,5),
	LATITUDE NUMBER(18,5),
	BUSINESS_UNITS_ID VARCHAR(200),
	BUSINESS_UNIT_NAME VARCHAR(200),
	FILE_NAME VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CRTD_DTTM TIMESTAMP_NTZ(9),
	HASHKEY VARCHAR(200)
);
create or replace TABLE SDL_POS_DAILY_MDS_SYNC (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	ACCOUNT_KEY VARCHAR(4)
);
create or replace TABLE TSP_DATAMART_PROMO_AMT (
	PROMO_CD VARCHAR(10),
	JAN_CD VARCHAR(18),
	TSP_ACNT_CD VARCHAR(10),
	ACNT_CD VARCHAR(6),
	CSTCTR_CD VARCHAR(4),
	PAYEE_CD VARCHAR(10),
	ACT_FLG VARCHAR(10),
	AMT NUMBER(11,0),
	PROMO_STATUS_CD VARCHAR(2),
	STATUS VARCHAR(2),
	CHN_CD VARCHAR(5),
	APPLY_BEGIN_DT TIMESTAMP_NTZ(9),
	APPLY_END_DT TIMESTAMP_NTZ(9),
	PROMO_DIRECT_FLG VARCHAR(2)
);
create or replace TABLE WK_PN_CSV_IMAGE (
	LOAD_DT TIMESTAMP_NTZ(9),
	LOAD_FILE_NM VARCHAR(2000),
	COL001 VARCHAR(400),
	COL002 VARCHAR(400),
	COL003 VARCHAR(400),
	COL004 VARCHAR(200),
	COL005 VARCHAR(200),
	COL006 VARCHAR(400),
	COL007 VARCHAR(400),
	COL008 VARCHAR(400),
	COL009 VARCHAR(400),
	COL010 VARCHAR(256),
	COL011 VARCHAR(256),
	COL012 VARCHAR(256),
	COL013 VARCHAR(256),
	COL014 VARCHAR(256),
	COL015 VARCHAR(256),
	COL016 VARCHAR(256),
	COL017 VARCHAR(256),
	COL018 VARCHAR(256),
	COL019 VARCHAR(256),
	COL020 VARCHAR(256),
	COL021 VARCHAR(256),
	COL022 VARCHAR(256),
	COL023 VARCHAR(256),
	COL024 VARCHAR(256),
	COL025 VARCHAR(256),
	COL026 VARCHAR(256),
	COL027 VARCHAR(256),
	COL028 VARCHAR(256),
	COL029 VARCHAR(256),
	COL030 VARCHAR(256),
	COL031 VARCHAR(256),
	COL032 VARCHAR(256),
	COL033 VARCHAR(256),
	COL034 VARCHAR(256),
	COL035 VARCHAR(256),
	COL036 VARCHAR(256),
	COL037 VARCHAR(256),
	COL038 VARCHAR(256),
	COL039 VARCHAR(256),
	COL040 VARCHAR(256),
	COL041 VARCHAR(256),
	COL042 VARCHAR(256),
	COL043 VARCHAR(256),
	COL044 VARCHAR(256),
	COL045 VARCHAR(256),
	COL046 VARCHAR(256),
	COL047 VARCHAR(256),
	COL048 VARCHAR(256),
	COL049 VARCHAR(256),
	COL050 VARCHAR(256),
	COL051 VARCHAR(256),
	COL052 VARCHAR(256),
	COL053 VARCHAR(256),
	COL054 VARCHAR(256),
	COL055 VARCHAR(256),
	COL056 VARCHAR(256),
	COL057 VARCHAR(256),
	COL058 VARCHAR(256),
	COL059 VARCHAR(256),
	COL060 VARCHAR(256),
	COL061 VARCHAR(256),
	COL062 VARCHAR(256),
	COL063 VARCHAR(256),
	COL064 VARCHAR(256),
	COL065 VARCHAR(256),
	COL066 VARCHAR(256),
	COL067 VARCHAR(256),
	COL068 VARCHAR(256),
	COL069 VARCHAR(256),
	COL070 VARCHAR(256),
	COL071 VARCHAR(256),
	COL072 VARCHAR(256),
	COL073 VARCHAR(256),
	COL074 VARCHAR(256),
	COL075 VARCHAR(256),
	COL076 VARCHAR(256),
	COL077 VARCHAR(256),
	COL078 VARCHAR(256),
	COL079 VARCHAR(256),
	COL080 VARCHAR(256),
	COL081 VARCHAR(256),
	COL082 VARCHAR(256),
	COL083 VARCHAR(256),
	COL084 VARCHAR(256),
	COL085 VARCHAR(256),
	COL086 VARCHAR(256),
	COL087 VARCHAR(256),
	COL088 VARCHAR(256),
	COL089 VARCHAR(256),
	COL090 VARCHAR(256),
	COL091 VARCHAR(256),
	COL092 VARCHAR(256),
	COL093 VARCHAR(256),
	COL094 VARCHAR(256),
	COL095 VARCHAR(256),
	COL096 VARCHAR(256),
	COL097 VARCHAR(256),
	COL098 VARCHAR(256),
	COL099 VARCHAR(256),
	COL100 VARCHAR(256),
	COL101 VARCHAR(256),
	COL102 VARCHAR(256),
	COL103 VARCHAR(256),
	COL104 VARCHAR(256),
	COL105 VARCHAR(256),
	COL106 VARCHAR(256),
	COL107 VARCHAR(256),
	COL108 VARCHAR(256),
	COL109 VARCHAR(256),
	COL110 VARCHAR(256),
	COL111 VARCHAR(256),
	COL112 VARCHAR(256),
	COL113 VARCHAR(256),
	COL114 VARCHAR(256),
	COL115 VARCHAR(256),
	COL116 VARCHAR(256),
	COL117 VARCHAR(256),
	COL118 VARCHAR(256),
	COL119 VARCHAR(256),
	COL120 VARCHAR(256),
	COL121 VARCHAR(256),
	COL122 VARCHAR(256),
	COL123 VARCHAR(256),
	COL124 VARCHAR(256),
	COL125 VARCHAR(256),
	COL126 VARCHAR(256),
	COL127 VARCHAR(2000),
	COL128 VARCHAR(2000),
	COL129 VARCHAR(2000),
	COL130 VARCHAR(800),
	COL131 VARCHAR(800),
	COL132 VARCHAR(400),
	COL133 VARCHAR(400),
	COL134 VARCHAR(256),
	COL135 VARCHAR(256),
	COL136 VARCHAR(256),
	COL137 VARCHAR(256),
	COL138 VARCHAR(256),
	COL139 VARCHAR(256)
);
