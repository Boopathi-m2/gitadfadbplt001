-- Pacific
create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ORDER_HEADER (
	ORDER_KEY NUMBER(10,0),
	ORDER_TYPE_KEY NUMBER(10,0),
	ACCT_KEY NUMBER(10,0),
	ORDER_DATE VARCHAR(255),
	STATUS NUMBER(10,0),
	CHARGE VARCHAR(256),
	CONFIRMATION VARCHAR(256),
	DIARY_ITEM_KEY NUMBER(10,0),
	WORK_ITEM_KEY NUMBER(10,0),
	ACCOUNT_ORDER_NO VARCHAR(256),
	DELVRY_INSTNS VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_SYMBION_DSTR (
	INV_DT VARCHAR(16777216) NOT NULL,
	STATE VARCHAR(16777216),
	WAREHOUSE VARCHAR(16777216),
	WAREHOUSE_DESC VARCHAR(16777216),
	SYMBION_PRODUCT_NO VARCHAR(16777216),
	SYMBION_PRODUCT_DESC VARCHAR(16777216),
	SUPPLIER_PART_NO VARCHAR(16777216),
	EAN VARCHAR(16777216),
	GLOBAL_STD_COST VARCHAR(16777216),
	DATE_INTRODUCED VARCHAR(16777216),
	DATE_LAST_RECIVED VARCHAR(16777216),
	OOSR VARCHAR(16777216),
	SOH_AMT VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	ON_ORDER VARCHAR(16777216),
	BACK_ORDER VARCHAR(16777216),
	RESERVED_AMT_FOR_ORDER VARCHAR(16777216),
	RESERVED_QTY_FOR_ORDER VARCHAR(16777216),
	RESERVED_AMT_FOR_QA VARCHAR(16777216),
	RESERVED_QTY_FOR_QA VARCHAR(16777216),
	AVAILABLE_AMT VARCHAR(16777216),
	AVAILABLE_QTY VARCHAR(16777216),
	MTD VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PACIFIC_PERENSO_CALL_COVERAGE_TARGETS (
	ACCOUNT_TYPE_DESCRIPTION VARCHAR(256),
	ACCOUNT_GRADE VARCHAR(50),
	WEEKLY_TARGETS NUMBER(10,0),
	MONTHLY_TARGETS NUMBER(10,0),
	YEARLY_TARGETS NUMBER(10,3),
	CALL_PER_WEEK NUMBER(10,5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_CUSTOM_LIST (
	ACCT_KEY NUMBER(10,0),
	FIELD_KEY NUMBER(10,0),
	OPTION_DESC VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_FIELDS (
	FIELD_KEY NUMBER(10,0),
	FIELD_DESC VARCHAR(100),
	FIELD_TYPE NUMBER(10,0),
	ACCT_TYPE_KEY NUMBER(10,0),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_IG_INVENTORY_DATA (
	INV_DT VARCHAR(8) NOT NULL,
	STATE VARCHAR(16777216),
	WARE_HOUSE VARCHAR(16777216),
	PE_ITEM_NO VARCHAR(16777216),
	ITEM_DESCRIPTION VARCHAR(16777216),
	STOCK_DETAILS_PROMO_IND VARCHAR(16777216),
	STOCK_DETAILS_VENDOR VARCHAR(16777216),
	STOCK_DETAILS_VENDOR_DESCRIPTION VARCHAR(16777216),
	STOCK_DETAILS_SUB_VENDOR VARCHAR(16777216),
	STOCK_DETAILS_LEAD_TIME VARCHAR(16777216),
	STOCK_DETAILS_BUYER_NUMBER VARCHAR(16777216),
	STOCK_DETAILS_BUYER_NAME VARCHAR(16777216),
	STOCK_DETAILS_STOCK_CONTROL_EMAIL VARCHAR(16777216),
	STOCK_DETAILS_SOH VARCHAR(16777216),
	STOCK_DETAILS_SOO VARCHAR(16777216),
	STOCK_DETAILS_AWD VARCHAR(16777216),
	STOCK_DETAILS_WEEKS_COVER VARCHAR(16777216),
	INBOUND_ORDERED_CASES VARCHAR(16777216),
	INBOUND_RECEIVED_CASES VARCHAR(16777216),
	INBOUND_PO_NUMBER VARCHAR(16777216),
	ITEM_DETAILS_ITEM_SUB_RANGE_CODE VARCHAR(16777216),
	ITEM_DETAILS_ITEM_SUB_RANGE_DESCRIPTION VARCHAR(16777216),
	ITEM_DETAILS_PACK_SIZE VARCHAR(16777216),
	ITEM_DETAILS_BUYING_MASTER_PACK VARCHAR(16777216),
	ITEM_DETAILS_RETAIL_UNIT VARCHAR(16777216),
	ITEM_DETAILS_BUY_IN_PALLET VARCHAR(16777216),
	ITEM_DETAILS_TI VARCHAR(16777216),
	ITEM_DETAILS_HI VARCHAR(16777216),
	ITEM_DETAILS_PALLET VARCHAR(16777216),
	ITEM_DETAILS_ITEM_STATUS VARCHAR(16777216),
	ITEM_DETAILS_DELETE_CODE VARCHAR(16777216),
	ITEM_DETAILS_DELETION_DATE VARCHAR(16777216),
	ITEM_DETAILS_METCASH_ITEM_TYPE VARCHAR(16777216),
	ITEM_DETAILS_ORD_SPLIT_CAT_CODE VARCHAR(16777216),
	ITEM_DETAILS_NDC_ITEM VARCHAR(16777216),
	ITEM_DETAILS_IMPORTED_GOODS VARCHAR(16777216),
	ITEM_DETAILS_CODE_DATE VARCHAR(16777216),
	ITEM_DETAILS_PACKED_ON_DATE VARCHAR(16777216),
	ITEM_DETAILS_INCREMENTAL_DAYS VARCHAR(16777216),
	ITEM_DETAILS_MAX_SHELF_DAYS VARCHAR(16777216),
	ITEM_DETAILS_RECEIVING_LIMIT VARCHAR(16777216),
	ITEM_DETAILS_DISPATCH_LIMIT VARCHAR(16777216),
	ITEM_DETAILS_CURRENT_DD VARCHAR(16777216),
	ITEM_DETAILS_DATE_ADDED_TO_OG VARCHAR(16777216),
	ITEM_DETAILS_CONSUMER_GTIN VARCHAR(16777216),
	ITEM_DETAILS_INNER_GTIN VARCHAR(16777216),
	ITEM_DETAILS_OUTER_GTIN VARCHAR(16777216),
	SALES_WEEK_6 VARCHAR(16777216),
	SALES_WEEK_5 VARCHAR(16777216),
	SALES_WEEK_4 VARCHAR(16777216),
	SALES_WEEK_3 VARCHAR(16777216),
	SALES_WEEK_2 VARCHAR(16777216),
	SALES_WEEK_1 VARCHAR(16777216),
	SALES_THIS_WEEK VARCHAR(16777216),
	CREATE_DT VARCHAR(19) NOT NULL,
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_DSTR_WOOLWORTH_INV (
	INV_DATE VARCHAR(20),
	RANK VARCHAR(10),
	ARTICLE_CODE VARCHAR(20),
	ARTICLEDESC VARCHAR(100),
	MM_CODE VARCHAR(20),
	MM_NAME VARCHAR(50),
	CM_CODE VARCHAR(20),
	CM_NAME VARCHAR(50),
	RM_CODE VARCHAR(20),
	RM_NAME VARCHAR(20),
	REP_CODE VARCHAR(20),
	REPLENISHER VARCHAR(50),
	GOODS_SUPPLIER_CODE VARCHAR(100),
	GOODS_SUPPLIER_NAME VARCHAR(100),
	LT VARCHAR(20),
	DC_CODE VARCHAR(50),
	ACD VARCHAR(50),
	RP_TYPE VARCHAR(100),
	ALC_STATUS VARCHAR(100),
	OM VARCHAR(50),
	VP VARCHAR(50),
	TI VARCHAR(50),
	HI VARCHAR(50),
	WW_STORES VARCHAR(100),
	SL_PERC VARCHAR(100),
	SL_MISSED_VALUE VARCHAR(100),
	SOH_OMS VARCHAR(100),
	SOO_OMS VARCHAR(100),
	SOH_PRICE VARCHAR(100),
	DEMAND_OMS VARCHAR(100),
	ISSUES_OMS VARCHAR(100),
	NOT_SUPPLIED_OMS VARCHAR(100),
	FAIRSHARE_OMS VARCHAR(100),
	OVERLAY_OMS VARCHAR(100),
	AWD_OMS VARCHAR(100),
	AVG_ISSUES VARCHAR(100),
	DOS_OMS VARCHAR(100),
	DUE_DATE VARCHAR(100),
	REASON VARCHAR(100),
	OOS_COMMENTS VARCHAR(200),
	OOS_28_DAYS VARCHAR(100),
	CONS_DAYS_OOS VARCHAR(100),
	TOTAL_WHOLESALE_DEMAND_OM VARCHAR(100),
	TOTAL_WHOLESALE_ISSUE_OM VARCHAR(100),
	WHOLESALE_FLAG VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCT_DIST_ACCT (
	ACCT_KEY NUMBER(10,0),
	BRANCH_KEY NUMBER(10,0),
	ID VARCHAR(50),
	SYSTEM_PRIMARY VARCHAR(10),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_OVER_AND_ABOVE_STATE (
	OVER_AND_ABOVE_KEY NUMBER(10,0),
	START_DATE VARCHAR(100),
	END_DATE VARCHAR(100),
	BATCH_COUNT NUMBER(10,0),
	STORE_CHK_HDR_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ORDER_BATCH (
	ORD_KEY NUMBER(10,0),
	BATCH_KEY NUMBER(10,0),
	BRANCH_KEY NUMBER(10,0),
	DIST_ACCT VARCHAR(100),
	DELVRY_DT VARCHAR(255),
	STATUS NUMBER(10,0),
	SUFFIX VARCHAR(10),
	SENT_DT VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_RELN_ID (
	ACCT_KEY NUMBER(10,0),
	FIELD_KEY NUMBER(10,0),
	ID VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_DIARY_ITEM (
	DIARY_ITEM_KEY NUMBER(10,0),
	DIARY_ITEM_TYPE_KEY NUMBER(10,0),
	START_TIME VARCHAR(255),
	END_TIME VARCHAR(255),
	ACCT_KEY NUMBER(10,0),
	ACCT_KEY_1 NUMBER(10,0),
	CREATE_USER_KEY NUMBER(10,0),
	COMPLETE VARCHAR(5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_USERS (
	USER_KEY NUMBER(10,0),
	DISPLAY_NAME VARCHAR(100),
	USER_TYPE_KEY NUMBER(10,0),
	USER_TYPE_DESC VARCHAR(100),
	ACTIVE VARCHAR(5),
	EMAIL_ADDRESS VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_GROUP_LVL (
	ACCT_GRP_LEV_KEY NUMBER(10,0),
	ACCT_LEV_DESC VARCHAR(100),
	ACCT_LEV_INDEX NUMBER(10,0),
	FIELD_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_HEAD_OFFICE_REQ_STATE (
	ACCT_KEY NUMBER(10,0),
	TODO_KEY NUMBER(10,0),
	PROD_GRP_KEY NUMBER(10,0),
	START_DATE VARCHAR(255),
	END_DATE VARCHAR(255),
	REQ_STATE NUMBER(10,0),
	STORE_CHK_HDR_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_API_DSTR (
	INVT_DT VARCHAR(16777216) NOT NULL,
	ARTICLE_ID VARCHAR(16777216),
	ARTICLE_DESC VARCHAR(16777216),
	PRODUCT_EAN VARCHAR(16777216),
	SITE_ID VARCHAR(16777216),
	SITE_DESC VARCHAR(16777216),
	VENDOR VARCHAR(16777216),
	VENDOR_DESC VARCHAR(16777216),
	PRODUCT_SAP_ID VARCHAR(16777216),
	COST_PRICE VARCHAR(16777216),
	CROSS_SITE_STATUS VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	NULL_COLOUMN VARCHAR(16777216),
	MTH_TOTAL_INVOICED_QTY VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	DC_SOO_QTY VARCHAR(16777216),
	SO_BACKORDER_QTY VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ORDER_DETAIL (
	ORDER_KEY NUMBER(10,0),
	BATCH_KEY NUMBER(10,0),
	LINE_KEY NUMBER(10,0),
	PROD_KEY NUMBER(10,0),
	UNIT_QTY NUMBER(10,0),
	ENTERED_QTY NUMBER(10,0),
	ENTERED_UNIT_KEY NUMBER(10,0),
	LIST_PRICE VARCHAR(25),
	NIS VARCHAR(25),
	RRP VARCHAR(25),
	DISC_KEY NUMBER(10,0),
	CREDIT_LINE_KEY NUMBER(10,0),
	CREDITED VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_AU_DSTR_CHS_HEADER (
	WAREHOUSE VARCHAR(100),
	PRODUCT_CODE VARCHAR(100),
	PRODUCT_DESC VARCHAR(100),
	SUPPLIER_PRODUCT_CODE VARCHAR(100),
	PRIMARY_GTIN VARCHAR(100),
	ABC_CODE VARCHAR(100),
	STATUS VARCHAR(100),
	LAST_COST VARCHAR(100),
	SOH_QTY VARCHAR(100),
	SOH_AMT VARCHAR(100),
	SOO_QTY VARCHAR(100),
	SOO_AMT VARCHAR(100),
	BACK_ORDER_QTY VARCHAR(100),
	MONTH_01 VARCHAR(100),
	MONTH_02 VARCHAR(100),
	MONTH_03 VARCHAR(100),
	MONTH_04 VARCHAR(100),
	MONTH_05 VARCHAR(100),
	MONTH_06 VARCHAR(100),
	MONTH_07 VARCHAR(100),
	MONTH_08 VARCHAR(100),
	MONTH_09 VARCHAR(100),
	MONTH_10 VARCHAR(100),
	MONTH_11 VARCHAR(100),
	MONTH_12 VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT (
	ACCT_KEY NUMBER(10,0),
	DISP_NAME VARCHAR(256),
	ACCT_TYPE_KEY NUMBER(10,0),
	ACTIVE VARCHAR(10),
	ACCT_STREET1 VARCHAR(256),
	ACCT_STREET2 VARCHAR(256),
	ACCT_STREET3 VARCHAR(256),
	ACCT_SUBURB VARCHAR(255),
	ACCT_POSTCODE VARCHAR(255),
	ACCT_STATECODE VARCHAR(255),
	ACCT_STATE VARCHAR(20),
	ACCT_COUNTRY VARCHAR(20),
	ACCT_PHONE VARCHAR(255),
	ACCT_FAX VARCHAR(255),
	ACCT_EMAIL VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_STORE_CHK_HDR (
	STORE_CHK_HDR_KEY NUMBER(10,0),
	DIARY_ITEM_KEY NUMBER(10,0),
	ACCT_KEY NUMBER(10,0),
	WORK_ITEM_KEY NUMBER(10,0),
	STORE_CHK_DATE VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT_GROUP_LVL (
	PROD_GRP_LEV_KEY NUMBER(10,0),
	PROD_LEV_DESC VARCHAR(100),
	PROD_LEV_INDEX NUMBER(10,0),
	FIELD_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PROD_BRANCH_IDENTIFIER (
	PROD_KEY NUMBER(10,0),
	BRANCH_KEY NUMBER(10,0),
	IDENTIFIER VARCHAR(250),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_CHS_DSTR (
	INV_DT VARCHAR(30),
	WAREHOUSE VARCHAR(255),
	PRODUCT_CODE VARCHAR(255),
	PRODUCT_DESC VARCHAR(255),
	SUPPLIER_PRODUCT_CODE VARCHAR(255),
	PRIMARY_GTIN VARCHAR(255),
	ABC_CODE VARCHAR(255),
	STATUS VARCHAR(255),
	LAST_COST NUMBER(10,4),
	SOH_QTY NUMBER(10,4),
	SOH_AMT NUMBER(10,4),
	SOO_QTY NUMBER(10,4),
	SOO_AMT NUMBER(10,4),
	BACK_ORDER_QTY NUMBER(10,4),
	MONTH_01 NUMBER(10,4),
	MONTH_02 NUMBER(10,4),
	MONTH_03 NUMBER(10,4),
	MONTH_04 NUMBER(10,4),
	MONTH_05 NUMBER(10,4),
	MONTH_06 NUMBER(10,4),
	MONTH_07 NUMBER(10,4),
	MONTH_08 NUMBER(10,4),
	MONTH_09 NUMBER(10,4),
	MONTH_10 NUMBER(10,4),
	MONTH_11 NUMBER(10,4),
	MONTH_12 NUMBER(10,4),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ORDER_TYPE (
	ORDER_TYPE_KEY NUMBER(10,0),
	ORDER_TYPE_DESC VARCHAR(255),
	SOURCE NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_AU_DSTR_SIGMA_HEADER (
	WAREHOUSE_DESC VARCHAR(16777216),
	PRODUCT_CODE VARCHAR(16777216),
	PRODUCT_DESC VARCHAR(16777216),
	TEMP VARCHAR(16777216),
	SUPPLIER_PRODUCT_CODE VARCHAR(16777216),
	EAN VARCHAR(16777216),
	VOLUME_CLAS_CODE VARCHAR(16777216),
	HANDLING_STATUS VARCHAR(16777216),
	COST_PRICE VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	SOH_AMT VARCHAR(16777216),
	STOCK_IN_TRANSIT_QTY VARCHAR(16777216),
	STOCK_IN_TRANSIT_AMT VARCHAR(16777216),
	RESTRICTED_STOCK_QTY VARCHAR(16777216),
	RESTRICTED_STOCK_AMT VARCHAR(16777216),
	SOO_QTY VARCHAR(16777216),
	SOO_AMT VARCHAR(16777216),
	BACK_ORDER_QTY VARCHAR(16777216),
	BACK_ORDER_AMT VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
	MONTH_14 VARCHAR(16777216),
	MONTH_15 VARCHAR(16777216),
	MONTH_16 VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_TYPE (
	ACCT_TYPE_KEY NUMBER(10,0),
	ACCT_TYPE_DESC VARCHAR(50),
	DSP_ORDER NUMBER(2,0),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_RANGING (
	RANGING_KEY NUMBER(10,0),
	RANGING_DESC VARCHAR(255),
	ACCT_GRP_LEV_KEY NUMBER(10,0),
	ACTIVE VARCHAR(5),
	ALL_ACCOUNTS VARCHAR(5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_GROUP (
	ACCT_GRP_KEY NUMBER(10,0),
	ACCT_GRP_LEV_KEY NUMBER(10,0),
	GRP_DESC VARCHAR(256),
	DSP_ORDER NUMBER(10,0),
	PARENT_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_DIARY_ITEM_TYPE (
	DIARY_ITEM_TYPE_KEY NUMBER(14,0),
	DIARY_ITEM_TYPE_DESC VARCHAR(255),
	DSP_ORDER NUMBER(14,0),
	ACTIVE VARCHAR(5),
	CATEGORY NUMBER(14,0),
	COUNT_IN_CALL_RATE VARCHAR(5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_DISTRIBUTOR_DETAIL (
	DIST_KEY NUMBER(10,0),
	DISTRIBUTOR VARCHAR(255),
	DIST_ID VARCHAR(255),
	BRANCH_KEY NUMBER(10,0),
	DISPLAY_NAME VARCHAR(255),
	SHORT_NAME VARCHAR(255),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_AU_DSTR_SYMBION_HEADER (
	STATE VARCHAR(16777216),
	WAREHOUSE VARCHAR(16777216),
	WAREHOUSE_DESC VARCHAR(16777216),
	SYMBION_PRODUCT_NO VARCHAR(16777216),
	SYMBION_PRODUCT_DESC VARCHAR(16777216),
	SUPPLIER_PART_NO VARCHAR(16777216),
	EAN VARCHAR(16777216),
	GLOBAL_STD_COST VARCHAR(16777216),
	DATE_INTRODUCED VARCHAR(16777216),
	DATE_LAST_RECIVED VARCHAR(16777216),
	OOSR VARCHAR(16777216),
	SOH_AMT VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	ON_ORDER VARCHAR(16777216),
	BACK_ORDER VARCHAR(16777216),
	RESERVED_AMT_FOR_ORDER VARCHAR(16777216),
	RESERVED_QTY_FOR_ORDER VARCHAR(16777216),
	RESERVED_AMT_FOR_QA VARCHAR(16777216),
	RESERVED_QTY_FOR_QA VARCHAR(16777216),
	AVAILABLE_AMT VARCHAR(16777216),
	AVAILABLE_QTY VARCHAR(16777216),
	MTD VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_OVER_AND_ABOVE (
	OVER_AND_ABOVE_KEY NUMBER(10,0),
	ACCT_KEY NUMBER(10,0),
	TODO_OPTION_KEY NUMBER(10,0),
	PROD_GRP_KEY NUMBER(10,0),
	ACTIVATED VARCHAR(10),
	NOTES VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_CALL_OBJECTIVES (
	OBJECTIVE_KEY VARCHAR(50),
	CALL_CREATED_DT VARCHAR(50),
	DESCRIPTION VARCHAR(255),
	ACCT_KEY VARCHAR(50),
	ASSIGNED_USER_KEY VARCHAR(50),
	CREATED_USER_KEY VARCHAR(50),
	DUE_DT VARCHAR(50),
	COMPLETED_DT VARCHAR(50),
	STATUS VARCHAR(50),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT (
	PROD_KEY NUMBER(10,0),
	PROD_ID VARCHAR(50),
	PROD_DESC VARCHAR(100),
	PROD_EAN VARCHAR(255),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_DSTR_COLES_INV (
	VENDOR VARCHAR(50),
	VENDOR_NAME VARCHAR(100),
	DC_STATE_SHRT_DESC VARCHAR(100),
	DC_STATE_DESC VARCHAR(100),
	DC VARCHAR(50),
	DC_DESC VARCHAR(200),
	CATEGORY VARCHAR(100),
	CATEGORY_DESC VARCHAR(200),
	ORDER_ITEM VARCHAR(50),
	ORDER_ITEM_DESC VARCHAR(500),
	EAN VARCHAR(100),
	INV_DATE VARCHAR(20),
	CLOSING_SOH_NIC VARCHAR(100),
	CLOSING_SOH_QTY_CTNS VARCHAR(100),
	CLOSING_SOH_QTY_OCTNS VARCHAR(100),
	CLOSING_SOH_QTY_UNIT VARCHAR(100),
	DC_DAYS_ON_HAND VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_SURVEY_PRODUCT_GRP_TO_CATEGORY_MAP (
	CATEGORY VARCHAR(256),
	QUESTION_PRODUCT_GROUP VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT_GROUP_RELN (
	PROD_KEY NUMBER(10,0),
	PROD_GRP_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_CONSTANTS (
	CONST_KEY NUMBER(10,0),
	CONST_DESC VARCHAR(255),
	CONST_TYPE NUMBER(10,0),
	DSPORDER NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_COMPETITIVE_BANNER_GROUP (
	MARKET VARCHAR(16777216),
	BANNER VARCHAR(16777216),
	BANNER_CLASSIFICATION VARCHAR(16777216),
	MANUFACTURER VARCHAR(16777216),
	BRAND VARCHAR(16777216),
	SKU_NAME VARCHAR(16777216),
	APN VARCHAR(16777216),
	TIME_PERIOD VARCHAR(16777216),
	UNIT VARCHAR(16777216),
	DOLLAR VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_TODO_OPTION (
	OPTION_KEY NUMBER(10,0),
	TODO_KEY NUMBER(10,0),
	OPTION_DESC VARCHAR(256),
	DSP_ORDER NUMBER(14,0),
	ACTIVE VARCHAR(5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	CASCADE_NEXT_TODO_KEY NUMBER(10,0),
	CASCADEON_ANSWERMODE NUMBER(10,0),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT_GROUP (
	PROD_GRP_KEY NUMBER(10,0),
	PROD_GRP_LEV_KEY NUMBER(10,0),
	PROD_GRP_DESC VARCHAR(100),
	DSP_ORDER NUMBER(10,0),
	PARENT_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_AU_DSTR_API_HEADER (
	ARTICLE_ID VARCHAR(16777216),
	ARTICLE_DESC VARCHAR(16777216),
	PRODUCT_EAN VARCHAR(16777216),
	SITE_ID VARCHAR(16777216),
	SITE_DESC VARCHAR(16777216),
	VENDOR VARCHAR(16777216),
	VENDOR_DESC VARCHAR(16777216),
	PRODUCT_SAP_ID VARCHAR(16777216),
	COST_PRICE VARCHAR(16777216),
	CROSS_SITE_STATUS VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	NULL_COLOUMN NUMBER(38,0),
	MTH_TOTAL_INVOICED_QTY VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	DC_SOO_QTY VARCHAR(16777216),
	SO_BACKORDER_QTY VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_DIARY_ITEM_TIME (
	DIARY_ITEM_KEY VARCHAR(50),
	DATE_TIME VARCHAR(50),
	START_TIME VARCHAR(50),
	END_TIME VARCHAR(50),
	DURATION VARCHAR(50),
	LATITUDE VARCHAR(50),
	LONGITUDE VARCHAR(50),
	GOOGLE_MAPS_URL VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_RANGING_ACCT_GRP_REL (
	RANGING_KEY NUMBER(10,0),
	ACCT_GRP_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_TODO (
	TODO_KEY NUMBER(10,0),
	TODO_TYPE NUMBER(10,0),
	TODO_DESC VARCHAR(255),
	WORK_ITEM_KEY NUMBER(10,0),
	START_DATE VARCHAR(255),
	END_DATE VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	DSP_ORDER NUMBER(10,0),
	ANS_TYPE NUMBER(10,0),
	CASCADEON_ANSWERMODE NUMBER(10,0),
	CASCADE_TODO_KEY NUMBER(10,0),
	CASCADE_NEXT_TODO_KEY NUMBER(10,0),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_HEAD_OFFICE_REQ_CHECK (
	STORE_CHK_HDR_KEY NUMBER(10,0),
	TODO_KEY NUMBER(10,0),
	PROD_GRP_KEY NUMBER(10,0),
	NOTES VARCHAR(600),
	FAIL_REASON_KEY VARCHAR(256),
	FAIL_REASON_DESC VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_WORK_ITEM (
	WORK_ITEM_KEY NUMBER(10,0),
	WORK_ITEM_DESC VARCHAR(255),
	WORK_ITEM_TYPE NUMBER(10,0),
	DIARY_ITEM_TYPE_KEY NUMBER(10,0),
	START_DATE VARCHAR(255),
	END_DATE VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_SURVEY_TARGETS (
	YEAR VARCHAR(256),
	CYCLE_START_DATE VARCHAR(256),
	CYCLE_END_DATE VARCHAR(256),
	ACCOUNT_TYPE_DESCRIPTION VARCHAR(256),
	TARGET_TYPE VARCHAR(256),
	CATEGORY VARCHAR(256),
	TERRITORY_REGION VARCHAR(256),
	TERRITORY VARCHAR(256),
	TARGET NUMBER(20,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PROD_CHK_DISTRIBUTION (
	ACCT_KEY NUMBER(10,0),
	PROD_KEY NUMBER(10,0),
	START_DATE VARCHAR(100),
	END_DATE VARCHAR(100),
	IN_DISTRIBUTION VARCHAR(5),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_SURVEY_TYPE_TO_QUESTION_MAP (
	ACCOUNT_TYPE_DESCRIPTION VARCHAR(256),
	TARGET_TYPE VARCHAR(256),
	PERENSO_QUESTIONS VARCHAR(256),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT_FIELDS (
	FIELD_KEY NUMBER(10,0),
	FIELD_DESC VARCHAR(100),
	FIELD_TYPE NUMBER(10,0),
	ACTIVE VARCHAR(10),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_SIGMA_DSTR (
	INV_DATE VARCHAR(16777216) NOT NULL,
	WAREHOUSE_DESC VARCHAR(16777216),
	PRODUCT_CODE VARCHAR(16777216),
	PRODUCT_DESC VARCHAR(16777216),
	TEMP VARCHAR(16777216),
	SUPPLIER_PRODUCT_CODE VARCHAR(16777216),
	EAN VARCHAR(16777216),
	VOLUME_CLAS_CODE VARCHAR(16777216),
	HANDLING_STATUS VARCHAR(16777216),
	COST_PRICE VARCHAR(16777216),
	SOH_QTY VARCHAR(16777216),
	SOH_AMT VARCHAR(16777216),
	STOCK_IN_TRANSIT_QTY VARCHAR(16777216),
	STOCK_IN_TRANSIT_AMT VARCHAR(16777216),
	RESTRICTED_STOCK_QTY VARCHAR(16777216),
	RESTRICTED_STOCK_AMT VARCHAR(16777216),
	SOO_QTY VARCHAR(16777216),
	SOO_AMT VARCHAR(16777216),
	BACK_ORDER_QTY VARCHAR(16777216),
	BACK_ORDER_AMT VARCHAR(16777216),
	MONTH_01 VARCHAR(16777216),
	MONTH_02 VARCHAR(16777216),
	MONTH_03 VARCHAR(16777216),
	MONTH_04 VARCHAR(16777216),
	MONTH_05 VARCHAR(16777216),
	MONTH_06 VARCHAR(16777216),
	MONTH_07 VARCHAR(16777216),
	MONTH_08 VARCHAR(16777216),
	MONTH_09 VARCHAR(16777216),
	MONTH_10 VARCHAR(16777216),
	MONTH_11 VARCHAR(16777216),
	MONTH_12 VARCHAR(16777216),
	MONTH_13 VARCHAR(16777216),
	MONTH_14 VARCHAR(16777216),
	MONTH_15 VARCHAR(16777216),
	MONTH_16 VARCHAR(16777216),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_DEAL_DISCOUNT (
	DEAL_KEY NUMBER(10,0),
	DEAL_DESC VARCHAR(255),
	START_DATE VARCHAR(255),
	END_DATE VARCHAR(255),
	SHORT_DESC VARCHAR(255),
	DISC_KEY NUMBER(10,0),
	DISCOUNT_DESC VARCHAR(255),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_SURVEY_RESULT (
	STORE_CHK_HDR_KEY NUMBER(10,0),
	LINE_KEY NUMBER(10,0),
	TODO_KEY NUMBER(10,0),
	PROD_GRP_KEY NUMBER(10,0),
	OPTIONANS NUMBER(10,0),
	NOTESANS VARCHAR(16777216),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PX_WEEKLY_SELL (
	PROMOTIONROWID VARCHAR(40),
	P_PROMONUMBER VARCHAR(40),
	TRANSACTIONLONGNAME VARCHAR(40),
	GLTT_ROWID VARCHAR(40),
	AC_LONGNAME VARCHAR(40),
	AC_CODE VARCHAR(40),
	ACTIVITY VARCHAR(40),
	SKU_STOCKCODE VARCHAR(40),
	SKU_LONGNAME VARCHAR(40),
	SKU_PROFITCENTRE VARCHAR(40),
	PROMOTIONFORECASTWEEK VARCHAR(40),
	COMMITTED_AMOUNT VARCHAR(40),
	PLANSPEND_TOTAL VARCHAR(40),
	PAID_TOTAL VARCHAR(40),
	WRITEBACK_TOT VARCHAR(40),
	BALANCE_TOT VARCHAR(40),
	CASE_QUANTITY VARCHAR(40),
	PROMOTIONITEMSTATUS VARCHAR(40),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_RANGING_PRODUCT (
	RANGING_KEY NUMBER(10,0),
	PROD_KEY NUMBER(10,0),
	ACCT_GRP_KEY NUMBER(10,0),
	CORE VARCHAR(5),
	RANGE_RANK VARCHAR(500),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_ACCOUNT_GROUP_RELN (
	ACCT_KEY NUMBER(10,0),
	ACCT_GRP_KEY NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_PERENSO_PRODUCT_RELN_ID (
	PROD_KEY NUMBER(10,0),
	FIELD_KEY NUMBER(10,0),
	ID VARCHAR(100),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.PCFSDL_RAW.SDL_OVER_AND_ABOVE_POINTS (
	DISPLAY_TYPE VARCHAR(256),
	POINTS NUMBER(10,0),
	RUN_ID NUMBER(14,0),
	CREATE_DT TIMESTAMP_NTZ(9) DEFAULT CONVERT_TIMEZONE('SGT', CAST(CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9)) AS TIMESTAMP_TZ(9))),
	FILE_NAME VARCHAR(255)
);

-- Japan
create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_OTHERS (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_AEON (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_DNKI (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_TSUR (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_CSMS (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_SUGI (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPNSDL_RAW.JP_POS_DAILY_WLCA (
	STORE_KEY_1 VARCHAR(255),
	STORE_KEY_2 VARCHAR(255),
	JAN_CODE VARCHAR(255),
	PRODUCT_NAME VARCHAR(255),
	ACCOUNTING_DATE VARCHAR(10),
	QUANTITY VARCHAR(30),
	AMOUNT VARCHAR(30),
	ACCOUNT_KEY VARCHAR(10),
	SOURCE_FILE_DATE VARCHAR(30),
	UPLOAD_DT VARCHAR(10) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'MM-DD-YYYY'),
	UPLOAD_TIME VARCHAR(8) DEFAULT TO_CHAR(CONVERT_TIMEZONE('UTC', 'Asia/Tokyo', CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_NTZ(9))), 'hh24:mi:ss'),
    FILE_NAME VARCHAR(255)
);


-- Japan DCL

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_NOTSENT (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
	REASON VARCHAR(256),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.EXTRACTION_TABLE (
	FROM_DATE VARCHAR(60),
	TO_DATE VARCHAR(60),
	PROCESSED_FLAG VARCHAR(1) DEFAULT 'N',
	ITEMID VARCHAR(256),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_KOKYA_SUBSKEY_MAPPING (
	ACCOUNTID VARCHAR(300) NOT NULL,
	CUSTOMERID VARCHAR(100) NOT NULL,
	SOURCE_FILE_DATE VARCHAR(30),
	INSERTED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_TZ(9)),
	INSERTED_BY VARCHAR(100),
	UPDATED_DATE TIMESTAMP_NTZ(9),
	UPDATED_BY VARCHAR(9),
    FILE_NAME VARCHAR(255),
	primary key (ACCOUNTID, CUSTOMERID)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_SENDJOBS (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	FROMNAME VARCHAR(150),
	FROMEMAIL VARCHAR(100),
	SCHEDTIME TIMESTAMP_NTZ(9),
	SENTTIME TIMESTAMP_NTZ(9),
	SUBJECT VARCHAR(300),
	EMAILNAME VARCHAR(100),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
	SENDDEFINITIONEXTERNALKEY VARCHAR(100),
	JOBSTATUS VARCHAR(30),
	PREVIEWURL VARCHAR(65535),
	ISMULTIPART VARCHAR(65535),
	ADDITIONAL VARCHAR(50),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_BOUNCES (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	BOUNCECATEGORY VARCHAR(60),
	SMTPCODE NUMBER(18,0),
	BOUNCEREASON VARCHAR(65535),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_CLICKS (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	SENDURLID NUMBER(38,0),
	URLID NUMBER(38,0),
	URL VARCHAR(65535),
	ALIAS VARCHAR(65535),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_OPENS (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_UNSUBS (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.KR_SPECIAL_DISCOUNT_FILE (
	PATTERNID NUMBER(18,0),
	CTL_FLG VARCHAR(64),
	C_DICHANELID NUMBER(18,0),
	C_DSDMNUMBER VARCHAR(17) DEFAULT 'C9924061001',
	C_DSDMSENDKUBUN NUMBER(18,0),
	C_DSDMSENDDATE NUMBER(18,0),
	C_DSDMNAME VARCHAR(255),
	C_DSEXTENSION1 VARCHAR(255),
	C_DSEXTENSION2 VARCHAR(255),
	C_DSEXTENSION3 VARCHAR(255),
	C_DSEXTENSION4 VARCHAR(255),
	C_DSEXTENSION5 VARCHAR(255),
	DSITEMID NUMBER(18,0),
	DSITEMNAME VARCHAR(255),
	EXTRACTION_DATE NUMBER(18,0),
	SOURCE_FILE_DATE VARCHAR(30),
	INSERTED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_TZ(9)),
	INSERTED_BY VARCHAR(10),
	UPDATED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_TZ(9)),
	UPDATED_BY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);

create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFMC_SENT (
	CLIENTID NUMBER(38,0),
	SENDID NUMBER(38,0),
	SUBSCRIBERKEY VARCHAR(300),
	EMAILADDRESS VARCHAR(300),
	SUBSCRIBERID NUMBER(38,0),
	LISTID NUMBER(38,0),
	EVENTDATE TIMESTAMP_NTZ(9),
	EVENTTYPE VARCHAR(20),
	BATCHID NUMBER(38,0),
	TRIGGEREDSENDEXTERNALKEY VARCHAR(100),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFCC_PRODUCT_CATEGORY (
	MAINCATEGORYID VARCHAR(50),
	MAINCATEGORYNAME VARCHAR(300),
	CATEGORYID VARCHAR(50),
	CATEGORYNAME VARCHAR(300),
	SUBCATEGORYID VARCHAR(150),
	SUBCATEGORYNAME VARCHAR(300),
	ID VARCHAR(50),
	PRODUCTTYPE VARCHAR(50),
	MANUFACTURERSKU VARCHAR(50),
	SOURCE_FILE_DATE VARCHAR(30),
	INSERTED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_TZ(9)),
	INSERTED_BY VARCHAR(100),
	UPDATED_DATE TIMESTAMP_NTZ(9),
	UPDATED_BY VARCHAR(9),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.CONTACT_HIST (
	"ctrlフラグ" VARCHAR(1),
	"顧客id" VARCHAR(20),
	"チャネル" VARCHAR(100),
	"コンタクト履歴番号" VARCHAR(100),
	"送付区分" VARCHAR(100),
	"送付日" VARCHAR(8),
	"件名" VARCHAR(1000),
	"拡張項目1" VARCHAR(1000),
	"拡張項目2" VARCHAR(1000),
	"拡張項目3" VARCHAR(1000),
	"拡張項目4" VARCHAR(1000),
	"拡張項目5" VARCHAR(1000),
	SOURCE_FILE_DATE VARCHAR(30),
	INSERTED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('now' AS TIMESTAMP_TZ(9)),
	INSERTED_BY VARCHAR(100),
	UPDATED_DATE TIMESTAMP_NTZ(9),
	UPDATED_BY VARCHAR(9),
    FILE_NAME VARCHAR(255)
);


create or replace TABLE PROD_DNA_LOAD.JPDCLSDL_RAW.SFCC_PRODUCT_MST (
	ID VARCHAR(20),
	PRODUCTNAME VARCHAR(300),
	AVAILABILITYSTATUS VARCHAR(150),
	IMAGETITLE VARCHAR(300),
	IMAGEURL VARCHAR(1000),
	REGULARPRICE VARCHAR(150),
	SALESPRICE VARCHAR(150),
	DISCOUNTPRICE VARCHAR(150),
	DISCOUNTAMOUNT NUMBER(18,0),
	TAXCLASSID VARCHAR(150),
	MAINCATEGORYID VARCHAR(150),
	MAINCATEGORYNAME VARCHAR(150),
	SUBCATEGORYID VARCHAR(150),
	SUBCATEGORYNAME VARCHAR(150),
	PRODUCTNAME3 VARCHAR(150),
	ONLINEFLAG VARCHAR(350),
	ONLINEFROM TIMESTAMP_NTZ(9),
	ONLINETO TIMESTAMP_NTZ(9),
	DIID VARCHAR(150),
	UUID VARCHAR(150),
	MANUFACTURERSKU VARCHAR(150),
	MASTERPRODUCTID VARCHAR(150),
	PRODUCTTYPE VARCHAR(150),
	SUBSCRIPTIONFLAG VARCHAR(350),
	PDPURL VARCHAR(1000),
	PRICE NUMBER(18,0),
	VARIATION VARCHAR(150),
	SOURCE_FILE_DATE VARCHAR(30),
	INSERTED_DATE TIMESTAMP_NTZ(9) DEFAULT CAST('CURRENT_TIMESTAMP()' AS TIMESTAMP_TZ(9)),
	INSERTED_BY VARCHAR(100),
	UPDATED_DATE TIMESTAMP_NTZ(9),
	UPDATED_BY VARCHAR(9),
    FILE_NAME VARCHAR(255)
);


