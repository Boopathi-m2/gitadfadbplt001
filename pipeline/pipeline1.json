{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": "abc.xlsx"
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinarySource",
						"type": "DatasetReference",
						"parameters": {
							"container": "dataops",
							"directory": "DQ Check Failures",
							"sourceFile": "tempFile.xlsx"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "adls_sink_binary",
						"type": "DatasetReference",
						"parameters": {
							"adls_container": "dataops",
							"adls_path": "DQ Check Failures"
						}
					}
				]
			},
			{
				"name": "Set variable1_copy1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test1",
					"value": {
						"value": "@replace(variables('test'),'.',concat('_',formatDateTime(convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time'),'yyyyMMdd_HHmmss'),'.'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": "{\n  \"ASP\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/b398da3c0a4f4850be50325f503952dc/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"CHN\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/f0665cb578094c46b29dddd4ea186a61/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"HKG\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/ac3ed430c1ee4d72a6d8859915e678ff/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"IDN\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/8717a553083e434083969ea900f83d32/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"JPN\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/955285172d4f4bf2b78d2d38fc386867/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"KOR\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/197e62552b27472b85053504e21a1953/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"MYS\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/b913f1628c39442c8580554b194c55ee/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"PCF\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/393969131bfc443d839e218ea9a06547/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"PHL\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/99782cf96c264ba8aa7ef72613e18704/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"SGP\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/fdcbd28ccf0943ff92ece9d7932c01cf/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"TWN\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/26861b46646545f19c0777e302087af6/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"THA\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/19d85b838d734fcaa78d4a2fe434a454/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"VNM\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/39a67f22c5554058b0fdb0a6ca2cf97c/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\",\n  \"IND\": \"https://kenvue.webhook.office.com/webhookb2/08067575-6f4e-4e13-a36c-bc85d41b2896@7ba64ac2-8a2b-417e-9b8f-fcf8238f2a56/IncomingWebhook/acd0598a7f55474398dcd724276ed628/b96e6ec8-5d95-42c8-9ba2-44a3024dd2ac\"\n}"
				}
			},
			{
				"name": "Set variable3",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test1",
					"value": {
						"value": "@json(variables('test'))[toUpper(pipeline().parameters.container)]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.filter.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append variable1",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "arr",
								"value": {
									"value": "@concat(' || ',item().Result,' || ')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set variable4",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": {
						"value": "@join(variables('arr'),' ')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"container": {
				"type": "string",
				"defaultValue": "ASP"
			},
			"filter": {
				"type": "object",
				"defaultValue": {
					"ItemsCount": 28,
					"FilteredItemsCount": 2,
					"Value": [
						{
							"RunStartDate": null,
							"Query": "REPLICATE [SDL_MDS_RG_ecom_plan] SELECT [brand], [ChangeTrackingMask] AS [changetrackingmask], [cluster], [Code] AS [code], [country], [EnterDateTime] AS [enterdatetime], [EnterUserName] AS [enterusername], [EnterVersionNumber] AS [enterversionnumber], [fisc_month], [fisc_year], [fiscal_quarter], [franchise], [ID] AS [id], [LastChgDateTime] AS [lastchgdatetime], [LastChgUserName] AS [lastchgusername], [LastChgVersionNumber] AS [lastchgversionnumber], [MUID] AS [muid], [Name] AS [name], [need_state], [sub_country], [target_ori], [type], [ValidationStatus] AS [validationstatus], [Version_ID] AS [version_id], [VersionFlag] AS [versionflag], [VersionName] AS [versionname], [VersionNumber] AS [versionnumber] FROM [MDS].[mdm].[RG_ecom_pla]",
							"JobName": "RG_MDSQA_To_SnowflakeDEV",
							"Status": "FAILED",
							"Detail": "2 of 28 Tasks Failed",
							"Result": "[0] [500] Could not execute the specified command: The table, MDS.mdm.RG_ecom_pla, does not exist"
						},
						{
							"RunStartDate": null,
							"Query": "REPLICATE [SDL_MDS_RG_profit_center_franchise_mapping] SELECT [ChangeTrackingMask] AS [changetrackingmask], [Code] AS [code], [EnterDateTime] AS [enterdatetime], [EnterUserName] AS [enterusername], [EnterVersionNumber] AS [enterversionnumber], [franchise_l1], [franchise_l2], [franchise_l3], [franchise_l4], [ID] AS [id], [LastChgDateTime] AS [lastchgdatetime], [LastChgUserName] AS [lastchgusername], [LastChgVersionNumber] AS [lastchgversionnumber], [MUID] AS [muid], [Name] AS [name], [need_state], [prod_minor], [prod_minor_desc], [Prod_Need_State], [profit_center], [ValidationStatus] AS [validationstatus], [Version_ID] AS [version_id], [VersionFlag] AS [versionflag], [VersionName] AS [versionname], [VersionNumber] AS [versionnumber] FROM [MDS].[mdm].[RG_profit_center_franchise_mappin]",
							"JobName": "RG_MDSQA_To_SnowflakeDEV",
							"Status": "FAILED",
							"Detail": "2 of 28 Tasks Failed",
							"Result": "[1] [500] Could not execute the specified command: The table, MDS.mdm.RG_profit_center_franchise_mappin, does not exist"
						}
					]
				}
			}
		},
		"variables": {
			"test": {
				"type": "String",
				"defaultValue": "true"
			},
			"test1": {
				"type": "String"
			},
			"arr": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Miscellaneous Pipelines"
		},
		"annotations": []
	}
}