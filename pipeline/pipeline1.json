{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": "abc.xlsx"
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinarySource",
						"type": "DatasetReference",
						"parameters": {
							"container": "dataops",
							"directory": "DQ Check Failures",
							"sourceFile": "tempFile.xlsx"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "adls_sink_binary",
						"type": "DatasetReference",
						"parameters": {
							"adls_container": "dataops",
							"adls_path": "DQ Check Failures"
						}
					}
				]
			},
			{
				"name": "Set variable1_copy1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test1",
					"value": {
						"value": "@replace(variables('test'),'.',concat('_',formatDateTime(convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time'),'yyyyMMdd_HHmmss'),'.'))",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"test": {
				"type": "String",
				"defaultValue": "true"
			},
			"test1": {
				"type": "String"
			},
			"arr": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Miscellaneous Pipelines"
		},
		"annotations": []
	}
}