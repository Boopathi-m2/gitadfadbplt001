{
	"name": "File_Archival",
	"properties": {
		"activities": [
			{
				"name": "Audit_Start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "START",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is executing for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEachSheetFromXlsx",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "FINISH",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is completed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEachSheetFromXlsx",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Move to Archive",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Is Error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinarySource",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							},
							"sourceFile": {
								"value": "@pipeline().parameters.sourceFile",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "BinaryDestination",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@{variables('tempPath')}/processed/archive@{split(pipeline().parameters.directory, variables('tempPath'))[1]}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Is Error",
				"type": "Switch",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Set temp path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.isError",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Yes",
							"activities": [
								{
									"name": "Move to Error",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BinarySource",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"sourceFile": {
													"value": "@pipeline().parameters.sourceFile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDestination",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"directory": {
													"value": "@{variables('tempPath')}/processed/error@{split(pipeline().parameters.directory, variables('tempPath'))[1]}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"name": "Is xlsx",
				"type": "Switch",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Move to Archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.sourceFile, '.')[1]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "xlsx",
							"activities": [
								{
									"name": "Delete csv",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinarySource",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"sourceFile": {
													"value": "@replace(replace(pipeline().parameters.sourceFile,'.xlsx','.csv'),' ', '_')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "ForEachSheetFromXlsx",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Is xlsx",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.sheetNames",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Delete csv one by one",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "BinarySource",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.container",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.directory",
											"type": "Expression"
										},
										"sourceFile": {
											"value": "@{replace(item(),' ','_')}.csv",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Set temp path",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Audit_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "tempPath",
					"value": {
						"value": "@{split(pipeline().parameters.directory, '/')[0]}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"category": {
				"type": "string",
				"defaultValue": "test"
			},
			"usecase_id": {
				"type": "int",
				"defaultValue": 0
			},
			"sequence_id": {
				"type": "int",
				"defaultValue": 0
			},
			"process_id": {
				"type": "int",
				"defaultValue": 0
			},
			"phase_id": {
				"type": "int",
				"defaultValue": 0
			},
			"isError": {
				"type": "string",
				"defaultValue": "Yes"
			},
			"container": {
				"type": "string",
				"defaultValue": "asp"
			},
			"directory": {
				"type": "string",
				"defaultValue": "dev/transactional/CNSC"
			},
			"sourceFile": {
				"type": "string",
				"defaultValue": "CNSC DR.CILABO SALES REPORT 202001.xlsx"
			},
			"sheetNames": {
				"type": "array",
				"defaultValue": [
					"ZZ DT",
					"HZ DT",
					"BJ DT",
					"CQ DT",
					"DL DT",
					"SY DT"
				]
			}
		},
		"variables": {
			"output": {
				"type": "String"
			},
			"index1": {
				"type": "Integer"
			},
			"index2": {
				"type": "Integer"
			},
			"indexLast": {
				"type": "Integer"
			},
			"tempPath": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Ingestion/Sources/Utilities"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-23T12:47:58Z"
	}
}