{
	"name": "Data_Export_SFMC",
	"properties": {
		"activities": [
			{
				"name": "Audit_Start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "START",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is executing for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ADLS_to_SFTP_move",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "FINISH",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is completed for use case ', string(pipeline().parameters.category), '. Check status from Tableau Refresh Status pipeline.')",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "read parameters",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set parentFolder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeV2Source",
						"query": {
							"value": "Select \n\"'table_name'\" AS table_name,\n\"'target_folder_path'\" AS target_folder_path,\n\"'schema_name'\" AS schema_name,\n\"'archival_folder_path'\" AS archival_folder_path,\n\"'unloading_query'\" AS unloading_query,\n\"'specificDay'\" AS specificDay,\n\"'container'\" AS container,\n\"'isSFTP'\" AS isSFTP\nfrom (SELECT PARAMETERS.PARAMETER_NAME,PARAMETER_VALUE,PARAMETER_GROUP_NAME,IS_SENSITIVE\nFROM META_RAW.PARAMETERS \nJOIN META_RAW.PROCESS USING (PARAMETER_GROUP_ID)\nWHERE PROCESS_ID = @{pipeline().parameters.process_id}\nAND IS_ACTIVE = TRUE)\nas A pivot ( MAX (PARAMETER_VALUE) for PARAMETER_NAME in (\n'table_name',\n'target_folder_path',\n'schema_name',\n'archival_folder_path',\n'unloading_query',\n'specificDay',\n'container',\n'isSFTP'\n));",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "mtd_process",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set parentFolder",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Audit_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "parentFolder",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.environment, 'prod'), 'prd', if(equals(pipeline().globalParameters.environment, 'dev'), 'dev', pipeline().globalParameters.environment))\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If export needed today",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "read parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('read parameters').output.value[0].specificDay,'none'),true, if(equals(activity('read parameters').output.value[0].specificDay,dayOfWeek(utcNow())),true, false))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set runExportJob2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "runExportJob",
								"value": {
									"value": "false",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set runExportJob1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "runExportJob",
								"value": {
									"value": "@'true'",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "export unload",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If export needed today",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('runExportJob')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Export Dna Core Data into ADLS csv",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeV2Source",
									"query": {
										"value": "@{activity('read parameters').output.value[0].unloading_query}",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand",
										"additionalCopyOptions": {
											"OVERWRITE": "TRUE",
											"MAX_FILE_SIZE": "5368709120"
										},
										"additionalFormatOptions": {
											"NULL_IF": "()",
											"EMPTY_FIELD_AS_NULL": "FALSE"
										}
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DNA_CORE_Dataset",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DataExportSFMC_gz",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@{activity('read parameters').output.value[0].container}",
											"type": "Expression"
										},
										"directory": {
											"value": "@{variables('parentFolder')}/@{activity('read parameters').output.value[0].ARCHIVAL_FOLDER_PATH}",
											"type": "Expression"
										},
										"fileName": {
											"value": "@{concat(activity('read parameters').output.value[0].TABLE_NAME, '_', formatDateTime(utcNow(), 'yyyyMMdd'), '.csv.gz')}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "ADLS_to_SFTP_move",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set adls_to_sftp_var",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('adls_to_sftp')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "ADLS_TO_SFTP",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "SftpWriteSettings",
										"operationTimeout": "01:00:00",
										"useTempFileRename": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "sftp_adls_source_binary_gz",
									"type": "DatasetReference",
									"parameters": {
										"adls_container": "@{activity('read parameters').output.value[0].container}",
										"adls_path": "@{variables('parentFolder')}/@{activity('read parameters').output.value[0].ARCHIVAL_FOLDER_PATH}",
										"file_name": {
											"value": "@{concat(activity('read parameters').output.value[0].TABLE_NAME, '_', formatDateTime(utcNow(), 'yyyyMMdd'), '.csv.gz')}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "BinarySFTPmarketingcloudopsjpndcl",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@{activity('read parameters').output.value[0].TARGET_FOLDER_PATH}",
											"type": "Expression"
										},
										"filename": {
											"value": "@{concat(activity('read parameters').output.value[0].TABLE_NAME, '_', formatDateTime(utcNow(), 'yyyyMMdd'), '.csv.gz')}",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set adls_to_sftp_var",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "export unload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "adls_to_sftp",
					"value": "@and(bool(equals(variables('runExportJob'), true)), equals(activity('read parameters').output.value[0].isSFTP, 'Y'))\n"
				}
			}
		],
		"parameters": {
			"category": {
				"type": "string",
				"defaultValue": "JPDCL_SFMC_Export"
			},
			"usecase_id": {
				"type": "int",
				"defaultValue": 408
			},
			"phase_id": {
				"type": "int",
				"defaultValue": 3
			},
			"sequence_id": {
				"type": "int",
				"defaultValue": 1
			},
			"process_id": {
				"type": "int",
				"defaultValue": 5070
			}
		},
		"variables": {
			"parentFolder": {
				"type": "String"
			},
			"runExportJob": {
				"type": "String"
			},
			"adls_to_sftp": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "Consumption/Consumption Systems"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-23T12:26:48Z"
	}
}