{
	"name": "MDSQA to SnowFlakeProd Temp",
	"properties": {
		"description": "Copy data from MDSQA to Temp table in SnowFlake Prod",
		"activities": [
			{
				"name": "TargetTable Parameters Exists",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(empty(pipeline().parameters.TargetTableName),empty(pipeline().parameters.SourceSchema))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "MDSQA_Copy_Data_ADLS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Query",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@variables('Query')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerSink_QA",
									"type": "DatasetReference",
									"parameters": {
										"schema": "@pipeline().parameters.SourceSchema",
										"table": "@pipeline().parameters.SourceTableName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "sql_server_sink",
									"type": "DatasetReference",
									"parameters": {
										"container": "@pipeline().parameters.Container",
										"path": "@pipeline().parameters.Path",
										"file": "@concat(pipeline().parameters.SourceTableName,'_ADFTemp.csv')"
									}
								}
							]
						},
						{
							"name": "Tuncate Target Table",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "MDSQA_Copy_Data_ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "adfadbplt001lssnfkpltdnaload",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('TRUNCATE TABLE ', pipeline().parameters.TargetSchema, '.', variables('TargetTableName'))",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Execute Procedure to load data",
							"description": "Execute Procedure to load data into Snowflake table",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Tuncate Target Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeV2Source",
									"query": {
										"value": "@concat('CALL ASPSDL_RAW.ADLSTOTABLEDATALOAD(''', pipeline().parameters.TargetSchema,''',''',variables('TargetTableName'),''',''',pipeline().parameters.Path, ''',''', pipeline().parameters.SourceTableName,'_ADFTemp'');')",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand"
									}
								},
								"dataset": {
									"referenceName": "mtd_process",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Query",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TargetTableName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Query",
								"value": {
									"value": "@if(empty(pipeline().parameters.Query) ,concat('SELECT * FROM ',pipeline().parameters.SourceSchema,'.',pipeline().parameters.SourceTableName),pipeline().parameters.Query)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TargetTableName",
							"description": "Set TargetTableName",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "TargetTableName",
								"value": {
									"value": "@if(contains(toLower(pipeline().parameters.TargetTableName),'adftemp'),pipeline().parameters.TargetTableName,concat(pipeline().parameters.TargetTableName,'_ADFTemp'))",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "MDSQASyncConfig",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "SELECT SourceSchema, SourceTableName, TargetSchema, TargetTableName FROM MDS.MDM.Regional_ADF_QASyncConfig\nWhere Is_Active_Code = 'True' and SyncType_Code = 'ForwardSync'",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerSink_QA",
									"type": "DatasetReference",
									"parameters": {
										"schema": "mdm",
										"table": "Regional_ADF_QASyncConfig"
									}
								}
							}
						},
						{
							"name": "MDS QA TableName",
							"type": "ForEach",
							"dependsOn": [
								{
									"activity": "MDSQASyncConfig",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('MDSQASyncConfig').output",
									"type": "Expression"
								},
								"isSequential": true,
								"activities": [
									{
										"name": "DecideLoad",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@item().SyncType",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "ForwardSync",
													"activities": [
														{
															"name": "ForwardSync_MDSQA_Copy_Data_ADLS",
															"type": "Copy",
															"dependsOn": [
																{
																	"activity": "ForwardSync Query",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "SqlServerSource",
																	"sqlReaderQuery": {
																		"value": "@variables('Query')",
																		"type": "Expression"
																	},
																	"queryTimeout": "02:00:00",
																	"partitionOption": "None"
																},
																"sink": {
																	"type": "DelimitedTextSink",
																	"storeSettings": {
																		"type": "AzureBlobFSWriteSettings"
																	},
																	"formatSettings": {
																		"type": "DelimitedTextWriteSettings",
																		"quoteAllText": true,
																		"fileExtension": ".txt"
																	}
																},
																"enableStaging": false,
																"translator": {
																	"type": "TabularTranslator",
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "SqlServerSink_QA",
																	"type": "DatasetReference",
																	"parameters": {
																		"schema": {
																			"value": "@item().SourceSchema",
																			"type": "Expression"
																		},
																		"table": {
																			"value": "@item().SourceTableName",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "sql_server_sink",
																	"type": "DatasetReference",
																	"parameters": {
																		"container": {
																			"value": "@pipeline().parameters.Container",
																			"type": "Expression"
																		},
																		"path": {
																			"value": "@pipeline().parameters.Path",
																			"type": "Expression"
																		},
																		"file": {
																			"value": "@concat(item().SourceTableName,'_ADFTemp.csv')",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"name": "ForwardSync_Truncate Target Table",
															"type": "Script",
															"dependsOn": [
																{
																	"activity": "ForwardSync_MDSQA_Copy_Data_ADLS",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"linkedServiceName": {
																"referenceName": "adfadbplt001lssnfkpltdnaload",
																"type": "LinkedServiceReference"
															},
															"typeProperties": {
																"scripts": [
																	{
																		"type": "Query",
																		"text": {
																			"value": "@concat('TRUNCATE TABLE ', item().TargetSchema, '.', variables('TargetTableName'))",
																			"type": "Expression"
																		}
																	}
																],
																"scriptBlockExecutionTimeout": "02:00:00"
															}
														},
														{
															"name": "ForwardSync Execute Procedure to load data",
															"description": "Execute Procedure to load data into Snowflake table",
															"type": "Lookup",
															"dependsOn": [
																{
																	"activity": "ForwardSync_Truncate Target Table",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "SnowflakeV2Source",
																	"query": {
																		"value": "@concat('CALL ASPSDL_RAW.ADLSTOTABLEDATALOAD(''', item().TargetSchema,''',''',variables('TargetTableName'),''',''',pipeline().parameters.Path, ''',''', item().SourceTableName,'_ADFTemp'');')",
																		"type": "Expression"
																	},
																	"exportSettings": {
																		"type": "SnowflakeExportCopyCommand"
																	}
																},
																"dataset": {
																	"referenceName": "mtd_process",
																	"type": "DatasetReference"
																}
															}
														},
														{
															"name": "ForwardSync Query",
															"type": "SetVariable",
															"dependsOn": [
																{
																	"activity": "ForwardSync TargetTableName",
																	"dependencyConditions": [
																		"Succeeded"
																	]
																}
															],
															"policy": {
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"variableName": "Query",
																"value": {
																	"value": "@concat('SELECT * FROM ',item().SourceSchema,'.',item().SourceTableName)",
																	"type": "Expression"
																}
															}
														},
														{
															"name": "ForwardSync TargetTableName",
															"description": "Set  ForwardSync TargetTableName",
															"type": "SetVariable",
															"dependsOn": [],
															"policy": {
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"variableName": "TargetTableName",
																"value": {
																	"value": "@if(contains(toLower(item().TargetTableName),'adftemp'),item().TargetTableName,concat(item().TargetTableName,'_ADFTemp'))",
																	"type": "Expression"
																}
															}
														}
													]
												},
												{
													"value": "ReverseSync",
													"activities": [
														{
															"name": "Execute Reverse Sync Pipeline",
															"type": "ExecutePipeline",
															"dependsOn": [],
															"policy": {
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"pipeline": {
																	"referenceName": "SnowFlakeProd to MDSQA",
																	"type": "PipelineReference"
																},
																"waitOnCompletion": true,
																"parameters": {
																	"Container": "asp",
																	"Path": {
																		"value": "qa/sql_server/MDS_Reverse_Sync/MDS_Adhoc/",
																		"type": "Expression"
																	},
																	"SourceSchema": {
																		"value": "@item().SourceSchema",
																		"type": "Expression"
																	},
																	"SourceTableName": {
																		"value": "@item().SourceTableName",
																		"type": "Expression"
																	},
																	"CopyType": {
																		"value": "@item().LoadType",
																		"type": "Expression"
																	},
																	"TargetTableName": {
																		"value": "@item().TargetTableName",
																		"type": "Expression"
																	}
																}
															}
														}
													]
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceSchema": {
				"type": "string",
				"defaultValue": "mdm"
			},
			"SourceTableName": {
				"type": "string"
			},
			"Container": {
				"type": "string",
				"defaultValue": "asp"
			},
			"Path": {
				"type": "string",
				"defaultValue": "qa/sql_server/MDS/MDS_Adhoc/"
			},
			"TargetSchema": {
				"type": "string"
			},
			"TargetTableName": {
				"type": "string"
			},
			"Query": {
				"type": "string"
			}
		},
		"variables": {
			"SnowFlakeStage": {
				"type": "String"
			},
			"Query": {
				"type": "String"
			},
			"TargetTableName": {
				"type": "String"
			},
			"FowardSyncQuery": {
				"type": "String"
			},
			"ForwardSyncTargetTableName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Miscellaneous Pipelines"
		},
		"annotations": []
	}
}