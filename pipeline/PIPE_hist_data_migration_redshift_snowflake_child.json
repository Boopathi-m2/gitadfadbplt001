{
	"name": "PIPE_hist_data_migration_redshift_snowflake_child",
	"properties": {
		"activities": [
			{
				"name": "If the table is transactional or full refresh",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.type_of_load,'Transactional')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Truncate and Copy",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Unload_Redshift To S3_Full_Refresh",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "adfadbplt001lssnfkpltdnaload",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('truncate table ',pipeline().parameters.Target_Schema,'.',pipeline().parameters.Target_Table,';',\n'COPY INTO ',pipeline().parameters.Target_Schema,'.',pipeline().parameters.Target_Table,\n' FROM ''@APAHIL01_RAW.Test_POC_stage_s3/',pipeline().parameters.Source_Schema,'_',pipeline().parameters.Source_Table, '''',\n' FILE_FORMAT = ''APAHIL01_RAW.Test_POC_file_format_s3'' ',\n';')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Unload_Redshift To S3_Full_Refresh",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AmazonRedshiftSource",
									"query": {
										"value": "@concat('unload ($$ select * from ', pipeline().parameters.Source_Schema,'.',pipeline().parameters.Source_Table,\n'$$ ) to ''s3://itx-arm-snowflake-external-stage/SBX_DNA_LAB1/AMAHIN01/DEV/',pipeline().parameters.Source_Schema,'_',pipeline().parameters.Source_Table,'/'' iam_role ''arn:aws:iam::580538643236:role/project/scm/itx-arm-app-dremioserver-developmentRole-1O5G0LI8M5O4H'' HEADER DELIMITER as ''|'' null ''\\\\N'' escape GZIP CLEANPATH PARALLEL TRUE MAXFILESIZE as 512 MB REGION as ''ap-southeast-1'' ;')",
										"type": "Expression"
									},
									"redshiftUnloadSettings": {
										"s3LinkedServiceName": {
											"referenceName": "adfadbplt001lsas3adpprd001",
											"type": "LinkedServiceReference"
										},
										"bucketName": "itx-arm-snowflake-external-stage"
									}
								},
								"dataset": {
									"referenceName": "AmazonRedshiftTable1",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Unload_Redshift To S3_Transactional",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AmazonRedshiftSource",
									"query": {
										"value": "@concat('unload ($$ select * from ', pipeline().parameters.Source_Schema,'.',pipeline().parameters.Source_Table,\n'$$ ) to ''s3://itx-arm-snowflake-external-stage/SBX_DNA_LAB1/AMAHIN01/DEV/',pipeline().parameters.Source_Schema,'_',pipeline().parameters.Source_Table,'/'' iam_role ''arn:aws:iam::580538643236:role/project/scm/itx-arm-app-dremioserver-developmentRole-1O5G0LI8M5O4H'' HEADER DELIMITER as ''|'' null ''\\\\N'' escape GZIP CLEANPATH PARALLEL TRUE MAXFILESIZE as 512 MB REGION as ''ap-southeast-1'' ;')",
										"type": "Expression"
									},
									"redshiftUnloadSettings": {
										"s3LinkedServiceName": {
											"referenceName": "adfadbplt001lsas3adpprd001",
											"type": "LinkedServiceReference"
										},
										"bucketName": "itx-arm-snowflake-external-stage"
									}
								},
								"dataset": {
									"referenceName": "AmazonRedshiftTable1",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Delete and Copy",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Unload_Redshift To S3_Transactional",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "adfadbplt001lssnfkpltdnaload",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('truncate table ',pipeline().parameters.Target_Schema,'.',pipeline().parameters.Target_Table,';',\n'COPY INTO ',pipeline().parameters.Target_Schema,'.',pipeline().parameters.Target_Table,\n' FROM ''@APAHIL01_RAW.Test_POC_stage_s3/',pipeline().parameters.Source_Schema,'_',pipeline().parameters.Source_Table, '''',\n' FILE_FORMAT = ''APAHIL01_RAW.Test_POC_file_format_s3'' ',\n';')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "Logging",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "If the table is transactional or full refresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "adfadbplt001lssnfkpltdnaload",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Select 1"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"Source_Schema": {
				"type": "string",
				"defaultValue": "rg_log"
			},
			"Source_Table": {
				"type": "string",
				"defaultValue": "etl_run_control"
			},
			"Target_Schema": {
				"type": "string",
				"defaultValue": "APAHIL01_INTEGRATION"
			},
			"Target_Table": {
				"type": "string",
				"defaultValue": "etl_run_control"
			},
			"Filter": {
				"type": "string"
			},
			"IsActive": {
				"type": "bool"
			},
			"Country_code": {
				"type": "string"
			},
			"type_of_load": {
				"type": "string"
			},
			"Id": {
				"type": "int"
			},
			"Status": {
				"type": "string"
			},
			"Target_DB": {
				"type": "string"
			}
		},
		"folder": {
			"name": "HIstorical_Data_migration_redshift_snowflake"
		},
		"annotations": []
	}
}