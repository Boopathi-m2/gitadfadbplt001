{
	"name": "SFTP",
	"properties": {
		"activities": [
			{
				"name": "audit start",
				"type": "ExecutePipeline",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "START",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is executing for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "read parameters",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "audit start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "Select SNOWFLAKE_STAGE, SNOWFLAKE_FILE_FORMAT,\n\"'val_file_header'\" AS val_file_header,\n\"'file_spec'\" AS file_spec,\n\"'val_file_name'\" AS val_file_name,\n\"'val_file_extn'\" AS val_file_extn,\n\"'load_method'\" AS load_method,\n\"'sp_name'\" AS sp_name,\n\"'sheet_index'\" AS sheet_index,\n\"'folder_path'\" AS folder_path,\n\"'target_table'\" AS target_table,\n\"'container'\" AS container,\n\"'target_schema'\" AS target_schema,\n\"'validation'\" AS validation,\n\"'index'\" AS index,\n\"'source_extn'\" AS source_extn,\n\"'sheet_names'\" AS sheet_names,\n\"'file_header_row_num'\" AS file_header_row_num,\n\"'is_truncate'\" AS is_truncate,\n\"'startRange'\" AS startRange,\nIFNULL(\"'is_direct_load'\",'N') AS is_direct_load,\n\"'header_regex'\" AS header_regex,\n\"'is_forced_truncate'\" AS is_forced_truncate\nfrom (SELECT PARAMETERS.PARAMETER_NAME,PARAMETER_VALUE,PARAMETER_GROUP_NAME,IS_SENSITIVE,SNOWFLAKE_STAGE, SNOWFLAKE_FILE_FORMAT\nFROM META_RAW.PARAMETERS \nJOIN META_RAW.PROCESS USING (PARAMETER_GROUP_ID)\nWHERE PROCESS_ID = @{pipeline().parameters.process_id}\nAND IS_ACTIVE = TRUE)\nas A pivot ( MAX (PARAMETER_VALUE) for PARAMETER_NAME in (\n'val_file_header',\n'file_spec',\n'val_file_name',\n'val_file_extn',\n'load_method',\n'sp_name',\n'sheet_index',\n'folder_path',\n'target_table',\n'container',\n'target_schema',\n'validation',\n'index',\n'source_extn',\n'sheet_names',\n'file_header_row_num',\n'is_truncate',\n'startRange',\n'is_direct_load',\n'header_regex',\n'is_forced_truncate'\n));",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "mtd_process",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "read parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinarySFTPiqviaaus",
						"type": "DatasetReference",
						"parameters": {
							"directory": "/Home/EDELIVERY/AU/01_KENVUE/WEEKLY",
							"filename": "*"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "SftpReadSettings",
						"enablePartitionDiscovery": false,
						"disableChunking": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			}
		],
		"parameters": {
			"category": {
				"type": "string"
			},
			"usecase_id": {
				"type": "int"
			},
			"sequence_id": {
				"type": "int"
			},
			"process_id": {
				"type": "int"
			},
			"phase_id": {
				"type": "int"
			}
		},
		"variables": {
			"output": {
				"type": "Array"
			},
			"output2": {
				"type": "String"
			},
			"ftp_path": {
				"type": "String"
			},
			"country_code": {
				"type": "String"
			},
			"target_table": {
				"type": "String"
			},
			"target_schema": {
				"type": "String"
			},
			"filespec": {
				"type": "String"
			},
			"stage": {
				"type": "String"
			},
			"format": {
				"type": "String"
			},
			"Isunknown": {
				"type": "Boolean"
			},
			"adls_container": {
				"type": "String"
			},
			"folder_path": {
				"type": "String"
			},
			"file_spec": {
				"type": "String"
			},
			"file_format": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Ingestion/Sources"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-28T12:20:59Z"
	}
}